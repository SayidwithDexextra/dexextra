# =================================
# DexExtra Order Book System
# Environment Configuration Template
# =================================

# =================================
# CORE INFRASTRUCTURE
# =================================

# Supabase Configuration
NEXT_PUBLIC_SUPABASE_URL=your_supabase_project_url
NEXT_PUBLIC_SUPABASE_ANON_KEY=your_supabase_anon_key
SUPABASE_SERVICE_ROLE_KEY=your_supabase_service_role_key

# Redis Configuration (Upstash)
# For Upstash Redis, use the HTTPS URL format
REDIS_URL=https://your-upstash-endpoint.upstash.io
REDIS_TOKEN=your_upstash_token

# Upstash REST (optional - auto from Redis.fromEnv when provided)
UPSTASH_REDIS_REST_URL=https://your-upstash-endpoint.upstash.io
UPSTASH_REDIS_REST_TOKEN=your_upstash_token

# =================================
# BLOCKCHAIN INFRASTRUCTURE
# =================================

# RPC & WebSocket URLs
# For Ganache local development:
# RPC_URL=http://127.0.0.1:7545
# WS_RPC_URL=ws://127.0.0.1:7545
# CHAIN_ID=1337

# For HyperLiquid Mainnet:
RPC_URL=https://rpc.hyperliquid.xyz/v1
# Optional: single backup or comma-separated list of backups
# RPC_URL_BACKUP=https://rpc.backup.example
# RPC_URLS=https://rpc-1.example,https://rpc-2.example
WS_RPC_URL=wss://ws.hyperliquid.xyz/v1
# Optional backup WS URL
# WS_RPC_URL_BACKUP=wss://testnet-ws.backup.example

# Wallet Configuration
PRIVATE_KEY=your_settlement_wallet_private_key
SETTLEMENT_WALLET_ADDRESS=0x...

# Webhook Configuration
ALCHEMY_WEBHOOK_SIGNING_KEY=your_alchemy_webhook_signing_key

# Pusher (required for real-time broadcasting)
PUSHER_APP_ID=your_pusher_app_id
PUSHER_KEY=your_pusher_key
PUSHER_SECRET=your_pusher_secret
PUSHER_CLUSTER=us2

# Client-side Pusher
NEXT_PUBLIC_PUSHER_KEY=your_pusher_key
NEXT_PUBLIC_PUSHER_CLUSTER=us2

# =================================
# SMART CONTRACT ADDRESSES
# =================================

# Core Contract Addresses
# These are shared across all markets and used as fallbacks
MOCK_USDC_ADDRESS=0x69bfB7DAB0135fB6cD3387CF411624d874B3c799
CORE_VAULT_ADDRESS=0x3F76468754fC1FA4a79C796C580824799281aCa0
LIQUIDATION_MANAGER_ADDRESS=0x93bF290F0a2039E502b87c8767c71e77A50C79C2
FUTURES_MARKET_FACTORY_ADDRESS=0x95c85427fdC7d6F04C948895fFe3dc6F84798EeC
POSITION_MANAGER_ADDRESS=0x42c68638cA5c4cBa21be2DAB2f36Fa0d9f22eD78
VAULT_ANALYTICS_ADDRESS=0x6628976668Ac05cB1e6dfBac2C1f244636cE6234
DEFAULT_ORDERBOOK_ADDRESS=0xFC27fc4786BE01510c3564117becD13fdB077bb3

# Client-side (NEXT_PUBLIC_) aliases for frontend usage
NEXT_PUBLIC_MOCK_USDC_ADDRESS=
NEXT_PUBLIC_CORE_VAULT_ADDRESS=
NEXT_PUBLIC_LIQUIDATION_MANAGER_ADDRESS=
NEXT_PUBLIC_FUTURES_MARKET_FACTORY_ADDRESS=
NEXT_PUBLIC_POSITION_MANAGER_ADDRESS=
NEXT_PUBLIC_VAULT_ANALYTICS_ADDRESS=
NEXT_PUBLIC_DEFAULT_ORDERBOOK_ADDRESS=

# Legacy Market-Specific Addresses (for backward compatibility only)
# These should eventually be removed in favor of the dynamic market loading from Supabase
ALUMINUM_ORDERBOOK_ADDRESS=0x7464aC2e8f1665099F36519315A6BdAC4de32143
ALUMINUM_MARKET_ID=0x84df5da1dc24d655e8d74a938f8fa61ebe4288d27c27238f318464ef5e6d0bb4

# Client-side (NEXT_PUBLIC_) aliases
NEXT_PUBLIC_ALUMINUM_ORDERBOOK_ADDRESS=
NEXT_PUBLIC_ALUMINUM_MARKET_ID=

# The rest of the contracts are now stored in the 'markets' table
# and loaded dynamically at runtime

# External Contracts
USDC_TOKEN_ADDRESS=0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174
UMA_FINDER_ADDRESS=0x...

# =================================
# SERVICE CONFIGURATION
# =================================

# Service Toggles
MATCHING_ENGINE_ENABLED=true
SETTLEMENT_QUEUE_ENABLED=true
WEBSOCKET_SERVICE_ENABLED=true
EVENT_INDEXER_ENABLED=true
MONITORING_SERVICE_ENABLED=true

# Disable dev/test endpoints in production by setting NODE_ENV=production on Vercel

# =================================
# PERFORMANCE TUNING
# =================================

# Order Book Performance
MAX_ORDERS_PER_LEVEL=100
MAX_ORDER_BOOK_DEPTH=50
MATCHING_LATENCY_TARGET_MS=10

# Settlement Configuration
MAX_BATCH_SIZE=50
SETTLEMENT_INTERVAL_MS=5000
CONFIRMATION_DEPTH=12
MAX_SETTLEMENT_RETRIES=3

# Database Performance
DB_CONNECTION_POOL_SIZE=20
DB_QUERY_TIMEOUT_MS=5000

# Redis Performance
REDIS_CONNECTION_POOL_SIZE=10
REDIS_COMMAND_TIMEOUT_MS=1000

# =================================
# FEE CONFIGURATION
# =================================

# Trading Fees (in basis points)
MAKER_FEE_RATE=10
TAKER_FEE_RATE=15
PROTOCOL_FEE_RATE=5

# Gas Configuration
# Buffer percent applied to estimated gas (0-500). Defaults higher on HyperTestnet to cover liquidation paths.
GAS_BUFFER_PERCENT=80
# Default fallback gas limit used when estimation fails or for viem overrides.
DEFAULT_GAS_LIMIT=12000000
# Optional clamps; set to 0 to disable clamping.
MIN_GAS_LIMIT=0
MAX_GAS_LIMIT=0
MAX_GAS_PRICE_GWEI=100
GAS_PRICE_BUFFER_PERCENTAGE=10

# =================================
# WEBSOCKET CONFIGURATION
# =================================

# WebSocket Server
WEBSOCKET_PORT=3001
MAX_WEBSOCKET_CONNECTIONS=1000
WEBSOCKET_HEARTBEAT_INTERVAL_MS=30000

# Rate Limiting
WEBSOCKET_RATE_LIMIT_POINTS=100
WEBSOCKET_RATE_LIMIT_DURATION_SEC=60
MAX_SUBSCRIPTIONS_PER_USER=50
MAX_MARKETS_PER_USER=10

# =================================
# MONITORING & ALERTS
# =================================

# Health Check Configuration
HEALTH_CHECK_INTERVAL_MS=30000
SERVICE_TIMEOUT_MS=5000

# Alert Configuration
SLACK_WEBHOOK_URL=your_slack_webhook_url_for_alerts
DISCORD_WEBHOOK_URL=your_discord_webhook_url_for_alerts
EMAIL_ALERTS_ENABLED=false
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your_email@gmail.com
SMTP_PASSWORD=your_email_password

# Performance Thresholds
MAX_MATCHING_LATENCY_MS=50
MAX_SETTLEMENT_QUEUE_SIZE=1000
MAX_DATABASE_LATENCY_MS=100
MIN_UPTIME_PERCENTAGE=99.5

# =================================
# SECURITY CONFIGURATION
# =================================

# API Security
JWT_SECRET=your_jwt_secret_key_minimum_32_chars
API_RATE_LIMIT_REQUESTS=1000
API_RATE_LIMIT_WINDOW_MS=60000

# Signature Verification
EIP712_DOMAIN_NAME=DexExtra
EIP712_DOMAIN_VERSION=1
EIP712_CHAIN_ID=999

# CORS Configuration
ALLOWED_ORIGINS=http://localhost:3000,https://your-domain.com

# =================================
# DEVELOPMENT / TESTING
# =================================

# Development Mode
NODE_ENV=development
LOG_LEVEL=debug
ENABLE_DEBUG_LOGS=true

# Testing Configuration
TEST_PRIVATE_KEY=your_test_wallet_private_key
TEST_NETWORK_RPC=https://polygon-mumbai.g.alchemy.com/v2/your_test_key
MOCK_SETTLEMENT_MODE=false

# =================================
# PRODUCTION OVERRIDES
# =================================

# Production Settings (uncomment for production)
# NODE_ENV=production
# LOG_LEVEL=info
# ENABLE_DEBUG_LOGS=false
# MONITORING_SERVICE_ENABLED=true
# SETTLEMENT_QUEUE_ENABLED=true

# Vercel URL (optional for absolute links)
# APP_URL=https://your-vercel-domain.vercel.app

# Production Security
# REQUIRE_WALLET_SIGNATURE=true
# ENABLE_IP_WHITELIST=false
# ALLOWED_IPS=192.168.1.0/24,10.0.0.0/8

# Production Performance
# DB_CONNECTION_POOL_SIZE=50
# REDIS_CONNECTION_POOL_SIZE=20
# MAX_WEBSOCKET_CONNECTIONS=5000

# =================================
# CHAIN CONFIGURATION
# =================================

# Network Settings
# For Ganache local development:
# CHAIN_ID=1337
# NETWORK_NAME=ganache
# BLOCK_EXPLORER_URL=http://localhost:7545

# For HyperLiquid Mainnet:
CHAIN_ID=999
NETWORK_NAME=hyperliquid
BLOCK_EXPLORER_URL=https://explorer.hyperliquid.xyz

# Block Processing
START_BLOCK=latest
REORG_SAFETY_DEPTH=12
BATCH_SIZE=100
MAX_BLOCKS_PER_REQUEST=2000

# =================================
# MARKET TABLE CONFIGURATION
# =================================

# Market Defaults
DEFAULT_MARKET_DECIMALS=8
DEFAULT_TICK_SIZE=0.01
DEFAULT_MINIMUM_ORDER_SIZE=0.1
DEFAULT_DATA_REQUEST_WINDOW_SECONDS=3600  # 1 hour

# Toggle saving localhost deployments to Supabase
# When true/1/yes/on, localhost runs of deploy.js will upsert markets into Supabase
# Otherwise, localhost deployments will skip saving
SAVE_TO_SUPABASE_LOCALHOST=true

# Control whether to use RPC `update_market_deployment` or direct table update.
# Default behavior: RPC is disabled on localhost (uses direct table update), enabled elsewhere.
# Set to true/1/yes/on to force RPC; false/0/no/off to force direct update.
SUPABASE_USE_RPC_UPDATE=



