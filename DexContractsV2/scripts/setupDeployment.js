const fs = require("fs");
const path = require("path");
const readline = require("readline");

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout,
});

async function askQuestion(question) {
  return new Promise((resolve) => {
    rl.question(question, (answer) => {
      resolve(answer);
    });
  });
}

async function setupDeployment() {
  console.log("üöÄ DexContractsV2 Deployment Setup");
  console.log("==================================\n");

  console.log(
    "This script will help you configure the environment for Polygon deployment.\n"
  );

  // Check if .env already exists
  const envPath = path.join(__dirname, "../.env");
  if (fs.existsSync(envPath)) {
    console.log("‚ö†Ô∏è  .env file already exists!");
    const overwrite = await askQuestion("Do you want to overwrite it? (y/N): ");
    if (overwrite.toLowerCase() !== "y" && overwrite.toLowerCase() !== "yes") {
      console.log("Deployment setup cancelled.");
      rl.close();
      return;
    }
  }

  console.log("Please provide the following information:\n");

  // Get private key
  console.log("üîë PRIVATE KEY (Required)");
  console.log("This is your wallet's private key for deployment.");
  console.log("‚ö†Ô∏è  WARNING: Never share this key or commit it to git!");
  const privateKey = await askQuestion("Enter your private key (without 0x): ");

  if (!privateKey || privateKey === "your_private_key_here_without_0x_prefix") {
    console.log("‚ùå Private key is required for deployment!");
    rl.close();
    return;
  }

  // Get RPC URL
  console.log("\nüåê POLYGON RPC URL (Optional)");
  console.log("Default: https://polygon-rpc.com/");
  const rpcUrl = await askQuestion(
    "Enter Polygon RPC URL (or press Enter for default): "
  );

  // Get Polygonscan API key
  console.log("\nüîç POLYGONSCAN API KEY (Optional)");
  console.log(
    "Used for contract verification. Get one from https://polygonscan.com/apis"
  );
  const apiKey = await askQuestion(
    "Enter Polygonscan API key (or press Enter to skip): "
  );

  // Create .env content
  const envContent = `# =============================================
# POLYGON DEPLOYMENT CONFIGURATION
# Generated by setupDeployment.js
# =============================================

# Polygon Mainnet RPC URL
POLYGON_RPC_URL=${rpcUrl || "https://polygon-rpc.com/"}

# Private key for deployment
PRIVATE_KEY=${privateKey}

# Polygonscan API Key (for contract verification)
POLYGONSCAN_API_KEY=${apiKey || ""}

# Gas settings
GAS_PRICE=30000000000
GAS_LIMIT=10000000

# Contract addresses
USDC_ADDRESS=0xbD9E0b8e723434dCd41700e82cC4C8C539F66377
`;

  // Write .env file
  try {
    fs.writeFileSync(envPath, envContent);
    console.log("\n‚úÖ .env file created successfully!");
    console.log(`üìÑ Location: ${envPath}`);

    console.log("\nüöÄ You can now run the deployment with:");
    console.log(
      "npx hardhat run scripts/deployFactorySystemProduction.js --network polygon"
    );
  } catch (error) {
    console.log("‚ùå Error creating .env file:", error.message);
  }

  rl.close();
}

// Run setup
setupDeployment().catch(console.error);
