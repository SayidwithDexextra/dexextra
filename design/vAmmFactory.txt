contract vAMMFactory {
    address[] public allMarkets;

    event MarketCreated(address market, address oracle, address collateral, uint256 initialPrice, uint256 expiry);

    function createMarket(
        address oracle,
        address collateralToken,
        uint256 initialPrice,
        uint256 expiry
    ) external returns (address) {
        vAMM market = new vAMM(oracle, collateralToken, initialPrice, expiry);
        allMarkets.push(address(market));
        emit MarketCreated(address(market), oracle, collateralToken, initialPrice, expiry);
        return address(market);
    }

    function getAllMarkets() external view returns (address[] memory) {
        return allMarkets;
    }
}

interface IERC20 {
    function transferFrom(address from, address to, uint256 amount) external returns (bool);
    function transfer(address to, uint256 amount) external returns (bool);
}

