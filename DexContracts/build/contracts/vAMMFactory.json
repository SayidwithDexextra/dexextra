{
  "contractName": "vAMMFactory",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newFee",
          "type": "uint256"
        }
      ],
      "name": "DeploymentFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "marketId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "vamm",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oracle",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "collateralToken",
          "type": "address"
        }
      ],
      "name": "MarketCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "marketId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        }
      ],
      "name": "MarketStatusChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "deploymentFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isValidMarket",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "marketCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "marketIds",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "markets",
      "outputs": [
        {
          "internalType": "address",
          "name": "vamm",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "oracle",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "createdAt",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "oracle",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "initialPrice",
          "type": "uint256"
        }
      ],
      "name": "createMarket",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "marketId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "vammAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vaultAddress",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "marketId",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        }
      ],
      "name": "setMarketStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newFee",
          "type": "uint256"
        }
      ],
      "name": "setDeploymentFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "marketId",
          "type": "bytes32"
        }
      ],
      "name": "getMarket",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "vamm",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "oracle",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "collateralToken",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "createdAt",
              "type": "uint256"
            }
          ],
          "internalType": "struct vAMMFactory.MarketInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllMarketIds",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getActiveMarkets",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "activeMarkets",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "recoverToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"DeploymentFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"marketId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vamm\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"}],\"name\":\"MarketCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"marketId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"MarketStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialPrice\",\"type\":\"uint256\"}],\"name\":\"createMarket\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"marketId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"vammAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vaultAddress\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deploymentFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveMarkets\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"activeMarkets\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllMarketIds\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"marketId\",\"type\":\"bytes32\"}],\"name\":\"getMarket\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"vamm\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"internalType\":\"struct vAMMFactory.MarketInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isValidMarket\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"marketIds\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"markets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"vamm\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"recoverToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"setDeploymentFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"marketId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"setMarketStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Factory contract for deploying vAMM instances\",\"kind\":\"dev\",\"methods\":{\"createMarket(string,address,address,uint256)\":{\"details\":\"Creates a new vAMM market\"},\"getActiveMarkets()\":{\"details\":\"Gets active markets\"},\"getAllMarketIds()\":{\"details\":\"Gets all market IDs\"},\"getMarket(bytes32)\":{\"details\":\"Gets market info by ID\"},\"recoverToken(address,uint256)\":{\"details\":\"Emergency function to recover stuck tokens\"},\"setDeploymentFee(uint256)\":{\"details\":\"Updates deployment fee\"},\"setMarketStatus(bytes32,bool)\":{\"details\":\"Updates market status\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership\"},\"withdrawFees()\":{\"details\":\"Withdraws deployment fees\"}},\"title\":\"vAMMFactory\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/vAMMFactory.sol\":\"vAMMFactory\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/IPriceOracle.sol\":{\"keccak256\":\"0x742c82e11a3d13d25c56c18544f39d81a80c5357e2a3c2a1612c2034af5e1ab4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fae77248f4ff35ad3d3f0a7820c752ebe241048189f612f1782aeffa59b083f5\",\"dweb:/ipfs/QmdNX3DV6azbvuq6nFN6a7NBCdGF3dUatDRs8tahxvpcVc\"]},\"project:/contracts/IVault.sol\":{\"keccak256\":\"0xe4219176ff5cb3872081fba871cbe6eb4d5fe45c5dae71ee8211fae306f661ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a087fab4b809c95e2166affeeb977fe6da11bae802b0ede33a613267a6dde47a\",\"dweb:/ipfs/QmXTavDugEVxuUVVmu3LmNHC1Wizi4SN1AjcAMwHG5dsgE\"]},\"project:/contracts/IvAMM.sol\":{\"keccak256\":\"0x34c86881d82b0125ecbab37fd088606263c9c6c1b8a5009e85ebce3e8767afe1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a8c7b35d4c7bdc837e6192057e0b356e0adf0821d9917c94c5961fa13e995e2\",\"dweb:/ipfs/QmaxEpjp68Zr8SjLZfkVKDc7dBe7Rcu4vYKCVV4fY9d4dm\"]},\"project:/contracts/Vault.sol\":{\"keccak256\":\"0x033879bcc7bfaa22c65ccfeedc28d9e3a1e99cf0617738d79325bc8ffe84429d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40eddda79aedc2f3a56ef7689fe8be4f6df7a3c5cb7b009c8d5a015ca5769a93\",\"dweb:/ipfs/QmQPwLfaSg9kgXvuva2Ttuion3aiy61UhxqMYmR4hoxsGh\"]},\"project:/contracts/vAMM.sol\":{\"keccak256\":\"0x8afb9823160e001be4ec30ff044ba41c2b531d57d3fb509a8f7ee8468175532f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff1f0d210ebf9ea80a35ab761698f2833eea3765f4dbc5449b34df5a218f0957\",\"dweb:/ipfs/QmT1aWbGC31RWEwqzsciYjXBrssEzCgTk8m5bYcr2qa9MH\"]},\"project:/contracts/vAMMFactory.sol\":{\"keccak256\":\"0x866c6599c07a74b79fef8ee7e975eb2a0314dde6648634a24b89be88f6821a5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8df9352a303a294cf75e2dce93b3b6a8cd9e5827434bd2a9a6e40324c5b9c5b\",\"dweb:/ipfs/QmcAhXgMt42Zt8ePrG7qvefumgBUCNTaVSbQPn5B7NetMV\"]}},\"version\":1}",
  "bytecode": "0x608060405267016345785d8a000060055534801561001b575f80fd5b505f80546001600160a01b03191633179055614daa8061003a5f395ff3fe608060405260043610620000f7575f3560e01c8063a5e973c31162000092578063d002462b116200005e578063d002462b14620002f5578063ec9790821462000319578063f2cff57f1462000330578063f2fde38b1462000347575f80fd5b8063a5e973c31462000261578063b29a81401462000287578063b85ed63614620002ab578063c3c95c7b14620002c2575f80fd5b806373d8c6bd11620000d257806373d8c6bd146200017f5780637564912b14620001bc578063779a968314620001f55780638da5cb5b1462000228575f80fd5b80632a51973314620000fb578063476343ee146200012157806358e6309f1462000138575b5f80fd5b34801562000107575f80fd5b506200011f6200011936600462001102565b6200036b565b005b3480156200012d575f80fd5b506200011f62000461565b34801562000144575f80fd5b506200016a6200015636600462001152565b60026020525f908152604090205460ff1681565b60405190151581526020015b60405180910390f35b620001966200019036600462001189565b62000585565b604080519384526001600160a01b03928316602085015291169082015260600162000176565b348015620001c8575f80fd5b50620001e0620001da3660046200126a565b62000b70565b604051620001769796959493929190620012d3565b34801562000201575f80fd5b5062000219620002133660046200126a565b62000c51565b60405190815260200162000176565b34801562000234575f80fd5b505f5462000248906001600160a01b031681565b6040516001600160a01b03909116815260200162000176565b3480156200026d575f80fd5b506200027862000c71565b60405162000176919062001326565b34801562000293575f80fd5b506200011f620002a53660046200136b565b62000de8565b348015620002b7575f80fd5b506200027862000e14565b348015620002ce575f80fd5b50620002e6620002e03660046200126a565b62000e6c565b60405162000176919062001396565b34801562000301575f80fd5b506200011f620003133660046200126a565b62000fb3565b34801562000325575f80fd5b506200021960045481565b3480156200033c575f80fd5b506200021960055481565b34801562000353575f80fd5b506200011f6200036536600462001152565b6200101a565b5f546001600160a01b03163314620003a05760405162461bcd60e51b815260040162000397906200140e565b60405180910390fd5b5f8281526001602052604090205482906001600160a01b0316620004075760405162461bcd60e51b815260206004820152601960248201527f466163746f72793a206d61726b6574206e6f7420666f756e6400000000000000604482015260640162000397565b5f83815260016020908152604091829020600501805460ff1916851515908117909155915191825284917ff74802a5f03ef3b60653fc5ef30996c42340c6f63ad2a625f0f7d4f996b28f35910160405180910390a2505050565b5f546001600160a01b031633146200048d5760405162461bcd60e51b815260040162000397906200140e565b4780620004dd5760405162461bcd60e51b815260206004820152601c60248201527f466163746f72793a206e6f206665657320746f20776974686472617700000000604482015260640162000397565b5f80546040516001600160a01b039091169083908381818185875af1925050503d805f811462000529576040519150601f19603f3d011682016040523d82523d5f602084013e6200052e565b606091505b5050905080620005815760405162461bcd60e51b815260206004820152601a60248201527f466163746f72793a207769746864726177616c206661696c6564000000000000604482015260640162000397565b5050565b5f805f600554341015620005dc5760405162461bcd60e51b815260206004820152601960248201527f466163746f72793a20696e73756666696369656e742066656500000000000000604482015260640162000397565b6001600160a01b038616620006345760405162461bcd60e51b815260206004820152601760248201527f466163746f72793a20696e76616c6964206f7261636c65000000000000000000604482015260640162000397565b6001600160a01b0385166200068c5760405162461bcd60e51b815260206004820152601b60248201527f466163746f72793a20696e76616c696420636f6c6c61746572616c0000000000604482015260640162000397565b5f875111620006de5760405162461bcd60e51b815260206004820152601760248201527f466163746f72793a20696e76616c69642073796d626f6c000000000000000000604482015260640162000397565b5f8411620007285760405162461bcd60e51b8152602060048201526016602482015275466163746f72793a20696e76616c696420707269636560501b604482015260640162000397565b86868642600454604051602001620007459594939291906200143a565b60408051601f1981840301815291815281516020928301205f81815260019093529120549093506001600160a01b031615620007bd5760405162461bcd60e51b8152602060048201526016602482015275466163746f72793a206d61726b65742065786973747360501b604482015260640162000397565b5f85604051620007cd90620010e6565b6001600160a01b039091168152602001604051809103905ff080158015620007f7573d5f803e3d5ffd5b5090508091505f8288876040516200080f90620010f4565b6001600160a01b0393841681529290911660208301526040820152606001604051809103905ff08015801562000847573d5f803e3d5ffd5b5060405163175dcc5d60e21b81526001600160a01b03808316600483015291955085925090831690635d773174906024015f604051808303815f87803b15801562000890575f80fd5b505af1158015620008a3573d5f803e3d5ffd5b505060405163f2fde38b60e01b81523360048201526001600160a01b038516925063f2fde38b91506024015f604051808303815f87803b158015620008e6575f80fd5b505af1158015620008f9573d5f803e3d5ffd5b505060405163f2fde38b60e01b81523360048201526001600160a01b038416925063f2fde38b91506024015f604051808303815f87803b1580156200093c575f80fd5b505af11580156200094f573d5f803e3d5ffd5b505050506040518060e00160405280856001600160a01b03168152602001846001600160a01b03168152602001896001600160a01b03168152602001886001600160a01b031681526020018a81526020016001151581526020014281525060015f8781526020019081526020015f205f820151815f015f6101000a8154816001600160a01b0302191690836001600160a01b031602179055506020820151816001015f6101000a8154816001600160a01b0302191690836001600160a01b031602179055506040820151816002015f6101000a8154816001600160a01b0302191690836001600160a01b031602179055506060820151816003015f6101000a8154816001600160a01b0302191690836001600160a01b03160217905550608082015181600401908162000a83919062001515565b5060a082015160058201805491151560ff1992831617905560c0909201516006909101556001600160a01b0385165f9081526002602052604081208054909216600190811790925560038054928301815581527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b909101869055600480549162000b0d83620015de565b9190505550826001600160a01b0316846001600160a01b0316867fc225f66bd854bba265bee08fc100e91c698aa86a9e70b0d9280d44f91066a93f8c8c8c60405162000b5c9392919062001603565b60405180910390a450509450945094915050565b600160208190525f9182526040909120805491810154600282015460038301546004840180546001600160a01b03968716969485169593851694909216929162000bba9062001489565b80601f016020809104026020016040519081016040528092919081815260200182805462000be89062001489565b801562000c375780601f1062000c0d5761010080835404028352916020019162000c37565b820191905f5260205f20905b81548152906001019060200180831162000c1957829003601f168201915b505050506005830154600690930154919260ff1691905087565b6003818154811062000c61575f80fd5b5f91825260209091200154905081565b60605f805b60035481101562000ce65760015f6003838154811062000c9a5762000c9a62001637565b5f918252602080832090910154835282019290925260400190206005015460ff161562000cd1578162000ccd81620015de565b9250505b8062000cdd81620015de565b91505062000c76565b508067ffffffffffffffff81111562000d035762000d0362001175565b60405190808252806020026020018201604052801562000d2d578160200160208202803683370190505b5091505f805b60035481101562000de25760015f6003838154811062000d575762000d5762001637565b5f918252602080832090910154835282019290925260400190206005015460ff161562000dcd576003818154811062000d945762000d9462001637565b905f5260205f20015484838151811062000db25762000db262001637565b60209081029190910101528162000dc981620015de565b9250505b8062000dd981620015de565b91505062000d33565b50505090565b5f546001600160a01b03163314620005815760405162461bcd60e51b815260040162000397906200140e565b6060600380548060200260200160405190810160405280929190818152602001828054801562000e6257602002820191905f5260205f20905b81548152602001906001019080831162000e4d575b5050505050905090565b6040805160e0810182525f808252602082018190529181018290526060808201839052608082015260a0810182905260c08101919091525f82815260016020818152604092839020835160e08101855281546001600160a01b0390811682529382015484169281019290925260028101548316938201939093526003830154909116606082015260048201805491929160808401919062000f0d9062001489565b80601f016020809104026020016040519081016040528092919081815260200182805462000f3b9062001489565b801562000f8a5780601f1062000f605761010080835404028352916020019162000f8a565b820191905f5260205f20905b81548152906001019060200180831162000f6c57829003601f168201915b5050509183525050600582015460ff161515602082015260069091015460409091015292915050565b5f546001600160a01b0316331462000fdf5760405162461bcd60e51b815260040162000397906200140e565b60058190556040518181527f40bd824d588484917db8fa4fc894c1e0feae5a75885290ba7b97521cebf82a809060200160405180910390a150565b5f546001600160a01b03163314620010465760405162461bcd60e51b815260040162000397906200140e565b6001600160a01b038116620010975760405162461bcd60e51b81526020600482015260166024820152752330b1ba37b93c9d1034b73b30b634b21037bbb732b960511b604482015260640162000397565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6116a9806200164c83390190565b6120808062002cf583390190565b5f806040838503121562001114575f80fd5b82359150602083013580151581146200112b575f80fd5b809150509250929050565b80356001600160a01b03811681146200114d575f80fd5b919050565b5f6020828403121562001163575f80fd5b6200116e8262001136565b9392505050565b634e487b7160e01b5f52604160045260245ffd5b5f805f80608085870312156200119d575f80fd5b843567ffffffffffffffff80821115620011b5575f80fd5b818701915087601f830112620011c9575f80fd5b813581811115620011de57620011de62001175565b604051601f8201601f19908116603f0116810190838211818310171562001209576200120962001175565b816040528281528a602084870101111562001222575f80fd5b826020860160208301375f6020848301015280985050505050506200124a6020860162001136565b92506200125a6040860162001136565b9396929550929360600135925050565b5f602082840312156200127b575f80fd5b5035919050565b5f5b838110156200129e57818101518382015260200162001284565b50505f910152565b5f8151808452620012bf81602086016020860162001282565b601f01601f19169290920160200192915050565b6001600160a01b038881168252878116602083015286811660408301528516606082015260e0608082018190525f906200131090830186620012a6565b93151560a08301525060c0015295945050505050565b602080825282518282018190525f9190848201906040850190845b818110156200135f5783518352928401929184019160010162001341565b50909695505050505050565b5f80604083850312156200137d575f80fd5b620013888362001136565b946020939093013593505050565b602081525f60018060a01b0380845116602084015280602085015116604084015280604085015116606084015280606085015116608084015250608083015160e060a0840152620013ec610100840182620012a6565b905060a0840151151560c084015260c084015160e08401528091505092915050565b6020808252601290820152712330b1ba37b93c9d103737ba1037bbb732b960711b604082015260600190565b5f86516200144d818460208b0162001282565b6bffffffffffffffffffffffff19606097881b8116919093019081529490951b1660148401526028830191909152604882015260680192915050565b600181811c908216806200149e57607f821691505b602082108103620014bd57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111562001510575f81815260208120601f850160051c81016020861015620014eb5750805b601f850160051c820191505b818110156200150c57828155600101620014f7565b5050505b505050565b815167ffffffffffffffff81111562001532576200153262001175565b6200154a8162001543845462001489565b84620014c3565b602080601f83116001811462001580575f8415620015685750858301515b5f19600386901b1c1916600185901b1785556200150c565b5f85815260208120601f198616915b82811015620015b0578886015182559484019460019091019084016200158f565b5085821015620015ce57878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b5f60018201620015fc57634e487b7160e01b5f52601160045260245ffd5b5060010190565b606081525f620016176060830186620012a6565b6001600160a01b0394851660208401529290931660409091015292915050565b634e487b7160e01b5f52603260045260245ffdfe60806040526005805460ff19169055348015610019575f80fd5b506040516116a93803806116a98339810160408190526100389161006a565b5f8054336001600160a01b031991821617909155600280549091166001600160a01b0392909216919091179055610097565b5f6020828403121561007a575f80fd5b81516001600160a01b0381168114610090575f80fd5b9392505050565b611605806100a45f395ff3fe608060405234801561000f575f80fd5b506004361061016c575f3560e01c806395ccea67116100d9578063c1c7c9dd11610093578063cf1c316a1161006e578063cf1c316a1461035b578063e098372c1461036e578063e1f1c4a714610381578063f2fde38b1461038a575f80fd5b8063c1c7c9dd14610322578063c90ba3a614610335578063cb62568014610348575f80fd5b806395ccea67146102a1578063a5d5db0c146102b4578063b2016bd4146102c7578063b39ff736146102da578063b9181611146102ed578063bcbaf4871461030f575f80fd5b80635d7731741161012a5780635d7731741461021f5780637569f4c8146102325780638456cb59146102455780638da5cb5b1461024d57806390a8ae9b146102775780639101e5b31461028e575f80fd5b80622bc16414610170578063350c35e9146101bf5780633f4ba83a146101d4578063485d7d94146101dc5780635969f96b146101ef5780635c975abb14610202575b5f80fd5b61018361017e3660046113a6565b61039d565b6040516101b691908151815260208083015190820152604080830151908201526060918201519181019190915260800190565b60405180910390f35b6101d26101cd3660046113bf565b61040e565b005b6101d26106a9565b6101d26101ea3660046113a6565b610706565b6101d26101fd3660046113e7565b610777565b60055461020f9060ff1681565b60405190151581526020016101b6565b6101d261022d3660046113a6565b610858565b6101d26102403660046113bf565b610961565b6101d2610ad1565b5f5461025f906001600160a01b031681565b6040516001600160a01b0390911681526020016101b6565b61028061138881565b6040519081526020016101b6565b6101d261029c3660046113bf565b610b31565b6101d26102af3660046113bf565b610cae565b6101d26102c23660046113bf565b610d95565b60025461025f906001600160a01b031681565b61020f6102e83660046113bf565b610f6e565b61020f6102fb3660046113a6565b60046020525f908152604090205460ff1681565b6101d261031d3660046113bf565b610fe3565b6102806103303660046113a6565b6110ce565b6102806103433660046113a6565b611130565b6101d26103563660046113bf565b61115f565b6101d26103693660046113a6565b611231565b60015461025f906001600160a01b031681565b61028061271081565b6101d26103983660046113a6565b6112f4565b6103c460405180608001604052805f81526020015f81526020015f81526020015f81525090565b506001600160a01b03165f90815260036020818152604092839020835160808101855281548152600182015492810192909252600281015493820193909352910154606082015290565b60055460ff161561043a5760405162461bcd60e51b815260040161043190611417565b60405180910390fd5b5f81116104595760405162461bcd60e51b81526004016104319061143e565b6001600160a01b03821661047f5760405162461bcd60e51b81526004016104319061146d565b336001600160a01b03831614806104a45750335f9081526004602052604090205460ff165b6104c05760405162461bcd60e51b81526004016104319061149a565b6001600160a01b0382165f90815260036020526040902080548211156105285760405162461bcd60e51b815260206004820152601e60248201527f5661756c743a20696e73756666696369656e7420636f6c6c61746572616c00006044820152606401610431565b5f610532846110ce565b9050828110156105905760405162461bcd60e51b8152602060048201526024808201527f5661756c743a20696e73756666696369656e7420617661696c61626c65206d616044820152633933b4b760e11b6064820152608401610431565b82825f015f8282546105a291906114dd565b909155505060025460405163a9059cbb60e01b81526001600160a01b038681166004830152602482018690529091169063a9059cbb906044016020604051808303815f875af11580156105f7573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061061b91906114f0565b6106605760405162461bcd60e51b815260206004820152601660248201527515985d5b1d0e881d1c985b9cd9995c8819985a5b195960521b6044820152606401610431565b836001600160a01b03167fc30fcfbcaac9e0deffa719714eaa82396ff506a0d0d0eebe170830177288715d8460405161069b91815260200190565b60405180910390a250505050565b5f546001600160a01b031633146106d25760405162461bcd60e51b81526004016104319061150f565b6005805460ff191690556040517fa45f47fdea8a1efdd9029a5691c7f759c32b7c698632b563573e155625d16933905f90a1565b5f546001600160a01b0316331461072f5760405162461bcd60e51b81526004016104319061150f565b6001600160a01b0381165f81815260046020526040808220805460ff19169055517f0fafd0343e6c6f6985727574866da48938c918559eb9521cf9cc0d317ea0f7b49190a250565b335f9081526004602052604090205460ff168061079d57505f546001600160a01b031633145b6107b95760405162461bcd60e51b81526004016104319061149a565b6001600160a01b0383166107df5760405162461bcd60e51b81526004016104319061146d565b6001600160a01b0383165f9081526003602052604081206002810180549192859261080b908490611539565b90915550506003810182905560408051848152602081018490526001600160a01b038616917f4519c0de74b8f9f16fda0005326875e3fd4dd0d38446a1135a1ffa1739e4591e910161069b565b5f546001600160a01b031633146108815760405162461bcd60e51b81526004016104319061150f565b6001600160a01b0381166108cd5760405162461bcd60e51b81526020600482015260136024820152725661756c743a20696e76616c69642076616d6d60681b6044820152606401610431565b600180546001600160a01b0319166001600160a01b03831690811782555f81815260046020526040808220805460ff1916909417909355915190917fb9b7e0cd0425b8d1399710185feab651b96089b6f0e01cb950ffb46b17227cbf91a26040516001600160a01b038216907fdd10d14f6ac19e913d4edbb11fd30661531e2ccd0d23f571e9b224f001f0dd06905f90a250565b335f9081526004602052604090205460ff168061098757505f546001600160a01b031633145b6109a35760405162461bcd60e51b81526004016104319061149a565b60055460ff16156109c65760405162461bcd60e51b815260040161043190611417565b5f81116109e55760405162461bcd60e51b81526004016104319061143e565b6001600160a01b038216610a0b5760405162461bcd60e51b81526004016104319061146d565b6001600160a01b0382165f90815260036020526040812090610a2c846110ce565b905082811015610a7e5760405162461bcd60e51b815260206004820152601a60248201527f5661756c743a20696e73756666696369656e74206d617267696e0000000000006044820152606401610431565b82826001015f828254610a919190611560565b90915550506040518381526001600160a01b038516907f7a9b1b90f35f094ffc6d04d86069c79e82c6a16eb600f79672428a409635deca9060200161069b565b5f546001600160a01b03163314610afa5760405162461bcd60e51b81526004016104319061150f565b6005805460ff191660011790556040517f9e87fac88ff661f02d44f95383c817fece4bce600a3dab7a54406878b965e752905f90a1565b335f9081526004602052604090205460ff1680610b5757505f546001600160a01b031633145b610b735760405162461bcd60e51b81526004016104319061149a565b60055460ff1615610b965760405162461bcd60e51b815260040161043190611417565b5f8111610bb55760405162461bcd60e51b81526004016104319061143e565b6001600160a01b038216610bdb5760405162461bcd60e51b81526004016104319061146d565b6001600160a01b0382165f9081526003602052604090206001810154821115610c525760405162461bcd60e51b815260206004820152602360248201527f5661756c743a20696e73756666696369656e74207265736572766564206d617260448201526233b4b760e91b6064820152608401610431565b81816001015f828254610c6591906114dd565b90915550506040518281526001600160a01b038416907f5e63d54af10545f0b2bd229512f244caefe863ad94dbbb7ad827432c84d762f5906020015b60405180910390a2505050565b5f546001600160a01b03163314610cd75760405162461bcd60e51b81526004016104319061150f565b60055460ff16610d1d5760405162461bcd60e51b815260206004820152601160248201527015985d5b1d0e881b9bdd081c185d5cd959607a1b6044820152606401610431565b5f5460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018390529083169063a9059cbb906044016020604051808303815f875af1158015610d6c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d9091906114f0565b505050565b60055460ff1615610db85760405162461bcd60e51b815260040161043190611417565b5f8111610dd75760405162461bcd60e51b81526004016104319061143e565b6001600160a01b038216610dfd5760405162461bcd60e51b81526004016104319061146d565b6001600160a01b0382163303610ed1576002546040516323b872dd60e01b81526001600160a01b03848116600483015230602483015260448201849052909116906323b872dd906064016020604051808303815f875af1158015610e63573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e8791906114f0565b610ecc5760405162461bcd60e51b815260206004820152601660248201527515985d5b1d0e881d1c985b9cd9995c8819985a5b195960521b6044820152606401610431565b610eff565b335f9081526004602052604090205460ff16610eff5760405162461bcd60e51b81526004016104319061149a565b6001600160a01b0382165f9081526003602052604081208054839290610f26908490611560565b90915550506040518181526001600160a01b038316907fd7243f6f8212d5188fd054141cf6ea89cfc0d91facb8c3afe2f88a1358480142906020015b60405180910390a25050565b6001600160a01b0382165f90815260036020526040812060018101548203610f99575f915050610fdd565b5f610fa385611130565b90505f8113610fb757600192505050610fdd565b5f612710858460010154610fcb9190611573565b610fd5919061158a565b909110925050505b92915050565b335f9081526004602052604090205460ff168061100957505f546001600160a01b031633145b6110255760405162461bcd60e51b81526004016104319061149a565b6001600160a01b03821661104b5760405162461bcd60e51b81526004016104319061146d565b6001600160a01b0382165f9081526003602052604090208115611086575f82905080826002015f82825461107f91906115a9565b9091555050505b5f6001820181905560028201556040518281526001600160a01b038416907fe538b9438650b40b382a773f4b71a35129a6b330599b42ed9b50492847972fa690602001610ca1565b6001600160a01b0381165f908152600360205260408120816110ef84611130565b90505f811361110157505f9392505050565b60018201548190811161111857505f949350505050565b600183015461112790826114dd565b95945050505050565b6001600160a01b0381165f908152600360205260408120600281015481546111589190611539565b9392505050565b335f9081526004602052604090205460ff168061118557505f546001600160a01b031633145b6111a15760405162461bcd60e51b81526004016104319061149a565b6001600160a01b0382166111c75760405162461bcd60e51b81526004016104319061146d565b6001600160a01b0382165f90815260036020526040812060020180548392906111f1908490611539565b90915550506040518181526001600160a01b038316907f22d38deb33ee15dd233167fc440609397a226eb4e1b61e1773bdd09ef99424aa90602001610f62565b5f546001600160a01b0316331461125a5760405162461bcd60e51b81526004016104319061150f565b6001600160a01b0381166112a95760405162461bcd60e51b81526020600482015260166024820152755661756c743a20696e76616c6964206164647265737360501b6044820152606401610431565b6001600160a01b0381165f81815260046020526040808220805460ff19166001179055517fdd10d14f6ac19e913d4edbb11fd30661531e2ccd0d23f571e9b224f001f0dd069190a250565b5f546001600160a01b0316331461131d5760405162461bcd60e51b81526004016104319061150f565b6001600160a01b03811661136a5760405162461bcd60e51b81526020600482015260146024820152732b30bab63a1d1034b73b30b634b21037bbb732b960611b6044820152606401610431565b5f80546001600160a01b0319166001600160a01b0392909216919091179055565b80356001600160a01b03811681146113a1575f80fd5b919050565b5f602082840312156113b6575f80fd5b6111588261138b565b5f80604083850312156113d0575f80fd5b6113d98361138b565b946020939093013593505050565b5f805f606084860312156113f9575f80fd5b6114028461138b565b95602085013595506040909401359392505050565b6020808252600d908201526c15985d5b1d0e881c185d5cd959609a1b604082015260600190565b60208082526015908201527415985d5b1d0e881a5b9d985b1a5908185b5bdd5b9d605a1b604082015260600190565b6020808252601390820152722b30bab63a1d1034b73b30b634b2103ab9b2b960691b604082015260600190565b60208082526015908201527415985d5b1d0e881b9bdd08185d5d1a1bdc9a5e9959605a1b604082015260600190565b634e487b7160e01b5f52601160045260245ffd5b81810381811115610fdd57610fdd6114c9565b5f60208284031215611500575f80fd5b81518015158114611158575f80fd5b60208082526010908201526f2b30bab63a1d103737ba1037bbb732b960811b604082015260600190565b8082018281125f831280158216821582161715611558576115586114c9565b505092915050565b80820180821115610fdd57610fdd6114c9565b8082028115828204841417610fdd57610fdd6114c9565b5f826115a457634e487b7160e01b5f52601260045260245ffd5b500490565b8181035f8312801583831316838312821617156115c8576115c86114c9565b509291505056fea2646970667358221220b23d467c0ca397da5650d47ecbf32f2c1b92d62457860399dfc3e2f60d51d54b64736f6c634300081400336080604052601e6003556101f460048190556005556103e860065562000031670de0b6b3a7640000620f4240620000fd565b6007556200004b670de0b6b3a7640000620f4240620000fd565b6008556012805460ff1916905534801562000064575f80fd5b506040516200208038038062002080833981016040819052620000879162000143565b5f8054336001600160a01b0319918216179091556001805482166001600160a01b038681169190911790915560028054909216908416179055600754670de0b6b3a764000090620000d99083620000fd565b620000e5919062000181565b600855505042600b55506305f5e100600a55620001a1565b80820281158282048414176200012157634e487b7160e01b5f52601160045260245ffd5b92915050565b80516001600160a01b03811681146200013e575f80fd5b919050565b5f805f6060848603121562000156575f80fd5b620001618462000127565b9250620001716020850162000127565b9150604084015190509250925092565b5f826200019c57634e487b7160e01b5f52601260045260245ffd5b500490565b611ed180620001af5f395ff3fe608060405234801561000f575f80fd5b506004361061024a575f3560e01c806395082d2511610140578063cf1c316a116100bf578063eaf1f1e611610084578063eaf1f1e6146104e0578063edf1a21f146104f3578063eeb07069146104fb578063f2fde38b1461050e578063f40f2a7914610521578063fbfa77cf1461052b575f80fd5b8063cf1c316a1461049f578063d2e7b978146104b2578063d97e25bc146104c5578063e01df1a8146104ce578063e1f1c4a7146104d7575f80fd5b8063ae43509a11610105578063ae43509a14610442578063b25cdccf1461044b578063b35648d714610461578063b918161114610474578063bf6268f214610496575f80fd5b806395082d251461040f57806395196f7e1461041e57806398f89b2f146104265780639b45ec9714610431578063a0640c8314610439575f80fd5b806355f57510116101cc578063604096321161019157806360409632146103b95780637dc0d1d0146103c157806383acb48a146103ec5780638456cb59146103f55780638da5cb5b146103fd575f80fd5b806355f57510146103235780635af5bfd6146103775780635bf804af1461038a5780635c975abb146103935780635fb3b1b5146103b0575f80fd5b8063485d7d9411610212578063485d7d94146102d857806349a65938146102eb57806353906a0f146102f4578063544305bf1461030757806355efb2871461031a575f80fd5b806316c197391461024e5780631ebf4eb51461029d5780632f865568146102a757806334c1557d146102ba5780633f4ba83a146102d0575b5f80fd5b61026161025c366004611bb0565b61053e565b60405161029491908151815260208083015190820152604080830151908201526060918201519181019190915260800190565b60405180910390f35b6102a56105b2565b005b6102a56102b5366004611bb0565b610721565b6102c2600181565b604051908152602001610294565b6102a5610a56565b6102a56102e6366004611bb0565b610ab3565b6102c260115481565b6102a5610302366004611bdd565b610b24565b6102c2610315366004611bb0565b610c0e565b6102c2610e1081565b610357610331366004611bb0565b600d6020525f908152604090208054600182015460028301546003909301549192909184565b604080519485526020850193909352918301526060820152608001610294565b6102a5610385366004611bdd565b610cb8565b6102c2600f5481565b6012546103a09060ff1681565b6040519015158152602001610294565b6102c260045481565b6102c2610d4c565b6002546103d4906001600160a01b031681565b6040516001600160a01b039091168152602001610294565b6102c260055481565b6102a5610d75565b5f546103d4906001600160a01b031681565b6102c2670de0b6b3a764000081565b6009546102c2565b6102c26305f5e10081565b6102c2606481565b6102c260085481565b6102c260075481565b600954600a54600b54600c546103579392919084565b6102c261046f366004611bf4565b610dd5565b6103a0610482366004611bb0565b600e6020525f908152604090205460ff1681565b6102c260105481565b6102a56104ad366004611bb0565b61126a565b6102c26104c0366004611c2d565b61132c565b6102c260065481565b6102c260035481565b6102c261271081565b6102c26104ee366004611c5b565b6113d9565b61026161189e565b6102a5610509366004611bdd565b6118f2565b6102a561051c366004611bb0565b6119bf565b6102c2620f424081565b6001546103d4906001600160a01b031681565b61056560405180608001604052805f81526020015f81526020015f81526020015f81525090565b506001600160a01b03165f908152600d6020908152604091829020825160808101845281548152600182015492810192909252600281015492820192909252600390910154606082015290565b600b546105c290610e1090611cb3565b4210156105cb57565b5f6105d4610d4c565b90505f60025f9054906101000a90046001600160a01b03166001600160a01b03166398d5fdca6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610627573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061064b9190611cc6565b90505f6305f5e1008261065e8286611cdd565b6106689190611d08565b6106729190611d1b565b90505f610680601883611d41565b9050620f42408113156106975750620f42406106b9565b6106a3620f4240611d6d565b8112156106b9576106b6620f4240611d6d565b90505b6009819055600c82905542600b55600a546106d5908290611d87565b600a81905560408051838152602081019290925281018390527fd0794ac40e87e336e6e652e1eef2cdb3793d91f30dcc09a45d18db669a686b949060600160405180910390a150505050565b60125460ff161561074d5760405162461bcd60e51b815260040161074490611dae565b60405180910390fd5b806001600160a01b0381166107995760405162461bcd60e51b81526020600482015260126024820152713b20a6a69d1034b73b30b634b2103ab9b2b960711b6044820152606401610744565b6001546005546040516359cffb9b60e11b81526001600160a01b038581166004830152602482019290925291169063b39ff73690604401602060405180830381865afa1580156107eb573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061080f9190611dd4565b6108545760405162461bcd60e51b815260206004820152601660248201527576414d4d3a2063616e6e6f74206c697175696461746560501b6044820152606401610744565b6001600160a01b0382165f908152600d6020526040812080549091036108b05760405162461bcd60e51b81526020600482015260116024820152703b20a6a69d103737903837b9b4ba34b7b760791b6044820152606401610744565b80545f90811290816108cc5782546108c790611d6d565b6108cf565b82545b90506108d96105b2565b6108e285611a55565b5f612710600454836108f49190611cdd565b6108fe9190611d08565b9050821561093a578160085f8282546109179190611def565b9250508190555081600f5f82825461092f9190611d1b565b909155506109699050565b8160075f82825461094b9190611def565b925050819055508160105f8282546109639190611d1b565b90915550505b5f610972610d4c565b6001600160a01b038881165f818152600d60205260408082208281556001808201849055600282018490556003909101929092559054905163bcbaf48760e01b815260048101929092526024820186905292935091169063bcbaf487906044015f604051808303815f87803b1580156109e9575f80fd5b505af11580156109fb573d5f803e3d5ffd5b505060408051868152602081018590529081018590523392506001600160a01b038a1691507f3ecbb371880c45545c63ac02e2364778ac379d2c14519773964068ef51bb454a9060600160405180910390a350505050505050565b5f546001600160a01b03163314610a7f5760405162461bcd60e51b815260040161074490611e02565b6012805460ff191690556040517fa45f47fdea8a1efdd9029a5691c7f759c32b7c698632b563573e155625d16933905f90a1565b5f546001600160a01b03163314610adc5760405162461bcd60e51b815260040161074490611e02565b6001600160a01b0381165f818152600e6020526040808220805460ff19169055517f0fafd0343e6c6f6985727574866da48938c918559eb9521cf9cc0d317ea0f7b49190a250565b5f546001600160a01b03163314610b4d5760405162461bcd60e51b815260040161074490611e02565b60648110158015610b6057506107d08111155b610ba25760405162461bcd60e51b815260206004820152601360248201527276414d4d3a20696e76616c696420726174696f60681b6044820152606401610744565b600581905560408051818152601691810191909152756d61696e74656e616e63654d617267696e526174696f60501b6060820152602081018290527f952177133a28eea5034c93c6c70c1a8d223da94faaa45da8412c3c791111137f906080015b60405180910390a150565b6001600160a01b0381165f908152600d6020526040812080548203610c3557505f92915050565b5f610c3e610d4c565b82549091505f9081129081610c5d578354610c5890611d6d565b610c60565b83545b90508115610c9f57670de0b6b3a7640000846001015484610c819190611def565b610c8b9083611cdd565b610c959190611d08565b9695505050505050565b670de0b6b3a7640000838560010154610c819190611def565b5f546001600160a01b03163314610ce15760405162461bcd60e51b815260040161074490611e02565b601154811115610d335760405162461bcd60e51b815260206004820152601760248201527f76414d4d3a20696e73756666696369656e7420666565730000000000000000006044820152606401610744565b8060115f828254610d449190611def565b909155505050565b5f600754670de0b6b3a7640000600854610d669190611cdd565b610d709190611d08565b905090565b5f546001600160a01b03163314610d9e5760405162461bcd60e51b815260040161074490611e02565b6012805460ff191660011790556040517f9e87fac88ff661f02d44f95383c817fece4bce600a3dab7a54406878b965e752905f90a1565b6012545f9060ff1615610dfa5760405162461bcd60e51b815260040161074490611dae565b335f908152600d602052604081208054909103610e4d5760405162461bcd60e51b81526020600482015260116024820152703b20a6a69d103737903837b9b4ba34b7b760791b6044820152606401610744565b80545f9081129081610e69578254610e6490611d6d565b610e6c565b82545b905080871115610eb35760405162461bcd60e51b815260206004820152601260248201527176414d4d3a20696e76616c69642073697a6560701b6044820152606401610744565b610ebb6105b2565b610ec433611a55565b5f610ecd610d4c565b9050868110158015610edf5750858111155b610f225760405162461bcd60e51b815260206004820152601460248201527376414d4d3a20707269636520736c69707061676560601b6044820152606401610744565b8215610f5c57670de0b6b3a7640000846001015482610f419190611def565b610f4b908a611cdd565b610f559190611d08565b9450610f8c565b670de0b6b3a7640000818560010154610f759190611def565b610f7f908a611cdd565b610f899190611d08565b94505b5f6127106003548a610f9e9190611cdd565b610fa89190611d08565b90508315610fe4578860085f828254610fc19190611def565b9250508190555088600f5f828254610fd99190611d1b565b909155506110139050565b8860075f828254610ff59190611def565b925050819055508860105f82825461100d9190611d1b565b90915550505b82890361104257335f908152600d6020526040812081815560018101829055600281018290556003015561106f565b83611059578454611054908a90611d87565b611066565b8454611066908a90611d1b565b85554260038601555b6001546001600160a01b031663cb6256803361108b848a611d1b565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044015f604051808303815f87803b1580156110ce575f80fd5b505af11580156110e0573d5f803e3d5ffd5b5050600154604051620af05960e21b81523360048201525f93508692508c916001600160a01b031690622bc16490602401608060405180830381865afa15801561112c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111509190611e2b565b6020015161115e9190611cdd565b6111689190611d08565b600154604051639101e5b360e01b8152336004820152602481018390529192506001600160a01b031690639101e5b3906044015f604051808303815f87803b1580156111b2575f80fd5b505af11580156111c4573d5f803e3d5ffd5b505050508160115f8282546111d99190611cb3565b9091555050604080518b8152602081018590529081018890526060810183905233907fda9c32aadba951abe6572af4fb5654a38201910647b4a3a0367a8e28945972f39060800160405180910390a260405182815233907f4b85f139405492fb78333512610ba07ed1e0c3fb2417f208a9aae27dc3843e6a9060200160405180910390a25050505050509392505050565b5f546001600160a01b031633146112935760405162461bcd60e51b815260040161074490611e02565b6001600160a01b0381166112e15760405162461bcd60e51b815260206004820152601560248201527476414d4d3a20696e76616c6964206164647265737360581b6044820152606401610744565b6001600160a01b0381165f818152600e6020526040808220805460ff19166001179055517fdd10d14f6ac19e913d4edbb11fd30661531e2ccd0d23f571e9b224f001f0dd069190a250565b5f80611336610d4c565b90505f8315611378575f8560085461134e9190611cb3565b600754909150611366670de0b6b3a764000083611cdd565b6113709190611d08565b9150506113ae565b5f856007546113879190611cb3565b905080670de0b6b3a76400006008546113a09190611cdd565b6113aa9190611d08565b9150505b8181116113c4576113bf8183611def565b6113ce565b6113ce8282611def565b925050505b92915050565b6012545f9060ff16156113fe5760405162461bcd60e51b815260040161074490611dae565b5f861161144d5760405162461bcd60e51b815260206004820152601860248201527f76414d4d3a20696e76616c696420636f6c6c61746572616c00000000000000006044820152606401610744565b6001841015801561145f575060648411155b6114a45760405162461bcd60e51b815260206004820152601660248201527576414d4d3a20696e76616c6964206c6576657261676560501b6044820152606401610744565b6114ac6105b2565b6114b68487611cdd565b90505f6114c1610d4c565b90508381101580156114d35750828111155b6115165760405162461bcd60e51b815260206004820152601460248201527376414d4d3a20707269636520736c69707061676560601b6044820152606401610744565b5f612710600354846115289190611cdd565b6115329190611d08565b90505f61153f828a611cb3565b600154604051630ead3e9960e31b8152336004820152602481018390529192506001600160a01b031690637569f4c8906044015f604051808303815f87803b158015611589575f80fd5b505af115801561159b573d5f803e3d5ffd5b5050335f908152600d6020526040902080549092501590506115c0576115c033611a55565b88156115fa578460085f8282546115d79190611cb3565b9250508190555084600f5f8282546115ef9190611d87565b909155506116299050565b8460075f82825461160b9190611cb3565b925050819055508460105f8282546116239190611d87565b90915550505b80545f0361165c57886116445761163f85611d6d565b611646565b845b815560018101849055600a5460028201556117ea565b80545f128915158103611751575f670de0b6b3a764000083600101548361168d57845461168890611d6d565b611690565b84545b61169a9190611cdd565b6116a49190611d08565b90505f670de0b6b3a76400006116ba888a611cdd565b6116c49190611d08565b90505f6116d18284611cb3565b9050836116f457845489906116e590611d6d565b6116ef9190611d87565b611701565b8454611701908a90611d87565b611713670de0b6b3a764000083611cdd565b61171d9190611d08565b600186015583611739578454611734908a90611d1b565b611746565b8454611746908a90611d87565b8555506117e8915050565b858161176757825461176290611d6d565b61176a565b82545b111561179b5780611787578154611782908790611d87565b611794565b8154611794908790611d1b565b82556117e8565b5f816117b15782546117ac90611d6d565b6117b4565b82545b6117be9088611def565b90508a6117d3576117ce81611d6d565b6117d5565b805b83555060018201859055600a5460028301555b505b4281600301819055508260115f8282546118049190611cb3565b9091555050604080518a1515815260208101879052908101859052606081018990526080810184905233907f0e8f4b81343afa64bc4ddcfbf2d80e883e0ddfc6663c400ca09da13d1d28d5889060a00160405180910390a260405183815233907f4b85f139405492fb78333512610ba07ed1e0c3fb2417f208a9aae27dc3843e6a9060200160405180910390a25050505095945050505050565b6118c560405180608001604052805f81526020015f81526020015f81526020015f81525090565b50604080516080810182526009548152600a546020820152600b5491810191909152600c54606082015290565b5f546001600160a01b0316331461191b5760405162461bcd60e51b815260040161074490611e02565b6103e88111156119625760405162461bcd60e51b81526020600482015260126024820152710ec829a9a7440cccaca40e8dede40d0d2ced60731b6044820152606401610744565b600381905560408051818152600e918101919091526d74726164696e674665655261746560901b6060820152602081018290527f952177133a28eea5034c93c6c70c1a8d223da94faaa45da8412c3c791111137f90608001610c03565b5f546001600160a01b031633146119e85760405162461bcd60e51b815260040161074490611e02565b6001600160a01b038116611a345760405162461bcd60e51b81526020600482015260136024820152723b20a6a69d1034b73b30b634b21037bbb732b960691b6044820152606401610744565b5f80546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381165f908152600d602052604081208054909103611a79575050565b6002810154600a545f91611a8c91611def565b9050805f03611a9a57505050565b81545f9081129081611ab6578354611ab190611d6d565b611ab9565b83545b90505f6305f5e100611acb8584611cdd565b611ad59190611d08565b90508215611ae957611ae681611d6d565b90505b600154600a54604051635969f96b60e01b81526001600160a01b038981166004830152602482018590526044820192909252911690635969f96b906064015f604051808303815f87803b158015611b3e575f80fd5b505af1158015611b50573d5f803e3d5ffd5b5050600a54600288018190556040516001600160a01b038a1693507f14b9e7b22b24fe3174a21280f7baf48fce7e6ae0b9a0a548e37bcc22ae1bdb489250611ba091858252602082015260400190565b60405180910390a2505050505050565b5f60208284031215611bc0575f80fd5b81356001600160a01b0381168114611bd6575f80fd5b9392505050565b5f60208284031215611bed575f80fd5b5035919050565b5f805f60608486031215611c06575f80fd5b505081359360208301359350604090920135919050565b8015158114611c2a575f80fd5b50565b5f8060408385031215611c3e575f80fd5b823591506020830135611c5081611c1d565b809150509250929050565b5f805f805f60a08688031215611c6f575f80fd5b853594506020860135611c8181611c1d565b94979496505050506040830135926060810135926080909101359150565b634e487b7160e01b5f52601160045260245ffd5b808201808211156113d3576113d3611c9f565b5f60208284031215611cd6575f80fd5b5051919050565b80820281158282048414176113d3576113d3611c9f565b634e487b7160e01b5f52601260045260245ffd5b5f82611d1657611d16611cf4565b500490565b8181035f831280158383131683831282161715611d3a57611d3a611c9f565b5092915050565b5f82611d4f57611d4f611cf4565b600160ff1b82145f1984141615611d6857611d68611c9f565b500590565b5f600160ff1b8201611d8157611d81611c9f565b505f0390565b8082018281125f831280158216821582161715611da657611da6611c9f565b505092915050565b6020808252600c908201526b1d9053534e881c185d5cd95960a21b604082015260600190565b5f60208284031215611de4575f80fd5b8151611bd681611c1d565b818103818111156113d3576113d3611c9f565b6020808252600f908201526e3b20a6a69d103737ba1037bbb732b960891b604082015260600190565b5f60808284031215611e3b575f80fd5b6040516080810181811067ffffffffffffffff82111715611e6a57634e487b7160e01b5f52604160045260245ffd5b806040525082518152602083015160208201526040830151604082015260608301516060820152809150509291505056fea2646970667358221220747c5a3483a71f869c5cc5e37e98617cda16b5c497e4dead9c736cf10474d5bf64736f6c63430008140033a26469706673582212208abd4da2ae49f54aec1a3e2c03ecd144031adbbd968208f23a79dbace74aa01a64736f6c63430008140033",
  "deployedBytecode": "0x608060405260043610620000f7575f3560e01c8063a5e973c31162000092578063d002462b116200005e578063d002462b14620002f5578063ec9790821462000319578063f2cff57f1462000330578063f2fde38b1462000347575f80fd5b8063a5e973c31462000261578063b29a81401462000287578063b85ed63614620002ab578063c3c95c7b14620002c2575f80fd5b806373d8c6bd11620000d257806373d8c6bd146200017f5780637564912b14620001bc578063779a968314620001f55780638da5cb5b1462000228575f80fd5b80632a51973314620000fb578063476343ee146200012157806358e6309f1462000138575b5f80fd5b34801562000107575f80fd5b506200011f6200011936600462001102565b6200036b565b005b3480156200012d575f80fd5b506200011f62000461565b34801562000144575f80fd5b506200016a6200015636600462001152565b60026020525f908152604090205460ff1681565b60405190151581526020015b60405180910390f35b620001966200019036600462001189565b62000585565b604080519384526001600160a01b03928316602085015291169082015260600162000176565b348015620001c8575f80fd5b50620001e0620001da3660046200126a565b62000b70565b604051620001769796959493929190620012d3565b34801562000201575f80fd5b5062000219620002133660046200126a565b62000c51565b60405190815260200162000176565b34801562000234575f80fd5b505f5462000248906001600160a01b031681565b6040516001600160a01b03909116815260200162000176565b3480156200026d575f80fd5b506200027862000c71565b60405162000176919062001326565b34801562000293575f80fd5b506200011f620002a53660046200136b565b62000de8565b348015620002b7575f80fd5b506200027862000e14565b348015620002ce575f80fd5b50620002e6620002e03660046200126a565b62000e6c565b60405162000176919062001396565b34801562000301575f80fd5b506200011f620003133660046200126a565b62000fb3565b34801562000325575f80fd5b506200021960045481565b3480156200033c575f80fd5b506200021960055481565b34801562000353575f80fd5b506200011f6200036536600462001152565b6200101a565b5f546001600160a01b03163314620003a05760405162461bcd60e51b815260040162000397906200140e565b60405180910390fd5b5f8281526001602052604090205482906001600160a01b0316620004075760405162461bcd60e51b815260206004820152601960248201527f466163746f72793a206d61726b6574206e6f7420666f756e6400000000000000604482015260640162000397565b5f83815260016020908152604091829020600501805460ff1916851515908117909155915191825284917ff74802a5f03ef3b60653fc5ef30996c42340c6f63ad2a625f0f7d4f996b28f35910160405180910390a2505050565b5f546001600160a01b031633146200048d5760405162461bcd60e51b815260040162000397906200140e565b4780620004dd5760405162461bcd60e51b815260206004820152601c60248201527f466163746f72793a206e6f206665657320746f20776974686472617700000000604482015260640162000397565b5f80546040516001600160a01b039091169083908381818185875af1925050503d805f811462000529576040519150601f19603f3d011682016040523d82523d5f602084013e6200052e565b606091505b5050905080620005815760405162461bcd60e51b815260206004820152601a60248201527f466163746f72793a207769746864726177616c206661696c6564000000000000604482015260640162000397565b5050565b5f805f600554341015620005dc5760405162461bcd60e51b815260206004820152601960248201527f466163746f72793a20696e73756666696369656e742066656500000000000000604482015260640162000397565b6001600160a01b038616620006345760405162461bcd60e51b815260206004820152601760248201527f466163746f72793a20696e76616c6964206f7261636c65000000000000000000604482015260640162000397565b6001600160a01b0385166200068c5760405162461bcd60e51b815260206004820152601b60248201527f466163746f72793a20696e76616c696420636f6c6c61746572616c0000000000604482015260640162000397565b5f875111620006de5760405162461bcd60e51b815260206004820152601760248201527f466163746f72793a20696e76616c69642073796d626f6c000000000000000000604482015260640162000397565b5f8411620007285760405162461bcd60e51b8152602060048201526016602482015275466163746f72793a20696e76616c696420707269636560501b604482015260640162000397565b86868642600454604051602001620007459594939291906200143a565b60408051601f1981840301815291815281516020928301205f81815260019093529120549093506001600160a01b031615620007bd5760405162461bcd60e51b8152602060048201526016602482015275466163746f72793a206d61726b65742065786973747360501b604482015260640162000397565b5f85604051620007cd90620010e6565b6001600160a01b039091168152602001604051809103905ff080158015620007f7573d5f803e3d5ffd5b5090508091505f8288876040516200080f90620010f4565b6001600160a01b0393841681529290911660208301526040820152606001604051809103905ff08015801562000847573d5f803e3d5ffd5b5060405163175dcc5d60e21b81526001600160a01b03808316600483015291955085925090831690635d773174906024015f604051808303815f87803b15801562000890575f80fd5b505af1158015620008a3573d5f803e3d5ffd5b505060405163f2fde38b60e01b81523360048201526001600160a01b038516925063f2fde38b91506024015f604051808303815f87803b158015620008e6575f80fd5b505af1158015620008f9573d5f803e3d5ffd5b505060405163f2fde38b60e01b81523360048201526001600160a01b038416925063f2fde38b91506024015f604051808303815f87803b1580156200093c575f80fd5b505af11580156200094f573d5f803e3d5ffd5b505050506040518060e00160405280856001600160a01b03168152602001846001600160a01b03168152602001896001600160a01b03168152602001886001600160a01b031681526020018a81526020016001151581526020014281525060015f8781526020019081526020015f205f820151815f015f6101000a8154816001600160a01b0302191690836001600160a01b031602179055506020820151816001015f6101000a8154816001600160a01b0302191690836001600160a01b031602179055506040820151816002015f6101000a8154816001600160a01b0302191690836001600160a01b031602179055506060820151816003015f6101000a8154816001600160a01b0302191690836001600160a01b03160217905550608082015181600401908162000a83919062001515565b5060a082015160058201805491151560ff1992831617905560c0909201516006909101556001600160a01b0385165f9081526002602052604081208054909216600190811790925560038054928301815581527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b909101869055600480549162000b0d83620015de565b9190505550826001600160a01b0316846001600160a01b0316867fc225f66bd854bba265bee08fc100e91c698aa86a9e70b0d9280d44f91066a93f8c8c8c60405162000b5c9392919062001603565b60405180910390a450509450945094915050565b600160208190525f9182526040909120805491810154600282015460038301546004840180546001600160a01b03968716969485169593851694909216929162000bba9062001489565b80601f016020809104026020016040519081016040528092919081815260200182805462000be89062001489565b801562000c375780601f1062000c0d5761010080835404028352916020019162000c37565b820191905f5260205f20905b81548152906001019060200180831162000c1957829003601f168201915b505050506005830154600690930154919260ff1691905087565b6003818154811062000c61575f80fd5b5f91825260209091200154905081565b60605f805b60035481101562000ce65760015f6003838154811062000c9a5762000c9a62001637565b5f918252602080832090910154835282019290925260400190206005015460ff161562000cd1578162000ccd81620015de565b9250505b8062000cdd81620015de565b91505062000c76565b508067ffffffffffffffff81111562000d035762000d0362001175565b60405190808252806020026020018201604052801562000d2d578160200160208202803683370190505b5091505f805b60035481101562000de25760015f6003838154811062000d575762000d5762001637565b5f918252602080832090910154835282019290925260400190206005015460ff161562000dcd576003818154811062000d945762000d9462001637565b905f5260205f20015484838151811062000db25762000db262001637565b60209081029190910101528162000dc981620015de565b9250505b8062000dd981620015de565b91505062000d33565b50505090565b5f546001600160a01b03163314620005815760405162461bcd60e51b815260040162000397906200140e565b6060600380548060200260200160405190810160405280929190818152602001828054801562000e6257602002820191905f5260205f20905b81548152602001906001019080831162000e4d575b5050505050905090565b6040805160e0810182525f808252602082018190529181018290526060808201839052608082015260a0810182905260c08101919091525f82815260016020818152604092839020835160e08101855281546001600160a01b0390811682529382015484169281019290925260028101548316938201939093526003830154909116606082015260048201805491929160808401919062000f0d9062001489565b80601f016020809104026020016040519081016040528092919081815260200182805462000f3b9062001489565b801562000f8a5780601f1062000f605761010080835404028352916020019162000f8a565b820191905f5260205f20905b81548152906001019060200180831162000f6c57829003601f168201915b5050509183525050600582015460ff161515602082015260069091015460409091015292915050565b5f546001600160a01b0316331462000fdf5760405162461bcd60e51b815260040162000397906200140e565b60058190556040518181527f40bd824d588484917db8fa4fc894c1e0feae5a75885290ba7b97521cebf82a809060200160405180910390a150565b5f546001600160a01b03163314620010465760405162461bcd60e51b815260040162000397906200140e565b6001600160a01b038116620010975760405162461bcd60e51b81526020600482015260166024820152752330b1ba37b93c9d1034b73b30b634b21037bbb732b960511b604482015260640162000397565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6116a9806200164c83390190565b6120808062002cf583390190565b5f806040838503121562001114575f80fd5b82359150602083013580151581146200112b575f80fd5b809150509250929050565b80356001600160a01b03811681146200114d575f80fd5b919050565b5f6020828403121562001163575f80fd5b6200116e8262001136565b9392505050565b634e487b7160e01b5f52604160045260245ffd5b5f805f80608085870312156200119d575f80fd5b843567ffffffffffffffff80821115620011b5575f80fd5b818701915087601f830112620011c9575f80fd5b813581811115620011de57620011de62001175565b604051601f8201601f19908116603f0116810190838211818310171562001209576200120962001175565b816040528281528a602084870101111562001222575f80fd5b826020860160208301375f6020848301015280985050505050506200124a6020860162001136565b92506200125a6040860162001136565b9396929550929360600135925050565b5f602082840312156200127b575f80fd5b5035919050565b5f5b838110156200129e57818101518382015260200162001284565b50505f910152565b5f8151808452620012bf81602086016020860162001282565b601f01601f19169290920160200192915050565b6001600160a01b038881168252878116602083015286811660408301528516606082015260e0608082018190525f906200131090830186620012a6565b93151560a08301525060c0015295945050505050565b602080825282518282018190525f9190848201906040850190845b818110156200135f5783518352928401929184019160010162001341565b50909695505050505050565b5f80604083850312156200137d575f80fd5b620013888362001136565b946020939093013593505050565b602081525f60018060a01b0380845116602084015280602085015116604084015280604085015116606084015280606085015116608084015250608083015160e060a0840152620013ec610100840182620012a6565b905060a0840151151560c084015260c084015160e08401528091505092915050565b6020808252601290820152712330b1ba37b93c9d103737ba1037bbb732b960711b604082015260600190565b5f86516200144d818460208b0162001282565b6bffffffffffffffffffffffff19606097881b8116919093019081529490951b1660148401526028830191909152604882015260680192915050565b600181811c908216806200149e57607f821691505b602082108103620014bd57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111562001510575f81815260208120601f850160051c81016020861015620014eb5750805b601f850160051c820191505b818110156200150c57828155600101620014f7565b5050505b505050565b815167ffffffffffffffff81111562001532576200153262001175565b6200154a8162001543845462001489565b84620014c3565b602080601f83116001811462001580575f8415620015685750858301515b5f19600386901b1c1916600185901b1785556200150c565b5f85815260208120601f198616915b82811015620015b0578886015182559484019460019091019084016200158f565b5085821015620015ce57878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b5f60018201620015fc57634e487b7160e01b5f52601160045260245ffd5b5060010190565b606081525f620016176060830186620012a6565b6001600160a01b0394851660208401529290931660409091015292915050565b634e487b7160e01b5f52603260045260245ffdfe60806040526005805460ff19169055348015610019575f80fd5b506040516116a93803806116a98339810160408190526100389161006a565b5f8054336001600160a01b031991821617909155600280549091166001600160a01b0392909216919091179055610097565b5f6020828403121561007a575f80fd5b81516001600160a01b0381168114610090575f80fd5b9392505050565b611605806100a45f395ff3fe608060405234801561000f575f80fd5b506004361061016c575f3560e01c806395ccea67116100d9578063c1c7c9dd11610093578063cf1c316a1161006e578063cf1c316a1461035b578063e098372c1461036e578063e1f1c4a714610381578063f2fde38b1461038a575f80fd5b8063c1c7c9dd14610322578063c90ba3a614610335578063cb62568014610348575f80fd5b806395ccea67146102a1578063a5d5db0c146102b4578063b2016bd4146102c7578063b39ff736146102da578063b9181611146102ed578063bcbaf4871461030f575f80fd5b80635d7731741161012a5780635d7731741461021f5780637569f4c8146102325780638456cb59146102455780638da5cb5b1461024d57806390a8ae9b146102775780639101e5b31461028e575f80fd5b80622bc16414610170578063350c35e9146101bf5780633f4ba83a146101d4578063485d7d94146101dc5780635969f96b146101ef5780635c975abb14610202575b5f80fd5b61018361017e3660046113a6565b61039d565b6040516101b691908151815260208083015190820152604080830151908201526060918201519181019190915260800190565b60405180910390f35b6101d26101cd3660046113bf565b61040e565b005b6101d26106a9565b6101d26101ea3660046113a6565b610706565b6101d26101fd3660046113e7565b610777565b60055461020f9060ff1681565b60405190151581526020016101b6565b6101d261022d3660046113a6565b610858565b6101d26102403660046113bf565b610961565b6101d2610ad1565b5f5461025f906001600160a01b031681565b6040516001600160a01b0390911681526020016101b6565b61028061138881565b6040519081526020016101b6565b6101d261029c3660046113bf565b610b31565b6101d26102af3660046113bf565b610cae565b6101d26102c23660046113bf565b610d95565b60025461025f906001600160a01b031681565b61020f6102e83660046113bf565b610f6e565b61020f6102fb3660046113a6565b60046020525f908152604090205460ff1681565b6101d261031d3660046113bf565b610fe3565b6102806103303660046113a6565b6110ce565b6102806103433660046113a6565b611130565b6101d26103563660046113bf565b61115f565b6101d26103693660046113a6565b611231565b60015461025f906001600160a01b031681565b61028061271081565b6101d26103983660046113a6565b6112f4565b6103c460405180608001604052805f81526020015f81526020015f81526020015f81525090565b506001600160a01b03165f90815260036020818152604092839020835160808101855281548152600182015492810192909252600281015493820193909352910154606082015290565b60055460ff161561043a5760405162461bcd60e51b815260040161043190611417565b60405180910390fd5b5f81116104595760405162461bcd60e51b81526004016104319061143e565b6001600160a01b03821661047f5760405162461bcd60e51b81526004016104319061146d565b336001600160a01b03831614806104a45750335f9081526004602052604090205460ff165b6104c05760405162461bcd60e51b81526004016104319061149a565b6001600160a01b0382165f90815260036020526040902080548211156105285760405162461bcd60e51b815260206004820152601e60248201527f5661756c743a20696e73756666696369656e7420636f6c6c61746572616c00006044820152606401610431565b5f610532846110ce565b9050828110156105905760405162461bcd60e51b8152602060048201526024808201527f5661756c743a20696e73756666696369656e7420617661696c61626c65206d616044820152633933b4b760e11b6064820152608401610431565b82825f015f8282546105a291906114dd565b909155505060025460405163a9059cbb60e01b81526001600160a01b038681166004830152602482018690529091169063a9059cbb906044016020604051808303815f875af11580156105f7573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061061b91906114f0565b6106605760405162461bcd60e51b815260206004820152601660248201527515985d5b1d0e881d1c985b9cd9995c8819985a5b195960521b6044820152606401610431565b836001600160a01b03167fc30fcfbcaac9e0deffa719714eaa82396ff506a0d0d0eebe170830177288715d8460405161069b91815260200190565b60405180910390a250505050565b5f546001600160a01b031633146106d25760405162461bcd60e51b81526004016104319061150f565b6005805460ff191690556040517fa45f47fdea8a1efdd9029a5691c7f759c32b7c698632b563573e155625d16933905f90a1565b5f546001600160a01b0316331461072f5760405162461bcd60e51b81526004016104319061150f565b6001600160a01b0381165f81815260046020526040808220805460ff19169055517f0fafd0343e6c6f6985727574866da48938c918559eb9521cf9cc0d317ea0f7b49190a250565b335f9081526004602052604090205460ff168061079d57505f546001600160a01b031633145b6107b95760405162461bcd60e51b81526004016104319061149a565b6001600160a01b0383166107df5760405162461bcd60e51b81526004016104319061146d565b6001600160a01b0383165f9081526003602052604081206002810180549192859261080b908490611539565b90915550506003810182905560408051848152602081018490526001600160a01b038616917f4519c0de74b8f9f16fda0005326875e3fd4dd0d38446a1135a1ffa1739e4591e910161069b565b5f546001600160a01b031633146108815760405162461bcd60e51b81526004016104319061150f565b6001600160a01b0381166108cd5760405162461bcd60e51b81526020600482015260136024820152725661756c743a20696e76616c69642076616d6d60681b6044820152606401610431565b600180546001600160a01b0319166001600160a01b03831690811782555f81815260046020526040808220805460ff1916909417909355915190917fb9b7e0cd0425b8d1399710185feab651b96089b6f0e01cb950ffb46b17227cbf91a26040516001600160a01b038216907fdd10d14f6ac19e913d4edbb11fd30661531e2ccd0d23f571e9b224f001f0dd06905f90a250565b335f9081526004602052604090205460ff168061098757505f546001600160a01b031633145b6109a35760405162461bcd60e51b81526004016104319061149a565b60055460ff16156109c65760405162461bcd60e51b815260040161043190611417565b5f81116109e55760405162461bcd60e51b81526004016104319061143e565b6001600160a01b038216610a0b5760405162461bcd60e51b81526004016104319061146d565b6001600160a01b0382165f90815260036020526040812090610a2c846110ce565b905082811015610a7e5760405162461bcd60e51b815260206004820152601a60248201527f5661756c743a20696e73756666696369656e74206d617267696e0000000000006044820152606401610431565b82826001015f828254610a919190611560565b90915550506040518381526001600160a01b038516907f7a9b1b90f35f094ffc6d04d86069c79e82c6a16eb600f79672428a409635deca9060200161069b565b5f546001600160a01b03163314610afa5760405162461bcd60e51b81526004016104319061150f565b6005805460ff191660011790556040517f9e87fac88ff661f02d44f95383c817fece4bce600a3dab7a54406878b965e752905f90a1565b335f9081526004602052604090205460ff1680610b5757505f546001600160a01b031633145b610b735760405162461bcd60e51b81526004016104319061149a565b60055460ff1615610b965760405162461bcd60e51b815260040161043190611417565b5f8111610bb55760405162461bcd60e51b81526004016104319061143e565b6001600160a01b038216610bdb5760405162461bcd60e51b81526004016104319061146d565b6001600160a01b0382165f9081526003602052604090206001810154821115610c525760405162461bcd60e51b815260206004820152602360248201527f5661756c743a20696e73756666696369656e74207265736572766564206d617260448201526233b4b760e91b6064820152608401610431565b81816001015f828254610c6591906114dd565b90915550506040518281526001600160a01b038416907f5e63d54af10545f0b2bd229512f244caefe863ad94dbbb7ad827432c84d762f5906020015b60405180910390a2505050565b5f546001600160a01b03163314610cd75760405162461bcd60e51b81526004016104319061150f565b60055460ff16610d1d5760405162461bcd60e51b815260206004820152601160248201527015985d5b1d0e881b9bdd081c185d5cd959607a1b6044820152606401610431565b5f5460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018390529083169063a9059cbb906044016020604051808303815f875af1158015610d6c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d9091906114f0565b505050565b60055460ff1615610db85760405162461bcd60e51b815260040161043190611417565b5f8111610dd75760405162461bcd60e51b81526004016104319061143e565b6001600160a01b038216610dfd5760405162461bcd60e51b81526004016104319061146d565b6001600160a01b0382163303610ed1576002546040516323b872dd60e01b81526001600160a01b03848116600483015230602483015260448201849052909116906323b872dd906064016020604051808303815f875af1158015610e63573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e8791906114f0565b610ecc5760405162461bcd60e51b815260206004820152601660248201527515985d5b1d0e881d1c985b9cd9995c8819985a5b195960521b6044820152606401610431565b610eff565b335f9081526004602052604090205460ff16610eff5760405162461bcd60e51b81526004016104319061149a565b6001600160a01b0382165f9081526003602052604081208054839290610f26908490611560565b90915550506040518181526001600160a01b038316907fd7243f6f8212d5188fd054141cf6ea89cfc0d91facb8c3afe2f88a1358480142906020015b60405180910390a25050565b6001600160a01b0382165f90815260036020526040812060018101548203610f99575f915050610fdd565b5f610fa385611130565b90505f8113610fb757600192505050610fdd565b5f612710858460010154610fcb9190611573565b610fd5919061158a565b909110925050505b92915050565b335f9081526004602052604090205460ff168061100957505f546001600160a01b031633145b6110255760405162461bcd60e51b81526004016104319061149a565b6001600160a01b03821661104b5760405162461bcd60e51b81526004016104319061146d565b6001600160a01b0382165f9081526003602052604090208115611086575f82905080826002015f82825461107f91906115a9565b9091555050505b5f6001820181905560028201556040518281526001600160a01b038416907fe538b9438650b40b382a773f4b71a35129a6b330599b42ed9b50492847972fa690602001610ca1565b6001600160a01b0381165f908152600360205260408120816110ef84611130565b90505f811361110157505f9392505050565b60018201548190811161111857505f949350505050565b600183015461112790826114dd565b95945050505050565b6001600160a01b0381165f908152600360205260408120600281015481546111589190611539565b9392505050565b335f9081526004602052604090205460ff168061118557505f546001600160a01b031633145b6111a15760405162461bcd60e51b81526004016104319061149a565b6001600160a01b0382166111c75760405162461bcd60e51b81526004016104319061146d565b6001600160a01b0382165f90815260036020526040812060020180548392906111f1908490611539565b90915550506040518181526001600160a01b038316907f22d38deb33ee15dd233167fc440609397a226eb4e1b61e1773bdd09ef99424aa90602001610f62565b5f546001600160a01b0316331461125a5760405162461bcd60e51b81526004016104319061150f565b6001600160a01b0381166112a95760405162461bcd60e51b81526020600482015260166024820152755661756c743a20696e76616c6964206164647265737360501b6044820152606401610431565b6001600160a01b0381165f81815260046020526040808220805460ff19166001179055517fdd10d14f6ac19e913d4edbb11fd30661531e2ccd0d23f571e9b224f001f0dd069190a250565b5f546001600160a01b0316331461131d5760405162461bcd60e51b81526004016104319061150f565b6001600160a01b03811661136a5760405162461bcd60e51b81526020600482015260146024820152732b30bab63a1d1034b73b30b634b21037bbb732b960611b6044820152606401610431565b5f80546001600160a01b0319166001600160a01b0392909216919091179055565b80356001600160a01b03811681146113a1575f80fd5b919050565b5f602082840312156113b6575f80fd5b6111588261138b565b5f80604083850312156113d0575f80fd5b6113d98361138b565b946020939093013593505050565b5f805f606084860312156113f9575f80fd5b6114028461138b565b95602085013595506040909401359392505050565b6020808252600d908201526c15985d5b1d0e881c185d5cd959609a1b604082015260600190565b60208082526015908201527415985d5b1d0e881a5b9d985b1a5908185b5bdd5b9d605a1b604082015260600190565b6020808252601390820152722b30bab63a1d1034b73b30b634b2103ab9b2b960691b604082015260600190565b60208082526015908201527415985d5b1d0e881b9bdd08185d5d1a1bdc9a5e9959605a1b604082015260600190565b634e487b7160e01b5f52601160045260245ffd5b81810381811115610fdd57610fdd6114c9565b5f60208284031215611500575f80fd5b81518015158114611158575f80fd5b60208082526010908201526f2b30bab63a1d103737ba1037bbb732b960811b604082015260600190565b8082018281125f831280158216821582161715611558576115586114c9565b505092915050565b80820180821115610fdd57610fdd6114c9565b8082028115828204841417610fdd57610fdd6114c9565b5f826115a457634e487b7160e01b5f52601260045260245ffd5b500490565b8181035f8312801583831316838312821617156115c8576115c86114c9565b509291505056fea2646970667358221220b23d467c0ca397da5650d47ecbf32f2c1b92d62457860399dfc3e2f60d51d54b64736f6c634300081400336080604052601e6003556101f460048190556005556103e860065562000031670de0b6b3a7640000620f4240620000fd565b6007556200004b670de0b6b3a7640000620f4240620000fd565b6008556012805460ff1916905534801562000064575f80fd5b506040516200208038038062002080833981016040819052620000879162000143565b5f8054336001600160a01b0319918216179091556001805482166001600160a01b038681169190911790915560028054909216908416179055600754670de0b6b3a764000090620000d99083620000fd565b620000e5919062000181565b600855505042600b55506305f5e100600a55620001a1565b80820281158282048414176200012157634e487b7160e01b5f52601160045260245ffd5b92915050565b80516001600160a01b03811681146200013e575f80fd5b919050565b5f805f6060848603121562000156575f80fd5b620001618462000127565b9250620001716020850162000127565b9150604084015190509250925092565b5f826200019c57634e487b7160e01b5f52601260045260245ffd5b500490565b611ed180620001af5f395ff3fe608060405234801561000f575f80fd5b506004361061024a575f3560e01c806395082d2511610140578063cf1c316a116100bf578063eaf1f1e611610084578063eaf1f1e6146104e0578063edf1a21f146104f3578063eeb07069146104fb578063f2fde38b1461050e578063f40f2a7914610521578063fbfa77cf1461052b575f80fd5b8063cf1c316a1461049f578063d2e7b978146104b2578063d97e25bc146104c5578063e01df1a8146104ce578063e1f1c4a7146104d7575f80fd5b8063ae43509a11610105578063ae43509a14610442578063b25cdccf1461044b578063b35648d714610461578063b918161114610474578063bf6268f214610496575f80fd5b806395082d251461040f57806395196f7e1461041e57806398f89b2f146104265780639b45ec9714610431578063a0640c8314610439575f80fd5b806355f57510116101cc578063604096321161019157806360409632146103b95780637dc0d1d0146103c157806383acb48a146103ec5780638456cb59146103f55780638da5cb5b146103fd575f80fd5b806355f57510146103235780635af5bfd6146103775780635bf804af1461038a5780635c975abb146103935780635fb3b1b5146103b0575f80fd5b8063485d7d9411610212578063485d7d94146102d857806349a65938146102eb57806353906a0f146102f4578063544305bf1461030757806355efb2871461031a575f80fd5b806316c197391461024e5780631ebf4eb51461029d5780632f865568146102a757806334c1557d146102ba5780633f4ba83a146102d0575b5f80fd5b61026161025c366004611bb0565b61053e565b60405161029491908151815260208083015190820152604080830151908201526060918201519181019190915260800190565b60405180910390f35b6102a56105b2565b005b6102a56102b5366004611bb0565b610721565b6102c2600181565b604051908152602001610294565b6102a5610a56565b6102a56102e6366004611bb0565b610ab3565b6102c260115481565b6102a5610302366004611bdd565b610b24565b6102c2610315366004611bb0565b610c0e565b6102c2610e1081565b610357610331366004611bb0565b600d6020525f908152604090208054600182015460028301546003909301549192909184565b604080519485526020850193909352918301526060820152608001610294565b6102a5610385366004611bdd565b610cb8565b6102c2600f5481565b6012546103a09060ff1681565b6040519015158152602001610294565b6102c260045481565b6102c2610d4c565b6002546103d4906001600160a01b031681565b6040516001600160a01b039091168152602001610294565b6102c260055481565b6102a5610d75565b5f546103d4906001600160a01b031681565b6102c2670de0b6b3a764000081565b6009546102c2565b6102c26305f5e10081565b6102c2606481565b6102c260085481565b6102c260075481565b600954600a54600b54600c546103579392919084565b6102c261046f366004611bf4565b610dd5565b6103a0610482366004611bb0565b600e6020525f908152604090205460ff1681565b6102c260105481565b6102a56104ad366004611bb0565b61126a565b6102c26104c0366004611c2d565b61132c565b6102c260065481565b6102c260035481565b6102c261271081565b6102c26104ee366004611c5b565b6113d9565b61026161189e565b6102a5610509366004611bdd565b6118f2565b6102a561051c366004611bb0565b6119bf565b6102c2620f424081565b6001546103d4906001600160a01b031681565b61056560405180608001604052805f81526020015f81526020015f81526020015f81525090565b506001600160a01b03165f908152600d6020908152604091829020825160808101845281548152600182015492810192909252600281015492820192909252600390910154606082015290565b600b546105c290610e1090611cb3565b4210156105cb57565b5f6105d4610d4c565b90505f60025f9054906101000a90046001600160a01b03166001600160a01b03166398d5fdca6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610627573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061064b9190611cc6565b90505f6305f5e1008261065e8286611cdd565b6106689190611d08565b6106729190611d1b565b90505f610680601883611d41565b9050620f42408113156106975750620f42406106b9565b6106a3620f4240611d6d565b8112156106b9576106b6620f4240611d6d565b90505b6009819055600c82905542600b55600a546106d5908290611d87565b600a81905560408051838152602081019290925281018390527fd0794ac40e87e336e6e652e1eef2cdb3793d91f30dcc09a45d18db669a686b949060600160405180910390a150505050565b60125460ff161561074d5760405162461bcd60e51b815260040161074490611dae565b60405180910390fd5b806001600160a01b0381166107995760405162461bcd60e51b81526020600482015260126024820152713b20a6a69d1034b73b30b634b2103ab9b2b960711b6044820152606401610744565b6001546005546040516359cffb9b60e11b81526001600160a01b038581166004830152602482019290925291169063b39ff73690604401602060405180830381865afa1580156107eb573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061080f9190611dd4565b6108545760405162461bcd60e51b815260206004820152601660248201527576414d4d3a2063616e6e6f74206c697175696461746560501b6044820152606401610744565b6001600160a01b0382165f908152600d6020526040812080549091036108b05760405162461bcd60e51b81526020600482015260116024820152703b20a6a69d103737903837b9b4ba34b7b760791b6044820152606401610744565b80545f90811290816108cc5782546108c790611d6d565b6108cf565b82545b90506108d96105b2565b6108e285611a55565b5f612710600454836108f49190611cdd565b6108fe9190611d08565b9050821561093a578160085f8282546109179190611def565b9250508190555081600f5f82825461092f9190611d1b565b909155506109699050565b8160075f82825461094b9190611def565b925050819055508160105f8282546109639190611d1b565b90915550505b5f610972610d4c565b6001600160a01b038881165f818152600d60205260408082208281556001808201849055600282018490556003909101929092559054905163bcbaf48760e01b815260048101929092526024820186905292935091169063bcbaf487906044015f604051808303815f87803b1580156109e9575f80fd5b505af11580156109fb573d5f803e3d5ffd5b505060408051868152602081018590529081018590523392506001600160a01b038a1691507f3ecbb371880c45545c63ac02e2364778ac379d2c14519773964068ef51bb454a9060600160405180910390a350505050505050565b5f546001600160a01b03163314610a7f5760405162461bcd60e51b815260040161074490611e02565b6012805460ff191690556040517fa45f47fdea8a1efdd9029a5691c7f759c32b7c698632b563573e155625d16933905f90a1565b5f546001600160a01b03163314610adc5760405162461bcd60e51b815260040161074490611e02565b6001600160a01b0381165f818152600e6020526040808220805460ff19169055517f0fafd0343e6c6f6985727574866da48938c918559eb9521cf9cc0d317ea0f7b49190a250565b5f546001600160a01b03163314610b4d5760405162461bcd60e51b815260040161074490611e02565b60648110158015610b6057506107d08111155b610ba25760405162461bcd60e51b815260206004820152601360248201527276414d4d3a20696e76616c696420726174696f60681b6044820152606401610744565b600581905560408051818152601691810191909152756d61696e74656e616e63654d617267696e526174696f60501b6060820152602081018290527f952177133a28eea5034c93c6c70c1a8d223da94faaa45da8412c3c791111137f906080015b60405180910390a150565b6001600160a01b0381165f908152600d6020526040812080548203610c3557505f92915050565b5f610c3e610d4c565b82549091505f9081129081610c5d578354610c5890611d6d565b610c60565b83545b90508115610c9f57670de0b6b3a7640000846001015484610c819190611def565b610c8b9083611cdd565b610c959190611d08565b9695505050505050565b670de0b6b3a7640000838560010154610c819190611def565b5f546001600160a01b03163314610ce15760405162461bcd60e51b815260040161074490611e02565b601154811115610d335760405162461bcd60e51b815260206004820152601760248201527f76414d4d3a20696e73756666696369656e7420666565730000000000000000006044820152606401610744565b8060115f828254610d449190611def565b909155505050565b5f600754670de0b6b3a7640000600854610d669190611cdd565b610d709190611d08565b905090565b5f546001600160a01b03163314610d9e5760405162461bcd60e51b815260040161074490611e02565b6012805460ff191660011790556040517f9e87fac88ff661f02d44f95383c817fece4bce600a3dab7a54406878b965e752905f90a1565b6012545f9060ff1615610dfa5760405162461bcd60e51b815260040161074490611dae565b335f908152600d602052604081208054909103610e4d5760405162461bcd60e51b81526020600482015260116024820152703b20a6a69d103737903837b9b4ba34b7b760791b6044820152606401610744565b80545f9081129081610e69578254610e6490611d6d565b610e6c565b82545b905080871115610eb35760405162461bcd60e51b815260206004820152601260248201527176414d4d3a20696e76616c69642073697a6560701b6044820152606401610744565b610ebb6105b2565b610ec433611a55565b5f610ecd610d4c565b9050868110158015610edf5750858111155b610f225760405162461bcd60e51b815260206004820152601460248201527376414d4d3a20707269636520736c69707061676560601b6044820152606401610744565b8215610f5c57670de0b6b3a7640000846001015482610f419190611def565b610f4b908a611cdd565b610f559190611d08565b9450610f8c565b670de0b6b3a7640000818560010154610f759190611def565b610f7f908a611cdd565b610f899190611d08565b94505b5f6127106003548a610f9e9190611cdd565b610fa89190611d08565b90508315610fe4578860085f828254610fc19190611def565b9250508190555088600f5f828254610fd99190611d1b565b909155506110139050565b8860075f828254610ff59190611def565b925050819055508860105f82825461100d9190611d1b565b90915550505b82890361104257335f908152600d6020526040812081815560018101829055600281018290556003015561106f565b83611059578454611054908a90611d87565b611066565b8454611066908a90611d1b565b85554260038601555b6001546001600160a01b031663cb6256803361108b848a611d1b565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044015f604051808303815f87803b1580156110ce575f80fd5b505af11580156110e0573d5f803e3d5ffd5b5050600154604051620af05960e21b81523360048201525f93508692508c916001600160a01b031690622bc16490602401608060405180830381865afa15801561112c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111509190611e2b565b6020015161115e9190611cdd565b6111689190611d08565b600154604051639101e5b360e01b8152336004820152602481018390529192506001600160a01b031690639101e5b3906044015f604051808303815f87803b1580156111b2575f80fd5b505af11580156111c4573d5f803e3d5ffd5b505050508160115f8282546111d99190611cb3565b9091555050604080518b8152602081018590529081018890526060810183905233907fda9c32aadba951abe6572af4fb5654a38201910647b4a3a0367a8e28945972f39060800160405180910390a260405182815233907f4b85f139405492fb78333512610ba07ed1e0c3fb2417f208a9aae27dc3843e6a9060200160405180910390a25050505050509392505050565b5f546001600160a01b031633146112935760405162461bcd60e51b815260040161074490611e02565b6001600160a01b0381166112e15760405162461bcd60e51b815260206004820152601560248201527476414d4d3a20696e76616c6964206164647265737360581b6044820152606401610744565b6001600160a01b0381165f818152600e6020526040808220805460ff19166001179055517fdd10d14f6ac19e913d4edbb11fd30661531e2ccd0d23f571e9b224f001f0dd069190a250565b5f80611336610d4c565b90505f8315611378575f8560085461134e9190611cb3565b600754909150611366670de0b6b3a764000083611cdd565b6113709190611d08565b9150506113ae565b5f856007546113879190611cb3565b905080670de0b6b3a76400006008546113a09190611cdd565b6113aa9190611d08565b9150505b8181116113c4576113bf8183611def565b6113ce565b6113ce8282611def565b925050505b92915050565b6012545f9060ff16156113fe5760405162461bcd60e51b815260040161074490611dae565b5f861161144d5760405162461bcd60e51b815260206004820152601860248201527f76414d4d3a20696e76616c696420636f6c6c61746572616c00000000000000006044820152606401610744565b6001841015801561145f575060648411155b6114a45760405162461bcd60e51b815260206004820152601660248201527576414d4d3a20696e76616c6964206c6576657261676560501b6044820152606401610744565b6114ac6105b2565b6114b68487611cdd565b90505f6114c1610d4c565b90508381101580156114d35750828111155b6115165760405162461bcd60e51b815260206004820152601460248201527376414d4d3a20707269636520736c69707061676560601b6044820152606401610744565b5f612710600354846115289190611cdd565b6115329190611d08565b90505f61153f828a611cb3565b600154604051630ead3e9960e31b8152336004820152602481018390529192506001600160a01b031690637569f4c8906044015f604051808303815f87803b158015611589575f80fd5b505af115801561159b573d5f803e3d5ffd5b5050335f908152600d6020526040902080549092501590506115c0576115c033611a55565b88156115fa578460085f8282546115d79190611cb3565b9250508190555084600f5f8282546115ef9190611d87565b909155506116299050565b8460075f82825461160b9190611cb3565b925050819055508460105f8282546116239190611d87565b90915550505b80545f0361165c57886116445761163f85611d6d565b611646565b845b815560018101849055600a5460028201556117ea565b80545f128915158103611751575f670de0b6b3a764000083600101548361168d57845461168890611d6d565b611690565b84545b61169a9190611cdd565b6116a49190611d08565b90505f670de0b6b3a76400006116ba888a611cdd565b6116c49190611d08565b90505f6116d18284611cb3565b9050836116f457845489906116e590611d6d565b6116ef9190611d87565b611701565b8454611701908a90611d87565b611713670de0b6b3a764000083611cdd565b61171d9190611d08565b600186015583611739578454611734908a90611d1b565b611746565b8454611746908a90611d87565b8555506117e8915050565b858161176757825461176290611d6d565b61176a565b82545b111561179b5780611787578154611782908790611d87565b611794565b8154611794908790611d1b565b82556117e8565b5f816117b15782546117ac90611d6d565b6117b4565b82545b6117be9088611def565b90508a6117d3576117ce81611d6d565b6117d5565b805b83555060018201859055600a5460028301555b505b4281600301819055508260115f8282546118049190611cb3565b9091555050604080518a1515815260208101879052908101859052606081018990526080810184905233907f0e8f4b81343afa64bc4ddcfbf2d80e883e0ddfc6663c400ca09da13d1d28d5889060a00160405180910390a260405183815233907f4b85f139405492fb78333512610ba07ed1e0c3fb2417f208a9aae27dc3843e6a9060200160405180910390a25050505095945050505050565b6118c560405180608001604052805f81526020015f81526020015f81526020015f81525090565b50604080516080810182526009548152600a546020820152600b5491810191909152600c54606082015290565b5f546001600160a01b0316331461191b5760405162461bcd60e51b815260040161074490611e02565b6103e88111156119625760405162461bcd60e51b81526020600482015260126024820152710ec829a9a7440cccaca40e8dede40d0d2ced60731b6044820152606401610744565b600381905560408051818152600e918101919091526d74726164696e674665655261746560901b6060820152602081018290527f952177133a28eea5034c93c6c70c1a8d223da94faaa45da8412c3c791111137f90608001610c03565b5f546001600160a01b031633146119e85760405162461bcd60e51b815260040161074490611e02565b6001600160a01b038116611a345760405162461bcd60e51b81526020600482015260136024820152723b20a6a69d1034b73b30b634b21037bbb732b960691b6044820152606401610744565b5f80546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381165f908152600d602052604081208054909103611a79575050565b6002810154600a545f91611a8c91611def565b9050805f03611a9a57505050565b81545f9081129081611ab6578354611ab190611d6d565b611ab9565b83545b90505f6305f5e100611acb8584611cdd565b611ad59190611d08565b90508215611ae957611ae681611d6d565b90505b600154600a54604051635969f96b60e01b81526001600160a01b038981166004830152602482018590526044820192909252911690635969f96b906064015f604051808303815f87803b158015611b3e575f80fd5b505af1158015611b50573d5f803e3d5ffd5b5050600a54600288018190556040516001600160a01b038a1693507f14b9e7b22b24fe3174a21280f7baf48fce7e6ae0b9a0a548e37bcc22ae1bdb489250611ba091858252602082015260400190565b60405180910390a2505050505050565b5f60208284031215611bc0575f80fd5b81356001600160a01b0381168114611bd6575f80fd5b9392505050565b5f60208284031215611bed575f80fd5b5035919050565b5f805f60608486031215611c06575f80fd5b505081359360208301359350604090920135919050565b8015158114611c2a575f80fd5b50565b5f8060408385031215611c3e575f80fd5b823591506020830135611c5081611c1d565b809150509250929050565b5f805f805f60a08688031215611c6f575f80fd5b853594506020860135611c8181611c1d565b94979496505050506040830135926060810135926080909101359150565b634e487b7160e01b5f52601160045260245ffd5b808201808211156113d3576113d3611c9f565b5f60208284031215611cd6575f80fd5b5051919050565b80820281158282048414176113d3576113d3611c9f565b634e487b7160e01b5f52601260045260245ffd5b5f82611d1657611d16611cf4565b500490565b8181035f831280158383131683831282161715611d3a57611d3a611c9f565b5092915050565b5f82611d4f57611d4f611cf4565b600160ff1b82145f1984141615611d6857611d68611c9f565b500590565b5f600160ff1b8201611d8157611d81611c9f565b505f0390565b8082018281125f831280158216821582161715611da657611da6611c9f565b505092915050565b6020808252600c908201526b1d9053534e881c185d5cd95960a21b604082015260600190565b5f60208284031215611de4575f80fd5b8151611bd681611c1d565b818103818111156113d3576113d3611c9f565b6020808252600f908201526e3b20a6a69d103737ba1037bbb732b960891b604082015260600190565b5f60808284031215611e3b575f80fd5b6040516080810181811067ffffffffffffffff82111715611e6a57634e487b7160e01b5f52604160045260245ffd5b806040525082518152602083015160208201526040830151604082015260608301516060820152809150509291505056fea2646970667358221220747c5a3483a71f869c5cc5e37e98617cda16b5c497e4dead9c736cf10474d5bf64736f6c63430008140033a26469706673582212208abd4da2ae49f54aec1a3e2c03ecd144031adbbd968208f23a79dbace74aa01a64736f6c63430008140033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:15052:8",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:8",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "98:257:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "144:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "153:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "156:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "146:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "146:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "146:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "119:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "128:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "115:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "115:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "140:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "111:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "111:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "108:52:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "169:33:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "192:9:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "179:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "179:23:8"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "169:6:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "211:45:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "241:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "252:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "237:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "237:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "224:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "224:32:8"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "215:5:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "309:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "318:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "321:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "311:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "311:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "311:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "278:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "299:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "292:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "292:13:8"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "285:6:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "285:21:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "275:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "275:32:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "268:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "268:40:8"
                  },
                  "nodeType": "YulIf",
                  "src": "265:60:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "334:15:8",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "344:5:8"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "334:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "56:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "67:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "79:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "87:6:8",
                "type": ""
              }
            ],
            "src": "14:341:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "409:124:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "419:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "441:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "428:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "428:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "419:5:8"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "511:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "520:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "523:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "513:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "513:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "513:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "470:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "481:5:8"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "496:3:8",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "501:1:8",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "492:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "492:11:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "505:1:8",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "488:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "488:19:8"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "477:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "477:31:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "467:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "467:42:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "460:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "460:50:8"
                  },
                  "nodeType": "YulIf",
                  "src": "457:70:8"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "388:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "399:5:8",
                "type": ""
              }
            ],
            "src": "360:173:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "608:116:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "654:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "663:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "666:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "656:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "656:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "656:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "629:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "638:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "625:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "625:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "650:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "621:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "621:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "618:52:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "679:39:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "708:9:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "689:18:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "689:29:8"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "679:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "574:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "585:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "597:6:8",
                "type": ""
              }
            ],
            "src": "538:186:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "824:92:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "834:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "846:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "857:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "842:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "842:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "834:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "876:9:8"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "901:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "894:6:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "894:14:8"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "887:6:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "887:22:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "869:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "869:41:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "869:41:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "793:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "804:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "815:4:8",
                "type": ""
              }
            ],
            "src": "729:187:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "953:95:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "970:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "977:3:8",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "982:10:8",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "973:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "973:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "963:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "963:31:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "963:31:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1010:1:8",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1013:4:8",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1003:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1003:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1003:15:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1034:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1037:4:8",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1027:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1027:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1027:15:8"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "921:127:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1184:1018:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1231:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1240:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1243:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1233:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1233:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1233:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1205:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1214:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1201:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1201:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1226:3:8",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1197:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1197:33:8"
                  },
                  "nodeType": "YulIf",
                  "src": "1194:53:8"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1256:37:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1283:9:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1270:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1270:23:8"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1260:6:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1302:28:8",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1312:18:8",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1306:2:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1357:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1366:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1369:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1359:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1359:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1359:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1345:6:8"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1353:2:8"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1342:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1342:14:8"
                  },
                  "nodeType": "YulIf",
                  "src": "1339:34:8"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1382:32:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1396:9:8"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1407:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1392:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1392:22:8"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "1386:2:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1462:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1471:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1474:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1464:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1464:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1464:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1441:2:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1445:4:8",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1437:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1437:13:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1452:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1433:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1433:27:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1426:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1426:35:8"
                  },
                  "nodeType": "YulIf",
                  "src": "1423:55:8"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1487:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1510:2:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1497:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1497:16:8"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "1491:2:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1536:22:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1538:16:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1538:18:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1538:18:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1528:2:8"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1532:2:8"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1525:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1525:10:8"
                  },
                  "nodeType": "YulIf",
                  "src": "1522:36:8"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1567:17:8",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1581:2:8",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "1577:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1577:7:8"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "1571:2:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1593:23:8",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1613:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1607:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1607:9:8"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "1597:6:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1625:71:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1647:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "1671:2:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1675:4:8",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1667:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1667:13:8"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "1682:2:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1663:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1663:22:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1687:2:8",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1659:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1659:31:8"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "1692:2:8"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1655:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1655:40:8"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1643:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1643:53:8"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "1629:10:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1755:22:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1757:16:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1757:18:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1757:18:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1714:10:8"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1726:2:8"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1711:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1711:18:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1734:10:8"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1746:6:8"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1731:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1731:22:8"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1708:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1708:46:8"
                  },
                  "nodeType": "YulIf",
                  "src": "1705:72:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1793:2:8",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1797:10:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1786:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1786:22:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1786:22:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1824:6:8"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1832:2:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1817:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1817:18:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1817:18:8"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1883:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1892:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1895:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1885:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1885:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1885:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1858:2:8"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1862:2:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1854:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1854:11:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1867:4:8",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1850:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1850:22:8"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1874:7:8"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1847:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1847:35:8"
                  },
                  "nodeType": "YulIf",
                  "src": "1844:55:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1925:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1933:4:8",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1921:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1921:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1944:2:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1948:4:8",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1940:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1940:13:8"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1955:2:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "1908:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1908:50:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1908:50:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1982:6:8"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1990:2:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1978:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1978:15:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1995:4:8",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1974:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1974:26:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2002:1:8",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1967:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1967:37:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1967:37:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2013:16:8",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "2023:6:8"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2013:6:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2038:50:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2071:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2082:4:8",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2067:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2067:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2048:18:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2048:40:8"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2038:6:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2097:48:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2130:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2141:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2126:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2126:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2107:18:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2107:38:8"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2097:6:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2154:42:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2181:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2192:2:8",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2177:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2177:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2164:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2164:32:8"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "2154:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1126:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1137:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1149:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1157:6:8",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1165:6:8",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1173:6:8",
                "type": ""
              }
            ],
            "src": "1053:1149:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2364:218:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2374:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2386:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2397:2:8",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2382:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2382:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2374:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2416:9:8"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2427:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2409:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2409:25:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2409:25:8"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2443:29:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2461:3:8",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2466:1:8",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2457:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2457:11:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2470:1:8",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "2453:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2453:19:8"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2447:2:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2492:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2503:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2488:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2488:18:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2512:6:8"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2520:2:8"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2508:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2508:15:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2481:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2481:43:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2481:43:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2544:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2555:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2540:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2540:18:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "2564:6:8"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2572:2:8"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2560:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2560:15:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2533:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2533:43:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2533:43:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_address_t_address__to_t_bytes32_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2317:9:8",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2328:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2336:6:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2344:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2355:4:8",
                "type": ""
              }
            ],
            "src": "2207:375:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2657:110:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2703:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2712:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2715:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2705:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2705:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2705:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2678:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2687:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2674:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2674:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2699:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2670:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2670:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "2667:52:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2728:33:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2751:9:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2738:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2738:23:8"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2728:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2623:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2634:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2646:6:8",
                "type": ""
              }
            ],
            "src": "2587:180:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2838:184:8",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2848:10:8",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2857:1:8",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "2852:1:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2917:63:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "2942:3:8"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "2947:1:8"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2938:3:8"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2938:11:8"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "2961:3:8"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "2966:1:8"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2957:3:8"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2957:11:8"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2951:5:8"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2951:18:8"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2931:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2931:39:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2931:39:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2878:1:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2881:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2875:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2875:13:8"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "2889:19:8",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2891:15:8",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "2900:1:8"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2903:2:8",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2896:3:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2896:10:8"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "2891:1:8"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "2871:3:8",
                    "statements": []
                  },
                  "src": "2867:113:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "3000:3:8"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3005:6:8"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2996:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2996:16:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3014:1:8",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2989:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2989:27:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2989:27:8"
                }
              ]
            },
            "name": "copy_memory_to_memory_with_cleanup",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "2816:3:8",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "2821:3:8",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2826:6:8",
                "type": ""
              }
            ],
            "src": "2772:250:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3077:221:8",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3087:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3107:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3101:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3101:12:8"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3091:6:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3129:3:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3134:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3122:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3122:19:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3122:19:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3189:5:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3196:4:8",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3185:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3185:16:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3207:3:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3212:4:8",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3203:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3203:14:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3219:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory_with_cleanup",
                      "nodeType": "YulIdentifier",
                      "src": "3150:34:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3150:76:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3150:76:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3235:57:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3250:3:8"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3263:6:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3271:2:8",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3259:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3259:15:8"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3280:2:8",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "3276:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3276:7:8"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3255:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3255:29:8"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3246:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3246:39:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3287:4:8",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3242:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3242:50:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3235:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3054:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3061:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3069:3:8",
                "type": ""
              }
            ],
            "src": "3027:271:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3586:452:8",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3596:29:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3614:3:8",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3619:1:8",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3610:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3610:11:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3623:1:8",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3606:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3606:19:8"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3600:2:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3641:9:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3656:6:8"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3664:2:8"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3652:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3652:15:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3634:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3634:34:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3634:34:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3688:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3699:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3684:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3684:18:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3708:6:8"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3716:2:8"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3704:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3704:15:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3677:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3677:43:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3677:43:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3740:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3751:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3736:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3736:18:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "3760:6:8"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3768:2:8"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3756:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3756:15:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3729:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3729:43:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3729:43:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3792:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3803:2:8",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3788:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3788:18:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "3812:6:8"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3820:2:8"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3808:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3808:15:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3781:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3781:43:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3781:43:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3844:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3855:3:8",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3840:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3840:19:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3861:3:8",
                        "type": "",
                        "value": "224"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3833:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3833:32:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3833:32:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3874:54:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "3900:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3912:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3923:3:8",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3908:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3908:19:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "3882:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3882:46:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3874:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3948:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3959:3:8",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3944:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3944:19:8"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value5",
                                "nodeType": "YulIdentifier",
                                "src": "3979:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3972:6:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3972:14:8"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3965:6:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3965:22:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3937:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3937:51:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3937:51:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4008:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4019:3:8",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4004:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4004:19:8"
                      },
                      {
                        "name": "value6",
                        "nodeType": "YulIdentifier",
                        "src": "4025:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3997:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3997:35:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3997:35:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_address_t_address_t_string_memory_ptr_t_bool_t_uint256__to_t_address_t_address_t_address_t_address_t_string_memory_ptr_t_bool_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3507:9:8",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "3518:6:8",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "3526:6:8",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "3534:6:8",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3542:6:8",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3550:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3558:6:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3566:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3577:4:8",
                "type": ""
              }
            ],
            "src": "3303:735:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4113:110:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4159:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4168:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4171:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4161:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4161:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4161:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4134:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4143:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4130:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4130:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4155:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4126:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4126:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "4123:52:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4184:33:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4207:9:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4194:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4194:23:8"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4184:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4079:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4090:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4102:6:8",
                "type": ""
              }
            ],
            "src": "4043:180:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4329:76:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4339:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4351:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4362:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4347:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4347:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4339:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4381:9:8"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4392:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4374:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4374:25:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4374:25:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4298:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4309:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4320:4:8",
                "type": ""
              }
            ],
            "src": "4228:177:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4511:102:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4521:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4533:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4544:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4529:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4529:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4521:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4563:9:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4578:6:8"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4594:3:8",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4599:1:8",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4590:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4590:11:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4603:1:8",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4586:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4586:19:8"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4574:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4574:32:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4556:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4556:51:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4556:51:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4480:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4491:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4502:4:8",
                "type": ""
              }
            ],
            "src": "4410:203:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4769:481:8",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4779:12:8",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4789:2:8",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4783:2:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4800:32:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4818:9:8"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4829:2:8"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4814:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4814:18:8"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "4804:6:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4848:9:8"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4859:2:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4841:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4841:21:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4841:21:8"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4871:17:8",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "4882:6:8"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "4875:3:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4897:27:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4917:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4911:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4911:13:8"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4901:6:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "4940:6:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4948:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4933:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4933:22:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4933:22:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4964:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4975:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4986:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4971:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4971:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4964:3:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4998:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5016:6:8"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "5024:2:8"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5012:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5012:15:8"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "5002:6:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5036:10:8",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5045:1:8",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "5040:1:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5104:120:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "5125:3:8"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "5136:6:8"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "5130:5:8"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5130:13:8"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5118:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5118:26:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5118:26:8"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5157:19:8",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "5168:3:8"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "5173:2:8"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5164:3:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5164:12:8"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5157:3:8"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5189:25:8",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "5203:6:8"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "5211:2:8"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5199:3:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5199:15:8"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5189:6:8"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5066:1:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5069:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "5063:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5063:13:8"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "5077:18:8",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5079:14:8",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "5088:1:8"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5091:1:8",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5084:3:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5084:9:8"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "5079:1:8"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "5059:3:8",
                    "statements": []
                  },
                  "src": "5055:169:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5233:11:8",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "5241:3:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5233:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4738:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4749:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4760:4:8",
                "type": ""
              }
            ],
            "src": "4618:632:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5342:167:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5388:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5397:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5400:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5390:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5390:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5390:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5363:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5372:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5359:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5359:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5384:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5355:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5355:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "5352:52:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5413:39:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5442:9:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "5423:18:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5423:29:8"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5413:6:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5461:42:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5488:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5499:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5484:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5484:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5471:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5471:32:8"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "5461:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5300:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5311:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5323:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5331:6:8",
                "type": ""
              }
            ],
            "src": "5255:254:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5671:670:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5688:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5699:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5681:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5681:21:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5681:21:8"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5711:29:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5729:3:8",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5734:1:8",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "5725:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5725:11:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5738:1:8",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "5721:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5721:19:8"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "5715:2:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5760:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5771:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5756:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5756:18:8"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "5786:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "5780:5:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5780:13:8"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5795:2:8"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5776:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5776:22:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5749:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5749:50:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5749:50:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5819:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5830:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5815:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5815:18:8"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "5849:6:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5857:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5845:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5845:15:8"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "5839:5:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5839:22:8"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5863:2:8"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5835:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5835:31:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5808:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5808:59:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5808:59:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5887:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5898:2:8",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5883:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5883:18:8"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "5917:6:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5925:2:8",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5913:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5913:15:8"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "5907:5:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5907:22:8"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5931:2:8"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5903:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5903:31:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5876:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5876:59:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5876:59:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5955:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5966:3:8",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5951:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5951:19:8"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "5986:6:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5994:2:8",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5982:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5982:15:8"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "5976:5:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5976:22:8"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6000:2:8"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5972:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5972:31:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5944:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5944:60:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5944:60:8"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6013:43:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6043:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6051:3:8",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6039:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6039:16:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6033:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6033:23:8"
                  },
                  "variables": [
                    {
                      "name": "memberValue0",
                      "nodeType": "YulTypedName",
                      "src": "6017:12:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6076:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6087:3:8",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6072:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6072:19:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6093:4:8",
                        "type": "",
                        "value": "0xe0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6065:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6065:33:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6065:33:8"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6107:66:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "memberValue0",
                        "nodeType": "YulIdentifier",
                        "src": "6139:12:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6157:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6168:3:8",
                            "type": "",
                            "value": "256"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6153:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6153:19:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "6121:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6121:52:8"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "6111:6:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6193:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6204:3:8",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6189:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6189:19:8"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "6234:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6242:3:8",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6230:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6230:16:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "6224:5:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6224:23:8"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "6217:6:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6217:31:8"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "6210:6:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6210:39:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6182:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6182:68:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6182:68:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6270:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6281:4:8",
                            "type": "",
                            "value": "0xe0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6266:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6266:20:8"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "6298:6:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6306:3:8",
                                "type": "",
                                "value": "192"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6294:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6294:16:8"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "6288:5:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6288:23:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6259:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6259:53:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6259:53:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6321:14:8",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "6329:6:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6321:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_MarketInfo_$3431_memory_ptr__to_t_struct$_MarketInfo_$3431_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5640:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5651:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5662:4:8",
                "type": ""
              }
            ],
            "src": "5514:827:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6447:76:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6457:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6469:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6480:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6465:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6465:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6457:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6499:9:8"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6510:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6492:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6492:25:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6492:25:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6416:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6427:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6438:4:8",
                "type": ""
              }
            ],
            "src": "6346:177:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6702:168:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6719:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6730:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6712:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6712:21:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6712:21:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6753:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6764:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6749:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6749:18:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6769:2:8",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6742:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6742:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6742:30:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6792:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6803:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6788:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6788:18:8"
                      },
                      {
                        "hexValue": "466163746f72793a206e6f74206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6808:20:8",
                        "type": "",
                        "value": "Factory: not owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6781:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6781:48:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6781:48:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6838:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6850:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6861:2:8",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6846:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6846:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6838:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fa1d2cb382dd9523d019d53b1b38b6bbe6b9df49853db31a2405fe64e03683ce__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6679:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6693:4:8",
                "type": ""
              }
            ],
            "src": "6528:342:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7049:175:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7066:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7077:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7059:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7059:21:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7059:21:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7100:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7111:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7096:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7096:18:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7116:2:8",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7089:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7089:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7089:30:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7139:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7150:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7135:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7135:18:8"
                      },
                      {
                        "hexValue": "466163746f72793a206d61726b6574206e6f7420666f756e64",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7155:27:8",
                        "type": "",
                        "value": "Factory: market not found"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7128:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7128:55:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7128:55:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7192:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7204:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7215:2:8",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7200:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7200:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7192:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ab67c2eb430e8f3dae59dca775ba79355a8a6d3a0b5fbfceec881bc6dd8b9657__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7026:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7040:4:8",
                "type": ""
              }
            ],
            "src": "6875:349:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7403:178:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7420:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7431:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7413:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7413:21:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7413:21:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7454:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7465:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7450:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7450:18:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7470:2:8",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7443:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7443:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7443:30:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7493:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7504:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7489:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7489:18:8"
                      },
                      {
                        "hexValue": "466163746f72793a206e6f206665657320746f207769746864726177",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7509:30:8",
                        "type": "",
                        "value": "Factory: no fees to withdraw"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7482:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7482:58:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7482:58:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7549:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7561:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7572:2:8",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7557:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7557:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7549:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fec8405da7cf194848d064f54925c2d79d4639227126c1cfc96ec935c8b7dd06__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7380:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7394:4:8",
                "type": ""
              }
            ],
            "src": "7229:352:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7777:14:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7779:10:8",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "7786:3:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7779:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7761:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7769:3:8",
                "type": ""
              }
            ],
            "src": "7586:205:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7970:176:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7987:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7998:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7980:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7980:21:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7980:21:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8021:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8032:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8017:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8017:18:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8037:2:8",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8010:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8010:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8010:30:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8060:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8071:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8056:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8056:18:8"
                      },
                      {
                        "hexValue": "466163746f72793a207769746864726177616c206661696c6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8076:28:8",
                        "type": "",
                        "value": "Factory: withdrawal failed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8049:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8049:56:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8049:56:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8114:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8126:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8137:2:8",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8122:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8122:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8114:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ef10bb204810cffbc0461bf0b8010719dc9373b6674d22a36bc72b12c0a511f9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7947:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7961:4:8",
                "type": ""
              }
            ],
            "src": "7796:350:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8325:175:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8342:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8353:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8335:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8335:21:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8335:21:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8376:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8387:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8372:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8372:18:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8392:2:8",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8365:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8365:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8365:30:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8415:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8426:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8411:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8411:18:8"
                      },
                      {
                        "hexValue": "466163746f72793a20696e73756666696369656e7420666565",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8431:27:8",
                        "type": "",
                        "value": "Factory: insufficient fee"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8404:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8404:55:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8404:55:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8468:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8480:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8491:2:8",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8476:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8476:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8468:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7061440a344e1ff3b58d48275b585fdabf843a6a983d91548865f42561f3f9bc__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8302:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8316:4:8",
                "type": ""
              }
            ],
            "src": "8151:349:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8679:173:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8696:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8707:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8689:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8689:21:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8689:21:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8730:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8741:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8726:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8726:18:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8746:2:8",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8719:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8719:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8719:30:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8769:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8780:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8765:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8765:18:8"
                      },
                      {
                        "hexValue": "466163746f72793a20696e76616c6964206f7261636c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8785:25:8",
                        "type": "",
                        "value": "Factory: invalid oracle"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8758:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8758:53:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8758:53:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8820:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8832:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8843:2:8",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8828:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8828:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8820:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_09dd9188eee8d7dd0f640bdbf07732817706387f8eb77c9699fe395546434a6b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8656:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8670:4:8",
                "type": ""
              }
            ],
            "src": "8505:347:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9031:177:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9048:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9059:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9041:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9041:21:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9041:21:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9082:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9093:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9078:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9078:18:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9098:2:8",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9071:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9071:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9071:30:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9121:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9132:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9117:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9117:18:8"
                      },
                      {
                        "hexValue": "466163746f72793a20696e76616c696420636f6c6c61746572616c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9137:29:8",
                        "type": "",
                        "value": "Factory: invalid collateral"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9110:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9110:57:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9110:57:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9176:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9188:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9199:2:8",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9184:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9184:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9176:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_61297820fb3c739e12f6ba624db6aa4c85d285a4cfe53f457ffc8ed2ece83241__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9008:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9022:4:8",
                "type": ""
              }
            ],
            "src": "8857:351:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9387:173:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9404:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9415:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9397:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9397:21:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9397:21:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9438:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9449:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9434:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9434:18:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9454:2:8",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9427:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9427:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9427:30:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9477:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9488:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9473:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9473:18:8"
                      },
                      {
                        "hexValue": "466163746f72793a20696e76616c69642073796d626f6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9493:25:8",
                        "type": "",
                        "value": "Factory: invalid symbol"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9466:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9466:53:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9466:53:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9528:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9540:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9551:2:8",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9536:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9536:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9528:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4d1e0210f99355610857582d69249f026a236aae11869ef621878e42605d7072__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9364:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9378:4:8",
                "type": ""
              }
            ],
            "src": "9213:347:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9739:172:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9756:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9767:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9749:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9749:21:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9749:21:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9790:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9801:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9786:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9786:18:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9806:2:8",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9779:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9779:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9779:30:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9829:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9840:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9825:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9825:18:8"
                      },
                      {
                        "hexValue": "466163746f72793a20696e76616c6964207072696365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9845:24:8",
                        "type": "",
                        "value": "Factory: invalid price"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9818:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9818:52:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9818:52:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9879:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9891:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9902:2:8",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9887:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9887:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9879:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_33ad97cfc93c24bbf61e5c09785c33e626309cf5912e80d37679d7f3c0a71fa7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9716:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9730:4:8",
                "type": ""
              }
            ],
            "src": "9565:346:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10167:420:8",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10177:27:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10197:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10191:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10191:13:8"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "10181:6:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "10252:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10260:4:8",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10248:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10248:17:8"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10267:3:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10272:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory_with_cleanup",
                      "nodeType": "YulIdentifier",
                      "src": "10213:34:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10213:66:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10213:66:8"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10288:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10305:3:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10310:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10301:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10301:16:8"
                  },
                  "variables": [
                    {
                      "name": "end_1",
                      "nodeType": "YulTypedName",
                      "src": "10292:5:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10326:41:8",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10340:26:8",
                        "type": "",
                        "value": "0xffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "10336:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10336:31:8"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "10330:2:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "end_1",
                        "nodeType": "YulIdentifier",
                        "src": "10383:5:8"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10398:2:8",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "10402:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "10394:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10394:15:8"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "10411:2:8"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10390:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10390:24:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10376:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10376:39:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10376:39:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "end_1",
                            "nodeType": "YulIdentifier",
                            "src": "10435:5:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10442:2:8",
                            "type": "",
                            "value": "20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10431:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10431:14:8"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10455:2:8",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "10459:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "10451:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10451:15:8"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "10468:2:8"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10447:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10447:24:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10424:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10424:48:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10424:48:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "end_1",
                            "nodeType": "YulIdentifier",
                            "src": "10492:5:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10499:2:8",
                            "type": "",
                            "value": "40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10488:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10488:14:8"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "10504:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10481:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10481:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10481:30:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "end_1",
                            "nodeType": "YulIdentifier",
                            "src": "10531:5:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10538:2:8",
                            "type": "",
                            "value": "72"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10527:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10527:14:8"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "10543:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10520:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10520:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10520:30:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10559:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "end_1",
                        "nodeType": "YulIdentifier",
                        "src": "10570:5:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10577:3:8",
                        "type": "",
                        "value": "104"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10566:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10566:15:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "10559:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_string_memory_ptr_t_address_t_address_t_uint256_t_uint256__to_t_string_memory_ptr_t_address_t_address_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10111:3:8",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "10116:6:8",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "10124:6:8",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "10132:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10140:6:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10148:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10159:3:8",
                "type": ""
              }
            ],
            "src": "9916:671:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10766:172:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10783:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10794:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10776:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10776:21:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10776:21:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10817:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10828:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10813:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10813:18:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10833:2:8",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10806:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10806:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10806:30:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10856:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10867:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10852:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10852:18:8"
                      },
                      {
                        "hexValue": "466163746f72793a206d61726b657420657869737473",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10872:24:8",
                        "type": "",
                        "value": "Factory: market exists"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10845:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10845:52:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10845:52:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10906:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10918:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10929:2:8",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10914:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10914:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10906:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6083f6b5580fd1f93f1b5e7afe0bad1b978aae84799ca716a43d5968997047b6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10743:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10757:4:8",
                "type": ""
              }
            ],
            "src": "10592:346:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11100:218:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11110:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11122:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11133:2:8",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11118:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11118:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11110:4:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11145:29:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11163:3:8",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11168:1:8",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "11159:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11159:11:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11172:1:8",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "11155:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11155:19:8"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "11149:2:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11190:9:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "11205:6:8"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "11213:2:8"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11201:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11201:15:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11183:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11183:34:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11183:34:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11237:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11248:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11233:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11233:18:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "11257:6:8"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "11265:2:8"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11253:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11253:15:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11226:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11226:43:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11226:43:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11289:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11300:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11285:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11285:18:8"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "11305:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11278:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11278:34:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11278:34:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11053:9:8",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "11064:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11072:6:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11080:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11091:4:8",
                "type": ""
              }
            ],
            "src": "10943:375:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11378:325:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11388:22:8",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11402:1:8",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "11405:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "11398:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11398:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "11388:6:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11419:38:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "11449:4:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11455:1:8",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "11445:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11445:12:8"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "11423:18:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11496:31:8",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "11498:27:8",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "11512:6:8"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11520:4:8",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "11508:3:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11508:17:8"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "11498:6:8"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "11476:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11469:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11469:26:8"
                  },
                  "nodeType": "YulIf",
                  "src": "11466:61:8"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11586:111:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11607:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "11614:3:8",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "11619:10:8",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "11610:3:8"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11610:20:8"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11600:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11600:31:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11600:31:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11651:1:8",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11654:4:8",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11644:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11644:15:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11644:15:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11679:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11682:4:8",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11672:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11672:15:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11672:15:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "11542:18:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "11565:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11573:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "11562:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11562:14:8"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "11539:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11539:38:8"
                  },
                  "nodeType": "YulIf",
                  "src": "11536:161:8"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "11358:4:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "11367:6:8",
                "type": ""
              }
            ],
            "src": "11323:380:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11764:65:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11781:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "11784:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11774:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11774:14:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11774:14:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11797:26:8",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11815:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11818:4:8",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "keccak256",
                      "nodeType": "YulIdentifier",
                      "src": "11805:9:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11805:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "11797:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "11747:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "11755:4:8",
                "type": ""
              }
            ],
            "src": "11708:121:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11915:464:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11948:425:8",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "11962:11:8",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "11972:1:8",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "_1",
                            "nodeType": "YulTypedName",
                            "src": "11966:2:8",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "11993:2:8"
                            },
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "11997:5:8"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11986:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11986:17:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11986:17:8"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "12016:31:8",
                        "value": {
                          "arguments": [
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "12038:2:8"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12042:4:8",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "keccak256",
                            "nodeType": "YulIdentifier",
                            "src": "12028:9:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12028:19:8"
                        },
                        "variables": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "12020:4:8",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "12060:57:8",
                        "value": {
                          "arguments": [
                            {
                              "name": "data",
                              "nodeType": "YulIdentifier",
                              "src": "12083:4:8"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "12093:1:8",
                                  "type": "",
                                  "value": "5"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "startIndex",
                                      "nodeType": "YulIdentifier",
                                      "src": "12100:10:8"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "12112:2:8",
                                      "type": "",
                                      "value": "31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "12096:3:8"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "12096:19:8"
                                }
                              ],
                              "functionName": {
                                "name": "shr",
                                "nodeType": "YulIdentifier",
                                "src": "12089:3:8"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12089:27:8"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "12079:3:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12079:38:8"
                        },
                        "variables": [
                          {
                            "name": "deleteStart",
                            "nodeType": "YulTypedName",
                            "src": "12064:11:8",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12154:23:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12156:19:8",
                              "value": {
                                "name": "data",
                                "nodeType": "YulIdentifier",
                                "src": "12171:4:8"
                              },
                              "variableNames": [
                                {
                                  "name": "deleteStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "12156:11:8"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "startIndex",
                              "nodeType": "YulIdentifier",
                              "src": "12136:10:8"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12148:4:8",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "lt",
                            "nodeType": "YulIdentifier",
                            "src": "12133:2:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12133:20:8"
                        },
                        "nodeType": "YulIf",
                        "src": "12130:47:8"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "12190:41:8",
                        "value": {
                          "arguments": [
                            {
                              "name": "data",
                              "nodeType": "YulIdentifier",
                              "src": "12204:4:8"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "12214:1:8",
                                  "type": "",
                                  "value": "5"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "len",
                                      "nodeType": "YulIdentifier",
                                      "src": "12221:3:8"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "12226:2:8",
                                      "type": "",
                                      "value": "31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "12217:3:8"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "12217:12:8"
                                }
                              ],
                              "functionName": {
                                "name": "shr",
                                "nodeType": "YulIdentifier",
                                "src": "12210:3:8"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12210:20:8"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "12200:3:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12200:31:8"
                        },
                        "variables": [
                          {
                            "name": "_2",
                            "nodeType": "YulTypedName",
                            "src": "12194:2:8",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "12244:24:8",
                        "value": {
                          "name": "deleteStart",
                          "nodeType": "YulIdentifier",
                          "src": "12257:11:8"
                        },
                        "variables": [
                          {
                            "name": "start",
                            "nodeType": "YulTypedName",
                            "src": "12248:5:8",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12342:21:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "start",
                                    "nodeType": "YulIdentifier",
                                    "src": "12351:5:8"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "12358:2:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "sstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12344:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12344:17:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12344:17:8"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "start",
                              "nodeType": "YulIdentifier",
                              "src": "12292:5:8"
                            },
                            {
                              "name": "_2",
                              "nodeType": "YulIdentifier",
                              "src": "12299:2:8"
                            }
                          ],
                          "functionName": {
                            "name": "lt",
                            "nodeType": "YulIdentifier",
                            "src": "12289:2:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12289:13:8"
                        },
                        "nodeType": "YulForLoop",
                        "post": {
                          "nodeType": "YulBlock",
                          "src": "12303:26:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12305:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "start",
                                    "nodeType": "YulIdentifier",
                                    "src": "12318:5:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12325:1:8",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12314:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12314:13:8"
                              },
                              "variableNames": [
                                {
                                  "name": "start",
                                  "nodeType": "YulIdentifier",
                                  "src": "12305:5:8"
                                }
                              ]
                            }
                          ]
                        },
                        "pre": {
                          "nodeType": "YulBlock",
                          "src": "12285:3:8",
                          "statements": []
                        },
                        "src": "12281:82:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "len",
                        "nodeType": "YulIdentifier",
                        "src": "11931:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11936:2:8",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "11928:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11928:11:8"
                  },
                  "nodeType": "YulIf",
                  "src": "11925:448:8"
                }
              ]
            },
            "name": "clean_up_bytearray_end_slots_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "11887:5:8",
                "type": ""
              },
              {
                "name": "len",
                "nodeType": "YulTypedName",
                "src": "11894:3:8",
                "type": ""
              },
              {
                "name": "startIndex",
                "nodeType": "YulTypedName",
                "src": "11899:10:8",
                "type": ""
              }
            ],
            "src": "11834:545:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12469:81:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12479:65:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "data",
                            "nodeType": "YulIdentifier",
                            "src": "12494:4:8"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12512:1:8",
                                        "type": "",
                                        "value": "3"
                                      },
                                      {
                                        "name": "len",
                                        "nodeType": "YulIdentifier",
                                        "src": "12515:3:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "12508:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12508:11:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12525:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "12521:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12521:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nodeType": "YulIdentifier",
                                  "src": "12504:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12504:24:8"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "12500:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12500:29:8"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12490:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12490:40:8"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12536:1:8",
                            "type": "",
                            "value": "1"
                          },
                          {
                            "name": "len",
                            "nodeType": "YulIdentifier",
                            "src": "12539:3:8"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "12532:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12532:11:8"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "12487:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12487:57:8"
                  },
                  "variableNames": [
                    {
                      "name": "used",
                      "nodeType": "YulIdentifier",
                      "src": "12479:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "extract_used_part_and_set_length_of_short_byte_array",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "12446:4:8",
                "type": ""
              },
              {
                "name": "len",
                "nodeType": "YulTypedName",
                "src": "12452:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "used",
                "nodeType": "YulTypedName",
                "src": "12460:4:8",
                "type": ""
              }
            ],
            "src": "12384:166:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12651:1256:8",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12661:24:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "12681:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "12675:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12675:10:8"
                  },
                  "variables": [
                    {
                      "name": "newLen",
                      "nodeType": "YulTypedName",
                      "src": "12665:6:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12728:22:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "12730:16:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12730:18:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12730:18:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "newLen",
                        "nodeType": "YulIdentifier",
                        "src": "12700:6:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12708:18:8",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "12697:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12697:30:8"
                  },
                  "nodeType": "YulIf",
                  "src": "12694:56:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "slot",
                        "nodeType": "YulIdentifier",
                        "src": "12803:4:8"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "slot",
                                "nodeType": "YulIdentifier",
                                "src": "12841:4:8"
                              }
                            ],
                            "functionName": {
                              "name": "sload",
                              "nodeType": "YulIdentifier",
                              "src": "12835:5:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12835:11:8"
                          }
                        ],
                        "functionName": {
                          "name": "extract_byte_array_length",
                          "nodeType": "YulIdentifier",
                          "src": "12809:25:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12809:38:8"
                      },
                      {
                        "name": "newLen",
                        "nodeType": "YulIdentifier",
                        "src": "12849:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "clean_up_bytearray_end_slots_string_storage",
                      "nodeType": "YulIdentifier",
                      "src": "12759:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12759:97:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12759:97:8"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12865:18:8",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "12882:1:8",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "srcOffset",
                      "nodeType": "YulTypedName",
                      "src": "12869:9:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12892:23:8",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "12911:4:8",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "srcOffset_1",
                      "nodeType": "YulTypedName",
                      "src": "12896:11:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12924:24:8",
                  "value": {
                    "name": "srcOffset_1",
                    "nodeType": "YulIdentifier",
                    "src": "12937:11:8"
                  },
                  "variableNames": [
                    {
                      "name": "srcOffset",
                      "nodeType": "YulIdentifier",
                      "src": "12924:9:8"
                    }
                  ]
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "12994:656:8",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "13008:35:8",
                            "value": {
                              "arguments": [
                                {
                                  "name": "newLen",
                                  "nodeType": "YulIdentifier",
                                  "src": "13027:6:8"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "13039:2:8",
                                      "type": "",
                                      "value": "31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nodeType": "YulIdentifier",
                                    "src": "13035:3:8"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "13035:7:8"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "13023:3:8"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "13023:20:8"
                            },
                            "variables": [
                              {
                                "name": "loopEnd",
                                "nodeType": "YulTypedName",
                                "src": "13012:7:8",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "13056:49:8",
                            "value": {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "13100:4:8"
                                }
                              ],
                              "functionName": {
                                "name": "array_dataslot_string_storage",
                                "nodeType": "YulIdentifier",
                                "src": "13070:29:8"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "13070:35:8"
                            },
                            "variables": [
                              {
                                "name": "dstPtr",
                                "nodeType": "YulTypedName",
                                "src": "13060:6:8",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "13118:10:8",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13127:1:8",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "i",
                                "nodeType": "YulTypedName",
                                "src": "13122:1:8",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "13205:172:8",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "dstPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "13230:6:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "src",
                                                "nodeType": "YulIdentifier",
                                                "src": "13248:3:8"
                                              },
                                              {
                                                "name": "srcOffset",
                                                "nodeType": "YulIdentifier",
                                                "src": "13253:9:8"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "13244:3:8"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "13244:19:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mload",
                                          "nodeType": "YulIdentifier",
                                          "src": "13238:5:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "13238:26:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "13223:6:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13223:42:8"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "13223:42:8"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "13282:24:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "dstPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "13296:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13304:1:8",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13292:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13292:14:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "dstPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "13282:6:8"
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "13323:40:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "srcOffset",
                                        "nodeType": "YulIdentifier",
                                        "src": "13340:9:8"
                                      },
                                      {
                                        "name": "srcOffset_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "13351:11:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13336:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13336:27:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "srcOffset",
                                      "nodeType": "YulIdentifier",
                                      "src": "13323:9:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "13152:1:8"
                                },
                                {
                                  "name": "loopEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "13155:7:8"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "13149:2:8"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "13149:14:8"
                            },
                            "nodeType": "YulForLoop",
                            "post": {
                              "nodeType": "YulBlock",
                              "src": "13164:28:8",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "13166:24:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "13175:1:8"
                                      },
                                      {
                                        "name": "srcOffset_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "13178:11:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13171:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13171:19:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "13166:1:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            "pre": {
                              "nodeType": "YulBlock",
                              "src": "13145:3:8",
                              "statements": []
                            },
                            "src": "13141:236:8"
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "13425:166:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "13443:43:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "src",
                                            "nodeType": "YulIdentifier",
                                            "src": "13470:3:8"
                                          },
                                          {
                                            "name": "srcOffset",
                                            "nodeType": "YulIdentifier",
                                            "src": "13475:9:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "13466:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "13466:19:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "13460:5:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13460:26:8"
                                  },
                                  "variables": [
                                    {
                                      "name": "lastValue",
                                      "nodeType": "YulTypedName",
                                      "src": "13447:9:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "dstPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "13510:6:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "lastValue",
                                            "nodeType": "YulIdentifier",
                                            "src": "13522:9:8"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "arguments": [
                                                          {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "13549:1:8",
                                                            "type": "",
                                                            "value": "3"
                                                          },
                                                          {
                                                            "name": "newLen",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "13552:6:8"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "shl",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "13545:3:8"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "13545:14:8"
                                                      },
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "13561:3:8",
                                                        "type": "",
                                                        "value": "248"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "and",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "13541:3:8"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "13541:24:8"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "13571:1:8",
                                                        "type": "",
                                                        "value": "0"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "not",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "13567:3:8"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "13567:6:8"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shr",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "13537:3:8"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "13537:37:8"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "13533:3:8"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "13533:42:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "13518:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "13518:58:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "13503:6:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13503:74:8"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "13503:74:8"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "loopEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "13396:7:8"
                                },
                                {
                                  "name": "newLen",
                                  "nodeType": "YulIdentifier",
                                  "src": "13405:6:8"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "13393:2:8"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "13393:19:8"
                            },
                            "nodeType": "YulIf",
                            "src": "13390:201:8"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "13611:4:8"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "13625:1:8",
                                          "type": "",
                                          "value": "1"
                                        },
                                        {
                                          "name": "newLen",
                                          "nodeType": "YulIdentifier",
                                          "src": "13628:6:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "13621:3:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "13621:14:8"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "13637:1:8",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "13617:3:8"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "13617:22:8"
                                }
                              ],
                              "functionName": {
                                "name": "sstore",
                                "nodeType": "YulIdentifier",
                                "src": "13604:6:8"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "13604:36:8"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "13604:36:8"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "12987:663:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12992:1:8",
                        "type": "",
                        "value": "1"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "13667:234:8",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "13681:14:8",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13694:1:8",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "value",
                                "nodeType": "YulTypedName",
                                "src": "13685:5:8",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "13730:67:8",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "13748:35:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "src",
                                            "nodeType": "YulIdentifier",
                                            "src": "13767:3:8"
                                          },
                                          {
                                            "name": "srcOffset",
                                            "nodeType": "YulIdentifier",
                                            "src": "13772:9:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "13763:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "13763:19:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "13757:5:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13757:26:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "13748:5:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "name": "newLen",
                              "nodeType": "YulIdentifier",
                              "src": "13711:6:8"
                            },
                            "nodeType": "YulIf",
                            "src": "13708:89:8"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "13817:4:8"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "13876:5:8"
                                    },
                                    {
                                      "name": "newLen",
                                      "nodeType": "YulIdentifier",
                                      "src": "13883:6:8"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "extract_used_part_and_set_length_of_short_byte_array",
                                    "nodeType": "YulIdentifier",
                                    "src": "13823:52:8"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "13823:67:8"
                                }
                              ],
                              "functionName": {
                                "name": "sstore",
                                "nodeType": "YulIdentifier",
                                "src": "13810:6:8"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "13810:81:8"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "13810:81:8"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "13659:242:8",
                      "value": "default"
                    }
                  ],
                  "expression": {
                    "arguments": [
                      {
                        "name": "newLen",
                        "nodeType": "YulIdentifier",
                        "src": "12967:6:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12975:2:8",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "12964:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12964:14:8"
                  },
                  "nodeType": "YulSwitch",
                  "src": "12957:944:8"
                }
              ]
            },
            "name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "slot",
                "nodeType": "YulTypedName",
                "src": "12636:4:8",
                "type": ""
              },
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "12642:3:8",
                "type": ""
              }
            ],
            "src": "12555:1352:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13959:185:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13998:111:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14019:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "14026:3:8",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "14031:10:8",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "14022:3:8"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "14022:20:8"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "14012:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14012:31:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14012:31:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14063:1:8",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14066:4:8",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "14056:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14056:15:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14056:15:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14091:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14094:4:8",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "14084:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14084:15:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14084:15:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13975:5:8"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13986:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "13982:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13982:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "13972:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13972:17:8"
                  },
                  "nodeType": "YulIf",
                  "src": "13969:140:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14118:20:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14129:5:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14136:1:8",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14125:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14125:13:8"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "14118:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13941:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "13951:3:8",
                "type": ""
              }
            ],
            "src": "13912:232:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14326:241:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14343:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14354:2:8",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14336:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14336:21:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14336:21:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14366:53:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "14392:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14404:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14415:2:8",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14400:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14400:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "14374:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14374:45:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14366:4:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "14428:29:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14446:3:8",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14451:1:8",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "14442:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14442:11:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14455:1:8",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "14438:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14438:19:8"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "14432:2:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14477:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14488:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14473:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14473:18:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "14497:6:8"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "14505:2:8"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "14493:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14493:15:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14466:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14466:43:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14466:43:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14529:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14540:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14525:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14525:18:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "14549:6:8"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "14557:2:8"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "14545:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14545:15:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14518:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14518:43:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14518:43:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr_t_address_t_address__to_t_string_memory_ptr_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14279:9:8",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "14290:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "14298:6:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14306:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14317:4:8",
                "type": ""
              }
            ],
            "src": "14149:418:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14604:95:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14621:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14628:3:8",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14633:10:8",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "14624:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14624:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14614:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14614:31:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14614:31:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14661:1:8",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14664:4:8",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14654:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14654:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14654:15:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14685:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14688:4:8",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "14678:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14678:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14678:15:8"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "14572:127:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14878:172:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14895:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14906:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14888:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14888:21:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14888:21:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14929:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14940:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14925:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14925:18:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14945:2:8",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14918:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14918:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14918:30:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14968:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14979:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14964:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14964:18:8"
                      },
                      {
                        "hexValue": "466163746f72793a20696e76616c6964206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14984:24:8",
                        "type": "",
                        "value": "Factory: invalid owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14957:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14957:52:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14957:52:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15018:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15030:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15041:2:8",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15026:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15026:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15018:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_36cbe9ec0f2f499ae47acc346e3360dc856add8615203414809921a413cb75c5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14855:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14869:4:8",
                "type": ""
              }
            ],
            "src": "14704:346:8"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_bytes32t_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 0x20), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(_2, 0x20), _3)\n        mstore(add(add(memPtr, _3), 0x20), 0)\n        value0 := memPtr\n        value1 := abi_decode_address(add(headStart, 0x20))\n        value2 := abi_decode_address(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address__to_t_bytes32_t_address_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_address_t_string_memory_ptr_t_bool_t_uint256__to_t_address_t_address_t_address_t_address_t_string_memory_ptr_t_bool_t_uint256__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), 224)\n        tail := abi_encode_string(value4, add(headStart, 224))\n        mstore(add(headStart, 160), iszero(iszero(value5)))\n        mstore(add(headStart, 192), value6)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_struct$_MarketInfo_$3431_memory_ptr__to_t_struct$_MarketInfo_$3431_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(mload(value0), _1))\n        mstore(add(headStart, 64), and(mload(add(value0, 32)), _1))\n        mstore(add(headStart, 96), and(mload(add(value0, 64)), _1))\n        mstore(add(headStart, 128), and(mload(add(value0, 96)), _1))\n        let memberValue0 := mload(add(value0, 128))\n        mstore(add(headStart, 160), 0xe0)\n        let tail_1 := abi_encode_string(memberValue0, add(headStart, 256))\n        mstore(add(headStart, 192), iszero(iszero(mload(add(value0, 160)))))\n        mstore(add(headStart, 0xe0), mload(add(value0, 192)))\n        tail := tail_1\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_fa1d2cb382dd9523d019d53b1b38b6bbe6b9df49853db31a2405fe64e03683ce__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Factory: not owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ab67c2eb430e8f3dae59dca775ba79355a8a6d3a0b5fbfceec881bc6dd8b9657__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Factory: market not found\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fec8405da7cf194848d064f54925c2d79d4639227126c1cfc96ec935c8b7dd06__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Factory: no fees to withdraw\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_ef10bb204810cffbc0461bf0b8010719dc9373b6674d22a36bc72b12c0a511f9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Factory: withdrawal failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7061440a344e1ff3b58d48275b585fdabf843a6a983d91548865f42561f3f9bc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Factory: insufficient fee\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_09dd9188eee8d7dd0f640bdbf07732817706387f8eb77c9699fe395546434a6b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Factory: invalid oracle\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_61297820fb3c739e12f6ba624db6aa4c85d285a4cfe53f457ffc8ed2ece83241__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Factory: invalid collateral\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4d1e0210f99355610857582d69249f026a236aae11869ef621878e42605d7072__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Factory: invalid symbol\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_33ad97cfc93c24bbf61e5c09785c33e626309cf5912e80d37679d7f3c0a71fa7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Factory: invalid price\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_address_t_address_t_uint256_t_uint256__to_t_string_memory_ptr_t_address_t_address_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value4, value3, value2, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let _1 := not(0xffffffffffffffffffffffff)\n        mstore(end_1, and(shl(96, value1), _1))\n        mstore(add(end_1, 20), and(shl(96, value2), _1))\n        mstore(add(end_1, 40), value3)\n        mstore(add(end_1, 72), value4)\n        end := add(end_1, 104)\n    }\n    function abi_encode_tuple_t_stringliteral_6083f6b5580fd1f93f1b5e7afe0bad1b978aae84799ca716a43d5968997047b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Factory: market exists\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_address_t_address__to_t_string_memory_ptr_t_address_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 96)\n        tail := abi_encode_string(value0, add(headStart, 96))\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_36cbe9ec0f2f499ae47acc346e3360dc856add8615203414809921a413cb75c5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Factory: invalid owner\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 8,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "186:5796:7:-:0;;;656:9;625:40;;1363:49;;;;;;;;;-1:-1:-1;1387:5:7;:18;;-1:-1:-1;;;;;;1387:18:7;1395:10;1387:18;;;186:5796;;;;;;",
  "deployedSourceMap": "186:5796:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3449:209;;;;;;;;;;-1:-1:-1;3449:209:7;;;;;:::i;:::-;;:::i;:::-;;5352:294;;;;;;;;;;;;;:::i;505:45::-;;;;;;;;;;-1:-1:-1;505:45:7;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;894:14:8;;887:22;869:41;;857:2;842:18;505:45:7;;;;;;;;1476:1907;;;;;;:::i;:::-;;:::i;:::-;;;;2409:25:8;;;-1:-1:-1;;;;;2508:15:8;;;2503:2;2488:18;;2481:43;2560:15;;2540:18;;;2533:43;2397:2;2382:18;1476:1907:7;2207:375:8;454:45:7;;;;;;;;;;-1:-1:-1;454:45:7;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;556:26::-;;;;;;;;;;-1:-1:-1;556:26:7;;;;;:::i;:::-;;:::i;:::-;;;4374:25:8;;;4362:2;4347:18;556:26:7;4228:177:8;213:20:7;;;;;;;;;;-1:-1:-1;213:20:7;;;;-1:-1:-1;;;;;213:20:7;;;;;;-1:-1:-1;;;;;4574:32:8;;;4556:51;;4544:2;4529:18;213:20:7;4410:203:8;4260:707:7;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;5727:253::-;;;;;;;;;;-1:-1:-1;5727:253:7;;;;;:::i;:::-;;:::i;4101:101::-;;;;;;;;;;;;;:::i;3923:120::-;;;;;;;;;;-1:-1:-1;3923:120:7;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3719:143::-;;;;;;;;;;-1:-1:-1;3719:143:7;;;;;:::i;:::-;;:::i;593:26::-;;;;;;;;;;;;;;;;625:40;;;;;;;;;;;;;;;;5025:263;;;;;;;;;;-1:-1:-1;5025:263:7;;;;;:::i;:::-;;:::i;3449:209::-;1154:5;;-1:-1:-1;;;;;1154:5:7;1140:10;:19;1132:50;;;;-1:-1:-1;;;1132:50:7;;;;;;;:::i;:::-;;;;;;;;;1303:1:::1;1269:17:::0;;;:7:::1;:17;::::0;;;;:22;3540:8;;-1:-1:-1;;;;;1269:22:7::1;1261:74;;;::::0;-1:-1:-1;;;1261:74:7;;7077:2:8;1261:74:7::1;::::0;::::1;7059:21:8::0;7116:2;7096:18;;;7089:30;7155:27;7135:18;;;7128:55;7200:18;;1261:74:7::1;6875:349:8::0;1261:74:7::1;3560:17:::2;::::0;;;:7:::2;:17;::::0;;;;;;;;:26:::2;;:37:::0;;-1:-1:-1;;3560:37:7::2;::::0;::::2;;::::0;;::::2;::::0;;;3612:39;;869:41:8;;;3560:17:7;;3612:39:::2;::::0;842:18:8;3612:39:7::2;;;;;;;1192:1:::1;3449:209:::0;;:::o;5352:294::-;1154:5;;-1:-1:-1;;;;;1154:5:7;1140:10;:19;1132:50;;;;-1:-1:-1;;;1132:50:7;;;;;;;:::i;:::-;5423:21:::1;5462:11:::0;5454:52:::1;;;::::0;-1:-1:-1;;;5454:52:7;;7431:2:8;5454:52:7::1;::::0;::::1;7413:21:8::0;7470:2;7450:18;;;7443:30;7509;7489:18;;;7482:58;7557:18;;5454:52:7::1;7229:352:8::0;5454:52:7::1;5526:12;5552:5:::0;;5544:39:::1;::::0;-1:-1:-1;;;;;5552:5:7;;::::1;::::0;5571:7;;5526:12;5544:39;5526:12;5544:39;5571:7;5552:5;5544:39:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5525:58;;;5601:7;5593:46;;;::::0;-1:-1:-1;;;5593:46:7;;7998:2:8;5593:46:7::1;::::0;::::1;7980:21:8::0;8037:2;8017:18;;;8010:30;8076:28;8056:18;;;8049:56;8122:18;;5593:46:7::1;7796:350:8::0;5593:46:7::1;5395:251;;5352:294::o:0;1476:1907::-;1647:16;1665:19;1686:20;1739:13;;1726:9;:26;;1718:64;;;;-1:-1:-1;;;1718:64:7;;8353:2:8;1718:64:7;;;8335:21:8;8392:2;8372:18;;;8365:30;8431:27;8411:18;;;8404:55;8476:18;;1718:64:7;8151:349:8;1718:64:7;-1:-1:-1;;;;;1800:20:7;;1792:56;;;;-1:-1:-1;;;1792:56:7;;8707:2:8;1792:56:7;;;8689:21:8;8746:2;8726:18;;;8719:30;8785:25;8765:18;;;8758:53;8828:18;;1792:56:7;8505:347:8;1792:56:7;-1:-1:-1;;;;;1866:29:7;;1858:69;;;;-1:-1:-1;;;1858:69:7;;9059:2:8;1858:69:7;;;9041:21:8;9098:2;9078:18;;;9071:30;9137:29;9117:18;;;9110:57;9184:18;;1858:69:7;8857:351:8;1858:69:7;1968:1;1951:6;1945:20;:24;1937:60;;;;-1:-1:-1;;;1937:60:7;;9415:2:8;1937:60:7;;;9397:21:8;9454:2;9434:18;;;9427:30;9493:25;9473:18;;;9466:53;9536:18;;1937:60:7;9213:347:8;1937:60:7;2030:1;2015:12;:16;2007:51;;;;-1:-1:-1;;;2007:51:7;;9767:2:8;2007:51:7;;;9749:21:8;9806:2;9786:18;;;9779:30;-1:-1:-1;;;9825:18:8;;;9818:52;9887:18;;2007:51:7;9565:346:8;2007:51:7;2152:6;2160;2168:15;2185;2202:11;;2135:79;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2135:79:7;;;;;;;;;2125:90;;2135:79;2125:90;;;;2267:1;2233:17;;;:7;:17;;;;;:22;2125:90;;-1:-1:-1;;;;;;2233:22:7;:36;2225:71;;;;-1:-1:-1;;;2225:71:7;;10794:2:8;2225:71:7;;;10776:21:8;10833:2;10813:18;;;10806:30;-1:-1:-1;;;10852:18:8;;;10845:52;10914:18;;2225:71:7;10592:346:8;2225:71:7;2345:11;2369:15;2359:26;;;;;:::i;:::-;-1:-1:-1;;;;;4574:32:8;;;4556:51;;4544:2;4529:18;2359:26:7;;;;;;;;;;;;;;;;;;;;;;;2345:40;;2418:5;2395:29;;2466:9;2487:12;2501:6;2509:12;2478:44;;;;;:::i;:::-;-1:-1:-1;;;;;11201:15:8;;;11183:34;;11253:15;;;;11248:2;11233:18;;11226:43;11300:2;11285:18;;11278:34;11133:2;11118:18;2478:44:7;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2607:26:7;;-1:-1:-1;;;2607:26:7;;-1:-1:-1;;;;;4574:32:8;;;2607:26:7;;;4556:51:8;2466:56:7;;-1:-1:-1;2466:56:7;;-1:-1:-1;2607:13:7;;;;;;4529:18:8;;2607:26:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2694:35:7;;-1:-1:-1;;;2694:35:7;;2718:10;2694:35;;;4556:51:8;-1:-1:-1;;;;;2694:23:7;;;-1:-1:-1;2694:23:7;;-1:-1:-1;4529:18:8;;2694:35:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2739:34:7;;-1:-1:-1;;;2739:34:7;;2762:10;2739:34;;;4556:51:8;-1:-1:-1;;;;;2739:22:7;;;-1:-1:-1;2739:22:7;;-1:-1:-1;4529:18:8;;2739:34:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2841:256;;;;;;;;2872:11;-1:-1:-1;;;;;2841:256:7;;;;;2904:12;-1:-1:-1;;;;;2841:256:7;;;;;2938:6;-1:-1:-1;;;;;2841:256:7;;;;;2975:15;-1:-1:-1;;;;;2841:256:7;;;;;3012:6;2841:256;;;;3042:4;2841:256;;;;;;3071:15;2841:256;;;2821:7;:17;2829:8;2821:17;;;;;;;;;;;:276;;;;;;;;;;;;;-1:-1:-1;;;;;2821:276:7;;;;;-1:-1:-1;;;;;2821:276:7;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2821:276:7;;;;;-1:-1:-1;;;;;2821:276:7;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2821:276:7;;;;;-1:-1:-1;;;;;2821:276:7;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2821:276:7;;;;;-1:-1:-1;;;;;2821:276:7;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2821:276:7;;;;;;;;;;;;-1:-1:-1;;2821:276:7;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3116:26:7;;2821:276;3116:26;;;:13;:26;;;;;:33;;;;;2821:276;3116:33;;;;;;3159:9;:24;;;;;;;;;;;;;;;;3193:11;:13;;;;;;:::i;:::-;;;;;;3275:12;-1:-1:-1;;;;;3230:83:7;3262:11;-1:-1:-1;;;;;3230:83:7;3244:8;3230:83;3254:6;3289;3297:15;3230:83;;;;;;;;:::i;:::-;;;;;;;;3332:44;;1476:1907;;;;;;;;:::o;454:45::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;454:45:7;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;454:45:7;;;;;;;;;;;;;;;-1:-1:-1;454:45:7;:::o;556:26::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;556:26:7;:::o;4260:707::-;4311:30;4353:19;4432:9;4427:153;4451:9;:16;4447:20;;4427:153;;;4492:7;:21;4500:9;4510:1;4500:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;4492:21;;;;;;;;;;;;:30;;;;;4488:82;;;4542:13;;;;:::i;:::-;;;;4488:82;4469:3;;;;:::i;:::-;;;;4427:153;;;;4673:11;4659:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4659:26:7;;4643:42;;4695:13;4727:9;4722:200;4746:9;:16;4742:20;;4722:200;;;4787:7;:21;4795:9;4805:1;4795:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;4787:21;;;;;;;;;;;;:30;;;;;4783:129;;;4860:9;4870:1;4860:12;;;;;;;;:::i;:::-;;;;;;;;;4837:13;4851:5;4837:20;;;;;;;;:::i;:::-;;;;;;;;;;:35;4890:7;;;;:::i;:::-;;;;4783:129;4764:3;;;;:::i;:::-;;;;4722:200;;;;4940:20;;4260:707;:::o;5727:253::-;1154:5;;-1:-1:-1;;;;;1154:5:7;1140:10;:19;1132:50;;;;-1:-1:-1;;;1132:50:7;;;;;;;:::i;4101:101::-;4151:16;4186:9;4179:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4101:101;:::o;3923:120::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4019:17:7;;;;:7;:17;;;;;;;;;4012:24;;;;;;;;;-1:-1:-1;;;;;4012:24:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4019:17;4012:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4012:24:7;;;-1:-1:-1;;4012:24:7;;;;;;;;;;;;;;;;;;;;;;;3923:120;-1:-1:-1;;3923:120:7:o;3719:143::-;1154:5;;-1:-1:-1;;;;;1154:5:7;1140:10;:19;1132:50;;;;-1:-1:-1;;;1132:50:7;;;;;;;:::i;:::-;3790:13:::1;:22:::0;;;3827:28:::1;::::0;4374:25:8;;;3827:28:7::1;::::0;4362:2:8;4347:18;3827:28:7::1;;;;;;;3719:143:::0;:::o;5025:263::-;1154:5;;-1:-1:-1;;;;;1154:5:7;1140:10;:19;1132:50;;;;-1:-1:-1;;;1132:50:7;;;;;;;:::i;:::-;-1:-1:-1;;;;;5107:22:7;::::1;5099:57;;;::::0;-1:-1:-1;;;5099:57:7;;14906:2:8;5099:57:7::1;::::0;::::1;14888:21:8::0;14945:2;14925:18;;;14918:30;-1:-1:-1;;;14964:18:8;;;14957:52;15026:18;;5099:57:7::1;14704:346:8::0;5099:57:7::1;5166:21;5190:5:::0;;-1:-1:-1;;;;;5205:16:7;;::::1;-1:-1:-1::0;;;;;;5205:16:7;::::1;::::0;::::1;::::0;;5236:45:::1;::::0;5190:5;;;::::1;::::0;;;5236:45:::1;::::0;5166:21;5236:45:::1;5089:199;5025:263:::0;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:341:8:-;79:6;87;140:2;128:9;119:7;115:23;111:32;108:52;;;156:1;153;146:12;108:52;192:9;179:23;169:33;;252:2;241:9;237:18;224:32;299:5;292:13;285:21;278:5;275:32;265:60;;321:1;318;311:12;265:60;344:5;334:15;;;14:341;;;;;:::o;360:173::-;428:20;;-1:-1:-1;;;;;477:31:8;;467:42;;457:70;;523:1;520;513:12;457:70;360:173;;;:::o;538:186::-;597:6;650:2;638:9;629:7;625:23;621:32;618:52;;;666:1;663;656:12;618:52;689:29;708:9;689:29;:::i;:::-;679:39;538:186;-1:-1:-1;;;538:186:8:o;921:127::-;982:10;977:3;973:20;970:1;963:31;1013:4;1010:1;1003:15;1037:4;1034:1;1027:15;1053:1149;1149:6;1157;1165;1173;1226:3;1214:9;1205:7;1201:23;1197:33;1194:53;;;1243:1;1240;1233:12;1194:53;1283:9;1270:23;1312:18;1353:2;1345:6;1342:14;1339:34;;;1369:1;1366;1359:12;1339:34;1407:6;1396:9;1392:22;1382:32;;1452:7;1445:4;1441:2;1437:13;1433:27;1423:55;;1474:1;1471;1464:12;1423:55;1510:2;1497:16;1532:2;1528;1525:10;1522:36;;;1538:18;;:::i;:::-;1613:2;1607:9;1581:2;1667:13;;-1:-1:-1;;1663:22:8;;;1687:2;1659:31;1655:40;1643:53;;;1711:18;;;1731:22;;;1708:46;1705:72;;;1757:18;;:::i;:::-;1797:10;1793:2;1786:22;1832:2;1824:6;1817:18;1874:7;1867:4;1862:2;1858;1854:11;1850:22;1847:35;1844:55;;;1895:1;1892;1885:12;1844:55;1955:2;1948:4;1944:2;1940:13;1933:4;1925:6;1921:17;1908:50;2002:1;1995:4;1990:2;1982:6;1978:15;1974:26;1967:37;2023:6;2013:16;;;;;;;2048:40;2082:4;2071:9;2067:20;2048:40;:::i;:::-;2038:50;;2107:38;2141:2;2130:9;2126:18;2107:38;:::i;:::-;1053:1149;;;;-1:-1:-1;2097:48:8;;2192:2;2177:18;2164:32;;-1:-1:-1;;1053:1149:8:o;2587:180::-;2646:6;2699:2;2687:9;2678:7;2674:23;2670:32;2667:52;;;2715:1;2712;2705:12;2667:52;-1:-1:-1;2738:23:8;;2587:180;-1:-1:-1;2587:180:8:o;2772:250::-;2857:1;2867:113;2881:6;2878:1;2875:13;2867:113;;;2957:11;;;2951:18;2938:11;;;2931:39;2903:2;2896:10;2867:113;;;-1:-1:-1;;3014:1:8;2996:16;;2989:27;2772:250::o;3027:271::-;3069:3;3107:5;3101:12;3134:6;3129:3;3122:19;3150:76;3219:6;3212:4;3207:3;3203:14;3196:4;3189:5;3185:16;3150:76;:::i;:::-;3280:2;3259:15;-1:-1:-1;;3255:29:8;3246:39;;;;3287:4;3242:50;;3027:271;-1:-1:-1;;3027:271:8:o;3303:735::-;-1:-1:-1;;;;;3652:15:8;;;3634:34;;3704:15;;;3699:2;3684:18;;3677:43;3756:15;;;3751:2;3736:18;;3729:43;3808:15;;3803:2;3788:18;;3781:43;3861:3;3855;3840:19;;3833:32;;;3577:4;;3882:46;;3908:19;;3900:6;3882:46;:::i;:::-;3972:14;;3965:22;3959:3;3944:19;;3937:51;-1:-1:-1;4019:3:8;4004:19;3997:35;3874:54;3303:735;-1:-1:-1;;;;;3303:735:8:o;4618:632::-;4789:2;4841:21;;;4911:13;;4814:18;;;4933:22;;;4760:4;;4789:2;5012:15;;;;4986:2;4971:18;;;4760:4;5055:169;5069:6;5066:1;5063:13;5055:169;;;5130:13;;5118:26;;5199:15;;;;5164:12;;;;5091:1;5084:9;5055:169;;;-1:-1:-1;5241:3:8;;4618:632;-1:-1:-1;;;;;;4618:632:8:o;5255:254::-;5323:6;5331;5384:2;5372:9;5363:7;5359:23;5355:32;5352:52;;;5400:1;5397;5390:12;5352:52;5423:29;5442:9;5423:29;:::i;:::-;5413:39;5499:2;5484:18;;;;5471:32;;-1:-1:-1;;;5255:254:8:o;5514:827::-;5699:2;5688:9;5681:21;5662:4;5738:1;5734;5729:3;5725:11;5721:19;5795:2;5786:6;5780:13;5776:22;5771:2;5760:9;5756:18;5749:50;5863:2;5857;5849:6;5845:15;5839:22;5835:31;5830:2;5819:9;5815:18;5808:59;5931:2;5925;5917:6;5913:15;5907:22;5903:31;5898:2;5887:9;5883:18;5876:59;6000:2;5994;5986:6;5982:15;5976:22;5972:31;5966:3;5955:9;5951:19;5944:60;;6051:3;6043:6;6039:16;6033:23;6093:4;6087:3;6076:9;6072:19;6065:33;6121:52;6168:3;6157:9;6153:19;6139:12;6121:52;:::i;:::-;6107:66;;6242:3;6234:6;6230:16;6224:23;6217:31;6210:39;6204:3;6193:9;6189:19;6182:68;6306:3;6298:6;6294:16;6288:23;6281:4;6270:9;6266:20;6259:53;6329:6;6321:14;;;5514:827;;;;:::o;6528:342::-;6730:2;6712:21;;;6769:2;6749:18;;;6742:30;-1:-1:-1;;;6803:2:8;6788:18;;6781:48;6861:2;6846:18;;6528:342::o;9916:671::-;10159:3;10197:6;10191:13;10213:66;10272:6;10267:3;10260:4;10252:6;10248:17;10213:66;:::i;:::-;-1:-1:-1;;10398:2:8;10394:15;;;10390:24;;10301:16;;;;10376:39;;;10451:15;;;;10447:24;10442:2;10431:14;;10424:48;10499:2;10488:14;;10481:30;;;;10538:2;10527:14;;10520:30;10577:3;10566:15;;;-1:-1:-1;;9916:671:8:o;11323:380::-;11402:1;11398:12;;;;11445;;;11466:61;;11520:4;11512:6;11508:17;11498:27;;11466:61;11573:2;11565:6;11562:14;11542:18;11539:38;11536:161;;11619:10;11614:3;11610:20;11607:1;11600:31;11654:4;11651:1;11644:15;11682:4;11679:1;11672:15;11536:161;;11323:380;;;:::o;11834:545::-;11936:2;11931:3;11928:11;11925:448;;;11972:1;11997:5;11993:2;11986:17;12042:4;12038:2;12028:19;12112:2;12100:10;12096:19;12093:1;12089:27;12083:4;12079:38;12148:4;12136:10;12133:20;12130:47;;;-1:-1:-1;12171:4:8;12130:47;12226:2;12221:3;12217:12;12214:1;12210:20;12204:4;12200:31;12190:41;;12281:82;12299:2;12292:5;12289:13;12281:82;;;12344:17;;;12325:1;12314:13;12281:82;;;12285:3;;;11925:448;11834:545;;;:::o;12555:1352::-;12681:3;12675:10;12708:18;12700:6;12697:30;12694:56;;;12730:18;;:::i;:::-;12759:97;12849:6;12809:38;12841:4;12835:11;12809:38;:::i;:::-;12803:4;12759:97;:::i;:::-;12911:4;;12975:2;12964:14;;12992:1;12987:663;;;;13694:1;13711:6;13708:89;;;-1:-1:-1;13763:19:8;;;13757:26;13708:89;-1:-1:-1;;12512:1:8;12508:11;;;12504:24;12500:29;12490:40;12536:1;12532:11;;;12487:57;13810:81;;12957:944;;12987:663;11781:1;11774:14;;;11818:4;11805:18;;-1:-1:-1;;13023:20:8;;;13141:236;13155:7;13152:1;13149:14;13141:236;;;13244:19;;;13238:26;13223:42;;13336:27;;;;13304:1;13292:14;;;;13171:19;;13141:236;;;13145:3;13405:6;13396:7;13393:19;13390:201;;;13466:19;;;13460:26;-1:-1:-1;;13549:1:8;13545:14;;;13561:3;13541:24;13537:37;13533:42;13518:58;13503:74;;13390:201;-1:-1:-1;;;;;13637:1:8;13621:14;;;13617:22;13604:36;;-1:-1:-1;12555:1352:8:o;13912:232::-;13951:3;13972:17;;;13969:140;;14031:10;14026:3;14022:20;14019:1;14012:31;14066:4;14063:1;14056:15;14094:4;14091:1;14084:15;13969:140;-1:-1:-1;14136:1:8;14125:13;;13912:232::o;14149:418::-;14354:2;14343:9;14336:21;14317:4;14374:45;14415:2;14404:9;14400:18;14392:6;14374:45;:::i;:::-;-1:-1:-1;;;;;14493:15:8;;;14488:2;14473:18;;14466:43;14545:15;;;;14540:2;14525:18;;;14518:43;14366:53;14149:418;-1:-1:-1;;14149:418:8:o;14572:127::-;14633:10;14628:3;14624:20;14621:1;14614:31;14664:4;14661:1;14654:15;14688:4;14685:1;14678:15",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"./vAMM.sol\";\nimport \"./Vault.sol\";\n\n/**\n * @title vAMMFactory\n * @dev Factory contract for deploying vAMM instances\n */\ncontract vAMMFactory {\n    address public owner;\n    \n    struct MarketInfo {\n        address vamm;\n        address vault;\n        address oracle;\n        address collateralToken;\n        string symbol;\n        bool isActive;\n        uint256 createdAt;\n    }\n    \n    mapping(bytes32 => MarketInfo) public markets;\n    mapping(address => bool) public isValidMarket;\n    bytes32[] public marketIds;\n    \n    uint256 public marketCount;\n    uint256 public deploymentFee = 0.1 ether;\n    \n    event MarketCreated(\n        bytes32 indexed marketId,\n        string symbol,\n        address indexed vamm,\n        address indexed vault,\n        address oracle,\n        address collateralToken\n    );\n    \n    event MarketStatusChanged(bytes32 indexed marketId, bool isActive);\n    event DeploymentFeeUpdated(uint256 newFee);\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n    \n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Factory: not owner\");\n        _;\n    }\n    \n    modifier validMarketId(bytes32 marketId) {\n        require(markets[marketId].vamm != address(0), \"Factory: market not found\");\n        _;\n    }\n    \n    constructor() {\n        owner = msg.sender;\n    }\n    \n    /**\n     * @dev Creates a new vAMM market\n     */\n    function createMarket(\n        string memory symbol,\n        address oracle,\n        address collateralToken,\n        uint256 initialPrice\n    ) external payable returns (bytes32 marketId, address vammAddress, address vaultAddress) {\n        require(msg.value >= deploymentFee, \"Factory: insufficient fee\");\n        require(oracle != address(0), \"Factory: invalid oracle\");\n        require(collateralToken != address(0), \"Factory: invalid collateral\");\n        require(bytes(symbol).length > 0, \"Factory: invalid symbol\");\n        require(initialPrice > 0, \"Factory: invalid price\");\n        \n        // Generate unique market ID\n        marketId = keccak256(abi.encodePacked(symbol, oracle, collateralToken, block.timestamp, marketCount));\n        require(markets[marketId].vamm == address(0), \"Factory: market exists\");\n        \n        // Deploy vault first\n        Vault vault = new Vault(collateralToken);\n        vaultAddress = address(vault);\n        \n        // Deploy vAMM\n        vAMM vamm = new vAMM(vaultAddress, oracle, initialPrice);\n        vammAddress = address(vamm);\n        \n        // Set vAMM in vault\n        vault.setVamm(vammAddress);\n        \n        // Transfer ownership to deployer\n        vault.transferOwnership(msg.sender);\n        vamm.transferOwnership(msg.sender);\n        \n        // Store market info\n        markets[marketId] = MarketInfo({\n            vamm: vammAddress,\n            vault: vaultAddress,\n            oracle: oracle,\n            collateralToken: collateralToken,\n            symbol: symbol,\n            isActive: true,\n            createdAt: block.timestamp\n        });\n        \n        isValidMarket[vammAddress] = true;\n        marketIds.push(marketId);\n        marketCount++;\n        \n        emit MarketCreated(marketId, symbol, vammAddress, vaultAddress, oracle, collateralToken);\n        \n        return (marketId, vammAddress, vaultAddress);\n    }\n    \n    /**\n     * @dev Updates market status\n     */\n     \n    function setMarketStatus(bytes32 marketId, bool isActive) external onlyOwner validMarketId(marketId) {\n        markets[marketId].isActive = isActive;\n        emit MarketStatusChanged(marketId, isActive);\n    }\n    \n    /**\n     * @dev Updates deployment fee\n     */\n    function setDeploymentFee(uint256 newFee) external onlyOwner {\n        deploymentFee = newFee;\n        emit DeploymentFeeUpdated(newFee);\n    }\n    \n    /**\n     * @dev Gets market info by ID\n     */\n    function getMarket(bytes32 marketId) external view returns (MarketInfo memory) {\n        return markets[marketId];\n    }\n    \n    /**\n     * @dev Gets all market IDs\n     */\n    function getAllMarketIds() external view returns (bytes32[] memory) {\n        return marketIds;\n    }\n    \n    /**\n     * @dev Gets active markets\n     */\n    function getActiveMarkets() external view returns (bytes32[] memory activeMarkets) {\n        uint256 activeCount = 0;\n        \n        // Count active markets\n        for (uint256 i = 0; i < marketIds.length; i++) {\n            if (markets[marketIds[i]].isActive) {\n                activeCount++;\n            }\n        }\n        \n        // Create array of active market IDs\n        activeMarkets = new bytes32[](activeCount);\n        uint256 index = 0;\n        for (uint256 i = 0; i < marketIds.length; i++) {\n            if (markets[marketIds[i]].isActive) {\n                activeMarkets[index] = marketIds[i];\n                index++;\n            }\n        }\n        \n        return activeMarkets;\n    }\n    \n    /**\n     * @dev Transfers ownership\n     */\n    function transferOwnership(address newOwner) external onlyOwner {\n        require(newOwner != address(0), \"Factory: invalid owner\");\n        address previousOwner = owner;\n        owner = newOwner;\n        emit OwnershipTransferred(previousOwner, newOwner);\n    }\n    \n    /**\n     * @dev Withdraws deployment fees\n     */\n    function withdrawFees() external onlyOwner {\n        uint256 balance = address(this).balance;\n        require(balance > 0, \"Factory: no fees to withdraw\");\n        \n        (bool success, ) = payable(owner).call{value: balance}(\"\");\n        require(success, \"Factory: withdrawal failed\");\n    }\n    \n    /**\n     * @dev Emergency function to recover stuck tokens\n     */\n    function recoverToken(address token, uint256 amount) external onlyOwner {\n        // The IERC20 interface is already imported, so we can use it directly\n        // IERC20(token).transfer(owner, amount); // This line is removed as per the edit hint\n    }\n} ",
  "sourcePath": "/Users/gplay_sayid/Desktop/CODE/dexextra/DexContracts/contracts/vAMMFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/vAMMFactory.sol",
    "exportedSymbols": {
      "IERC20": [
        928
      ],
      "IPriceOracle": [
        29
      ],
      "IVault": [
        135
      ],
      "IvAMM": [
        243
      ],
      "Vault": [
        1814
      ],
      "vAMM": [
        3409
      ],
      "vAMMFactory": [
        3940
      ]
    },
    "id": 3941,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3411,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:7"
      },
      {
        "absolutePath": "project:/contracts/vAMM.sol",
        "file": "./vAMM.sol",
        "id": 3412,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3941,
        "sourceUnit": 3410,
        "src": "58:20:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Vault.sol",
        "file": "./Vault.sol",
        "id": 3413,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3941,
        "sourceUnit": 1815,
        "src": "79:21:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "vAMMFactory",
        "contractDependencies": [
          1814,
          3409
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3414,
          "nodeType": "StructuredDocumentation",
          "src": "102:83:7",
          "text": " @title vAMMFactory\n @dev Factory contract for deploying vAMM instances"
        },
        "fullyImplemented": true,
        "id": 3940,
        "linearizedBaseContracts": [
          3940
        ],
        "name": "vAMMFactory",
        "nameLocation": "195:11:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 3416,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "228:5:7",
            "nodeType": "VariableDeclaration",
            "scope": 3940,
            "src": "213:20:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3415,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "213:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "vAMMFactory.MarketInfo",
            "id": 3431,
            "members": [
              {
                "constant": false,
                "id": 3418,
                "mutability": "mutable",
                "name": "vamm",
                "nameLocation": "280:4:7",
                "nodeType": "VariableDeclaration",
                "scope": 3431,
                "src": "272:12:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 3417,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "272:7:7",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3420,
                "mutability": "mutable",
                "name": "vault",
                "nameLocation": "302:5:7",
                "nodeType": "VariableDeclaration",
                "scope": 3431,
                "src": "294:13:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 3419,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "294:7:7",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3422,
                "mutability": "mutable",
                "name": "oracle",
                "nameLocation": "325:6:7",
                "nodeType": "VariableDeclaration",
                "scope": 3431,
                "src": "317:14:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 3421,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "317:7:7",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3424,
                "mutability": "mutable",
                "name": "collateralToken",
                "nameLocation": "349:15:7",
                "nodeType": "VariableDeclaration",
                "scope": 3431,
                "src": "341:23:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 3423,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "341:7:7",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3426,
                "mutability": "mutable",
                "name": "symbol",
                "nameLocation": "381:6:7",
                "nodeType": "VariableDeclaration",
                "scope": 3431,
                "src": "374:13:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 3425,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "374:6:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3428,
                "mutability": "mutable",
                "name": "isActive",
                "nameLocation": "402:8:7",
                "nodeType": "VariableDeclaration",
                "scope": 3431,
                "src": "397:13:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 3427,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "397:4:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3430,
                "mutability": "mutable",
                "name": "createdAt",
                "nameLocation": "428:9:7",
                "nodeType": "VariableDeclaration",
                "scope": 3431,
                "src": "420:17:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3429,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "420:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "MarketInfo",
            "nameLocation": "251:10:7",
            "nodeType": "StructDefinition",
            "scope": 3940,
            "src": "244:200:7",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7564912b",
            "id": 3436,
            "mutability": "mutable",
            "name": "markets",
            "nameLocation": "492:7:7",
            "nodeType": "VariableDeclaration",
            "scope": 3940,
            "src": "454:45:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_MarketInfo_$3431_storage_$",
              "typeString": "mapping(bytes32 => struct vAMMFactory.MarketInfo)"
            },
            "typeName": {
              "id": 3435,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 3432,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "462:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "454:30:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_MarketInfo_$3431_storage_$",
                "typeString": "mapping(bytes32 => struct vAMMFactory.MarketInfo)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 3434,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 3433,
                  "name": "MarketInfo",
                  "nameLocations": [
                    "473:10:7"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3431,
                  "src": "473:10:7"
                },
                "referencedDeclaration": 3431,
                "src": "473:10:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_MarketInfo_$3431_storage_ptr",
                  "typeString": "struct vAMMFactory.MarketInfo"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "58e6309f",
            "id": 3440,
            "mutability": "mutable",
            "name": "isValidMarket",
            "nameLocation": "537:13:7",
            "nodeType": "VariableDeclaration",
            "scope": 3940,
            "src": "505:45:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 3439,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 3437,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "513:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "505:24:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 3438,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "524:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "779a9683",
            "id": 3443,
            "mutability": "mutable",
            "name": "marketIds",
            "nameLocation": "573:9:7",
            "nodeType": "VariableDeclaration",
            "scope": 3940,
            "src": "556:26:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
              "typeString": "bytes32[]"
            },
            "typeName": {
              "baseType": {
                "id": 3441,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "556:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "id": 3442,
              "nodeType": "ArrayTypeName",
              "src": "556:9:7",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                "typeString": "bytes32[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ec979082",
            "id": 3445,
            "mutability": "mutable",
            "name": "marketCount",
            "nameLocation": "608:11:7",
            "nodeType": "VariableDeclaration",
            "scope": 3940,
            "src": "593:26:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3444,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "593:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f2cff57f",
            "id": 3448,
            "mutability": "mutable",
            "name": "deploymentFee",
            "nameLocation": "640:13:7",
            "nodeType": "VariableDeclaration",
            "scope": 3940,
            "src": "625:40:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3446,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "625:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "302e31",
              "id": 3447,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "656:9:7",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000_by_1",
                "typeString": "int_const 100000000000000000"
              },
              "value": "0.1"
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "c225f66bd854bba265bee08fc100e91c698aa86a9e70b0d9280d44f91066a93f",
            "id": 3462,
            "name": "MarketCreated",
            "nameLocation": "682:13:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3450,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "marketId",
                  "nameLocation": "721:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 3462,
                  "src": "705:24:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3449,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "705:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3452,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "746:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 3462,
                  "src": "739:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3451,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "739:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3454,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "vamm",
                  "nameLocation": "778:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 3462,
                  "src": "762:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3453,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "762:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3456,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "808:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 3462,
                  "src": "792:21:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3455,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "792:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3458,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "oracle",
                  "nameLocation": "831:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 3462,
                  "src": "823:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3457,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "823:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3460,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "collateralToken",
                  "nameLocation": "855:15:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 3462,
                  "src": "847:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3459,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "847:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "695:181:7"
            },
            "src": "676:201:7"
          },
          {
            "anonymous": false,
            "eventSelector": "f74802a5f03ef3b60653fc5ef30996c42340c6f63ad2a625f0f7d4f996b28f35",
            "id": 3468,
            "name": "MarketStatusChanged",
            "nameLocation": "893:19:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3467,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3464,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "marketId",
                  "nameLocation": "929:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 3468,
                  "src": "913:24:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3463,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "913:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3466,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isActive",
                  "nameLocation": "944:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 3468,
                  "src": "939:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3465,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "939:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "912:41:7"
            },
            "src": "887:67:7"
          },
          {
            "anonymous": false,
            "eventSelector": "40bd824d588484917db8fa4fc894c1e0feae5a75885290ba7b97521cebf82a80",
            "id": 3472,
            "name": "DeploymentFeeUpdated",
            "nameLocation": "965:20:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3471,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3470,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newFee",
                  "nameLocation": "994:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 3472,
                  "src": "986:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3469,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "986:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "985:16:7"
            },
            "src": "959:43:7"
          },
          {
            "anonymous": false,
            "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
            "id": 3478,
            "name": "OwnershipTransferred",
            "nameLocation": "1013:20:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3477,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3474,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "previousOwner",
                  "nameLocation": "1050:13:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 3478,
                  "src": "1034:29:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3473,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1034:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3476,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "1081:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 3478,
                  "src": "1065:24:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3475,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1065:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1033:57:7"
            },
            "src": "1007:84:7"
          },
          {
            "body": {
              "id": 3489,
              "nodeType": "Block",
              "src": "1122:78:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3481,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1140:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1144:6:7",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1140:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3483,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3416,
                          "src": "1154:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1140:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466163746f72793a206e6f74206f776e6572",
                        "id": 3485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1161:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa1d2cb382dd9523d019d53b1b38b6bbe6b9df49853db31a2405fe64e03683ce",
                          "typeString": "literal_string \"Factory: not owner\""
                        },
                        "value": "Factory: not owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fa1d2cb382dd9523d019d53b1b38b6bbe6b9df49853db31a2405fe64e03683ce",
                          "typeString": "literal_string \"Factory: not owner\""
                        }
                      ],
                      "id": 3480,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1132:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1132:50:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3487,
                  "nodeType": "ExpressionStatement",
                  "src": "1132:50:7"
                },
                {
                  "id": 3488,
                  "nodeType": "PlaceholderStatement",
                  "src": "1192:1:7"
                }
              ]
            },
            "id": 3490,
            "name": "onlyOwner",
            "nameLocation": "1110:9:7",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3479,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1119:2:7"
            },
            "src": "1101:99:7",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3508,
              "nodeType": "Block",
              "src": "1251:102:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 3495,
                              "name": "markets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3436,
                              "src": "1269:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_MarketInfo_$3431_storage_$",
                                "typeString": "mapping(bytes32 => struct vAMMFactory.MarketInfo storage ref)"
                              }
                            },
                            "id": 3497,
                            "indexExpression": {
                              "id": 3496,
                              "name": "marketId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3492,
                              "src": "1277:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1269:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MarketInfo_$3431_storage",
                              "typeString": "struct vAMMFactory.MarketInfo storage ref"
                            }
                          },
                          "id": 3498,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1287:4:7",
                          "memberName": "vamm",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3418,
                          "src": "1269:22:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3501,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1303:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3500,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1295:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3499,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1295:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1295:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1269:36:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466163746f72793a206d61726b6574206e6f7420666f756e64",
                        "id": 3504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1307:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ab67c2eb430e8f3dae59dca775ba79355a8a6d3a0b5fbfceec881bc6dd8b9657",
                          "typeString": "literal_string \"Factory: market not found\""
                        },
                        "value": "Factory: market not found"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ab67c2eb430e8f3dae59dca775ba79355a8a6d3a0b5fbfceec881bc6dd8b9657",
                          "typeString": "literal_string \"Factory: market not found\""
                        }
                      ],
                      "id": 3494,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1261:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1261:74:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3506,
                  "nodeType": "ExpressionStatement",
                  "src": "1261:74:7"
                },
                {
                  "id": 3507,
                  "nodeType": "PlaceholderStatement",
                  "src": "1345:1:7"
                }
              ]
            },
            "id": 3509,
            "name": "validMarketId",
            "nameLocation": "1219:13:7",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3493,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3492,
                  "mutability": "mutable",
                  "name": "marketId",
                  "nameLocation": "1241:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 3509,
                  "src": "1233:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3491,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1233:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1232:18:7"
            },
            "src": "1210:143:7",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3517,
              "nodeType": "Block",
              "src": "1377:35:7",
              "statements": [
                {
                  "expression": {
                    "id": 3515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3512,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3416,
                      "src": "1387:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3513,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1395:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3514,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1399:6:7",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1395:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1387:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3516,
                  "nodeType": "ExpressionStatement",
                  "src": "1387:18:7"
                }
              ]
            },
            "id": 3518,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3510,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1374:2:7"
            },
            "returnParameters": {
              "id": 3511,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1377:0:7"
            },
            "scope": 3940,
            "src": "1363:49:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3707,
              "nodeType": "Block",
              "src": "1708:1675:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3537,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1726:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1730:5:7",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1726:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 3539,
                          "name": "deploymentFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3448,
                          "src": "1739:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1726:26:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466163746f72793a20696e73756666696369656e7420666565",
                        "id": 3541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1754:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7061440a344e1ff3b58d48275b585fdabf843a6a983d91548865f42561f3f9bc",
                          "typeString": "literal_string \"Factory: insufficient fee\""
                        },
                        "value": "Factory: insufficient fee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7061440a344e1ff3b58d48275b585fdabf843a6a983d91548865f42561f3f9bc",
                          "typeString": "literal_string \"Factory: insufficient fee\""
                        }
                      ],
                      "id": 3536,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1718:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1718:64:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3543,
                  "nodeType": "ExpressionStatement",
                  "src": "1718:64:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3545,
                          "name": "oracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3523,
                          "src": "1800:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3548,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1818:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3547,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1810:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3546,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1810:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1810:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1800:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466163746f72793a20696e76616c6964206f7261636c65",
                        "id": 3551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1822:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_09dd9188eee8d7dd0f640bdbf07732817706387f8eb77c9699fe395546434a6b",
                          "typeString": "literal_string \"Factory: invalid oracle\""
                        },
                        "value": "Factory: invalid oracle"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_09dd9188eee8d7dd0f640bdbf07732817706387f8eb77c9699fe395546434a6b",
                          "typeString": "literal_string \"Factory: invalid oracle\""
                        }
                      ],
                      "id": 3544,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1792:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1792:56:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3553,
                  "nodeType": "ExpressionStatement",
                  "src": "1792:56:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3555,
                          "name": "collateralToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3525,
                          "src": "1866:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3558,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1893:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3557,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1885:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3556,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1885:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1885:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1866:29:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466163746f72793a20696e76616c696420636f6c6c61746572616c",
                        "id": 3561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1897:29:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_61297820fb3c739e12f6ba624db6aa4c85d285a4cfe53f457ffc8ed2ece83241",
                          "typeString": "literal_string \"Factory: invalid collateral\""
                        },
                        "value": "Factory: invalid collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_61297820fb3c739e12f6ba624db6aa4c85d285a4cfe53f457ffc8ed2ece83241",
                          "typeString": "literal_string \"Factory: invalid collateral\""
                        }
                      ],
                      "id": 3554,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1858:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1858:69:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3563,
                  "nodeType": "ExpressionStatement",
                  "src": "1858:69:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 3567,
                                "name": "symbol",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3521,
                                "src": "1951:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 3566,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1945:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 3565,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "1945:5:7",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3568,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1945:13:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 3569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1959:6:7",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1945:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1968:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1945:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466163746f72793a20696e76616c69642073796d626f6c",
                        "id": 3572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1971:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d1e0210f99355610857582d69249f026a236aae11869ef621878e42605d7072",
                          "typeString": "literal_string \"Factory: invalid symbol\""
                        },
                        "value": "Factory: invalid symbol"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4d1e0210f99355610857582d69249f026a236aae11869ef621878e42605d7072",
                          "typeString": "literal_string \"Factory: invalid symbol\""
                        }
                      ],
                      "id": 3564,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1937:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1937:60:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3574,
                  "nodeType": "ExpressionStatement",
                  "src": "1937:60:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3576,
                          "name": "initialPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3527,
                          "src": "2015:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2030:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2015:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466163746f72793a20696e76616c6964207072696365",
                        "id": 3579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2033:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_33ad97cfc93c24bbf61e5c09785c33e626309cf5912e80d37679d7f3c0a71fa7",
                          "typeString": "literal_string \"Factory: invalid price\""
                        },
                        "value": "Factory: invalid price"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_33ad97cfc93c24bbf61e5c09785c33e626309cf5912e80d37679d7f3c0a71fa7",
                          "typeString": "literal_string \"Factory: invalid price\""
                        }
                      ],
                      "id": 3575,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2007:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2007:51:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3581,
                  "nodeType": "ExpressionStatement",
                  "src": "2007:51:7"
                },
                {
                  "expression": {
                    "id": 3594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3582,
                      "name": "marketId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3530,
                      "src": "2114:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 3586,
                              "name": "symbol",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3521,
                              "src": "2152:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 3587,
                              "name": "oracle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3523,
                              "src": "2160:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3588,
                              "name": "collateralToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3525,
                              "src": "2168:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 3589,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967292,
                                "src": "2185:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 3590,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2191:9:7",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "2185:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3591,
                              "name": "marketCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3445,
                              "src": "2202:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3584,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967295,
                              "src": "2135:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 3585,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "2139:12:7",
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "2135:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 3592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2135:79:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 3583,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967288,
                        "src": "2125:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 3593,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2125:90:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2114:101:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 3595,
                  "nodeType": "ExpressionStatement",
                  "src": "2114:101:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 3597,
                              "name": "markets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3436,
                              "src": "2233:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_MarketInfo_$3431_storage_$",
                                "typeString": "mapping(bytes32 => struct vAMMFactory.MarketInfo storage ref)"
                              }
                            },
                            "id": 3599,
                            "indexExpression": {
                              "id": 3598,
                              "name": "marketId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3530,
                              "src": "2241:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2233:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MarketInfo_$3431_storage",
                              "typeString": "struct vAMMFactory.MarketInfo storage ref"
                            }
                          },
                          "id": 3600,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2251:4:7",
                          "memberName": "vamm",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3418,
                          "src": "2233:22:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3603,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2267:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3602,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2259:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3601,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2259:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2259:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2233:36:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466163746f72793a206d61726b657420657869737473",
                        "id": 3606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2271:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6083f6b5580fd1f93f1b5e7afe0bad1b978aae84799ca716a43d5968997047b6",
                          "typeString": "literal_string \"Factory: market exists\""
                        },
                        "value": "Factory: market exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6083f6b5580fd1f93f1b5e7afe0bad1b978aae84799ca716a43d5968997047b6",
                          "typeString": "literal_string \"Factory: market exists\""
                        }
                      ],
                      "id": 3596,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2225:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2225:71:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3608,
                  "nodeType": "ExpressionStatement",
                  "src": "2225:71:7"
                },
                {
                  "assignments": [
                    3611
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3611,
                      "mutability": "mutable",
                      "name": "vault",
                      "nameLocation": "2351:5:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 3707,
                      "src": "2345:11:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Vault_$1814",
                        "typeString": "contract Vault"
                      },
                      "typeName": {
                        "id": 3610,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3609,
                          "name": "Vault",
                          "nameLocations": [
                            "2345:5:7"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1814,
                          "src": "2345:5:7"
                        },
                        "referencedDeclaration": 1814,
                        "src": "2345:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vault_$1814",
                          "typeString": "contract Vault"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3617,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3615,
                        "name": "collateralToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3525,
                        "src": "2369:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3614,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2359:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Vault_$1814_$",
                        "typeString": "function (address) returns (contract Vault)"
                      },
                      "typeName": {
                        "id": 3613,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3612,
                          "name": "Vault",
                          "nameLocations": [
                            "2363:5:7"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1814,
                          "src": "2363:5:7"
                        },
                        "referencedDeclaration": 1814,
                        "src": "2363:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vault_$1814",
                          "typeString": "contract Vault"
                        }
                      }
                    },
                    "id": 3616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2359:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Vault_$1814",
                      "typeString": "contract Vault"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2345:40:7"
                },
                {
                  "expression": {
                    "id": 3623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3618,
                      "name": "vaultAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3534,
                      "src": "2395:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3621,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3611,
                          "src": "2418:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vault_$1814",
                            "typeString": "contract Vault"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Vault_$1814",
                            "typeString": "contract Vault"
                          }
                        ],
                        "id": 3620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2410:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 3619,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2410:7:7",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3622,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2410:14:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2395:29:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3624,
                  "nodeType": "ExpressionStatement",
                  "src": "2395:29:7"
                },
                {
                  "assignments": [
                    3627
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3627,
                      "mutability": "mutable",
                      "name": "vamm",
                      "nameLocation": "2471:4:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 3707,
                      "src": "2466:9:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_vAMM_$3409",
                        "typeString": "contract vAMM"
                      },
                      "typeName": {
                        "id": 3626,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3625,
                          "name": "vAMM",
                          "nameLocations": [
                            "2466:4:7"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3409,
                          "src": "2466:4:7"
                        },
                        "referencedDeclaration": 3409,
                        "src": "2466:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_vAMM_$3409",
                          "typeString": "contract vAMM"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3635,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3631,
                        "name": "vaultAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3534,
                        "src": "2487:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3632,
                        "name": "oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3523,
                        "src": "2501:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3633,
                        "name": "initialPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3527,
                        "src": "2509:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3630,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2478:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_contract$_vAMM_$3409_$",
                        "typeString": "function (address,address,uint256) returns (contract vAMM)"
                      },
                      "typeName": {
                        "id": 3629,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3628,
                          "name": "vAMM",
                          "nameLocations": [
                            "2482:4:7"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3409,
                          "src": "2482:4:7"
                        },
                        "referencedDeclaration": 3409,
                        "src": "2482:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_vAMM_$3409",
                          "typeString": "contract vAMM"
                        }
                      }
                    },
                    "id": 3634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2478:44:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_vAMM_$3409",
                      "typeString": "contract vAMM"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2466:56:7"
                },
                {
                  "expression": {
                    "id": 3641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3636,
                      "name": "vammAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3532,
                      "src": "2532:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3639,
                          "name": "vamm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3627,
                          "src": "2554:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_vAMM_$3409",
                            "typeString": "contract vAMM"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_vAMM_$3409",
                            "typeString": "contract vAMM"
                          }
                        ],
                        "id": 3638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2546:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 3637,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2546:7:7",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2546:13:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2532:27:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3642,
                  "nodeType": "ExpressionStatement",
                  "src": "2532:27:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3646,
                        "name": "vammAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3532,
                        "src": "2621:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3643,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3611,
                        "src": "2607:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vault_$1814",
                          "typeString": "contract Vault"
                        }
                      },
                      "id": 3645,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2613:7:7",
                      "memberName": "setVamm",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1121,
                      "src": "2607:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 3647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2607:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3648,
                  "nodeType": "ExpressionStatement",
                  "src": "2607:26:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3652,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2718:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2722:6:7",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2718:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3649,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3611,
                        "src": "2694:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vault_$1814",
                          "typeString": "contract Vault"
                        }
                      },
                      "id": 3651,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2700:17:7",
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1789,
                      "src": "2694:23:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 3654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2694:35:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3655,
                  "nodeType": "ExpressionStatement",
                  "src": "2694:35:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3659,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2762:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2766:6:7",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2762:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3656,
                        "name": "vamm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3627,
                        "src": "2739:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_vAMM_$3409",
                          "typeString": "contract vAMM"
                        }
                      },
                      "id": 3658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2744:17:7",
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3388,
                      "src": "2739:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 3661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2739:34:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3662,
                  "nodeType": "ExpressionStatement",
                  "src": "2739:34:7"
                },
                {
                  "expression": {
                    "id": 3676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3663,
                        "name": "markets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3436,
                        "src": "2821:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_MarketInfo_$3431_storage_$",
                          "typeString": "mapping(bytes32 => struct vAMMFactory.MarketInfo storage ref)"
                        }
                      },
                      "id": 3665,
                      "indexExpression": {
                        "id": 3664,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3530,
                        "src": "2829:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2821:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MarketInfo_$3431_storage",
                        "typeString": "struct vAMMFactory.MarketInfo storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3667,
                          "name": "vammAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3532,
                          "src": "2872:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3668,
                          "name": "vaultAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3534,
                          "src": "2904:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3669,
                          "name": "oracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3523,
                          "src": "2938:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3670,
                          "name": "collateralToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3525,
                          "src": "2975:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3671,
                          "name": "symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3521,
                          "src": "3012:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 3672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3042:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "expression": {
                            "id": 3673,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "3071:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 3674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3077:9:7",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3071:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 3666,
                        "name": "MarketInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3431,
                        "src": "2841:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_MarketInfo_$3431_storage_ptr_$",
                          "typeString": "type(struct vAMMFactory.MarketInfo storage pointer)"
                        }
                      },
                      "id": 3675,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "2866:4:7",
                        "2897:5:7",
                        "2930:6:7",
                        "2958:15:7",
                        "3004:6:7",
                        "3032:8:7",
                        "3060:9:7"
                      ],
                      "names": [
                        "vamm",
                        "vault",
                        "oracle",
                        "collateralToken",
                        "symbol",
                        "isActive",
                        "createdAt"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "2841:256:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MarketInfo_$3431_memory_ptr",
                        "typeString": "struct vAMMFactory.MarketInfo memory"
                      }
                    },
                    "src": "2821:276:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MarketInfo_$3431_storage",
                      "typeString": "struct vAMMFactory.MarketInfo storage ref"
                    }
                  },
                  "id": 3677,
                  "nodeType": "ExpressionStatement",
                  "src": "2821:276:7"
                },
                {
                  "expression": {
                    "id": 3682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3678,
                        "name": "isValidMarket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3440,
                        "src": "3116:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3680,
                      "indexExpression": {
                        "id": 3679,
                        "name": "vammAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3532,
                        "src": "3130:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3116:26:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3681,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3145:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3116:33:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3683,
                  "nodeType": "ExpressionStatement",
                  "src": "3116:33:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3687,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3530,
                        "src": "3174:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 3684,
                        "name": "marketIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3443,
                        "src": "3159:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 3686,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3169:4:7",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3159:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
                        "typeString": "function (bytes32[] storage pointer,bytes32)"
                      }
                    },
                    "id": 3688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3159:24:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3689,
                  "nodeType": "ExpressionStatement",
                  "src": "3159:24:7"
                },
                {
                  "expression": {
                    "id": 3691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "3193:13:7",
                    "subExpression": {
                      "id": 3690,
                      "name": "marketCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3445,
                      "src": "3193:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3692,
                  "nodeType": "ExpressionStatement",
                  "src": "3193:13:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3694,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3530,
                        "src": "3244:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 3695,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3521,
                        "src": "3254:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 3696,
                        "name": "vammAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3532,
                        "src": "3262:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3697,
                        "name": "vaultAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3534,
                        "src": "3275:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3698,
                        "name": "oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3523,
                        "src": "3289:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3699,
                        "name": "collateralToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3525,
                        "src": "3297:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3693,
                      "name": "MarketCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3462,
                      "src": "3230:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_string_memory_ptr_$_t_address_$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,string memory,address,address,address,address)"
                      }
                    },
                    "id": 3700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3230:83:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3701,
                  "nodeType": "EmitStatement",
                  "src": "3225:88:7"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 3702,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3530,
                        "src": "3340:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 3703,
                        "name": "vammAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3532,
                        "src": "3350:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3704,
                        "name": "vaultAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3534,
                        "src": "3363:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 3705,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3339:37:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes32_$_t_address_$_t_address_$",
                      "typeString": "tuple(bytes32,address,address)"
                    }
                  },
                  "functionReturnParameters": 3535,
                  "id": 3706,
                  "nodeType": "Return",
                  "src": "3332:44:7"
                }
              ]
            },
            "documentation": {
              "id": 3519,
              "nodeType": "StructuredDocumentation",
              "src": "1422:49:7",
              "text": " @dev Creates a new vAMM market"
            },
            "functionSelector": "73d8c6bd",
            "id": 3708,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createMarket",
            "nameLocation": "1485:12:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3528,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3521,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "1521:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 3708,
                  "src": "1507:20:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3520,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1507:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3523,
                  "mutability": "mutable",
                  "name": "oracle",
                  "nameLocation": "1545:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 3708,
                  "src": "1537:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3522,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1537:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3525,
                  "mutability": "mutable",
                  "name": "collateralToken",
                  "nameLocation": "1569:15:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 3708,
                  "src": "1561:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3524,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1561:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3527,
                  "mutability": "mutable",
                  "name": "initialPrice",
                  "nameLocation": "1602:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 3708,
                  "src": "1594:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3526,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1594:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1497:123:7"
            },
            "returnParameters": {
              "id": 3535,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3530,
                  "mutability": "mutable",
                  "name": "marketId",
                  "nameLocation": "1655:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 3708,
                  "src": "1647:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3529,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1647:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3532,
                  "mutability": "mutable",
                  "name": "vammAddress",
                  "nameLocation": "1673:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 3708,
                  "src": "1665:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3531,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1665:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3534,
                  "mutability": "mutable",
                  "name": "vaultAddress",
                  "nameLocation": "1694:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 3708,
                  "src": "1686:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3533,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1686:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1646:61:7"
            },
            "scope": 3940,
            "src": "1476:1907:7",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3733,
              "nodeType": "Block",
              "src": "3550:108:7",
              "statements": [
                {
                  "expression": {
                    "id": 3726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 3721,
                          "name": "markets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3436,
                          "src": "3560:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_MarketInfo_$3431_storage_$",
                            "typeString": "mapping(bytes32 => struct vAMMFactory.MarketInfo storage ref)"
                          }
                        },
                        "id": 3723,
                        "indexExpression": {
                          "id": 3722,
                          "name": "marketId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3711,
                          "src": "3568:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3560:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MarketInfo_$3431_storage",
                          "typeString": "struct vAMMFactory.MarketInfo storage ref"
                        }
                      },
                      "id": 3724,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3578:8:7",
                      "memberName": "isActive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3428,
                      "src": "3560:26:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3725,
                      "name": "isActive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3713,
                      "src": "3589:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3560:37:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3727,
                  "nodeType": "ExpressionStatement",
                  "src": "3560:37:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3729,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3711,
                        "src": "3632:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 3730,
                        "name": "isActive",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3713,
                        "src": "3642:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3728,
                      "name": "MarketStatusChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3468,
                      "src": "3612:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bool_$returns$__$",
                        "typeString": "function (bytes32,bool)"
                      }
                    },
                    "id": 3731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3612:39:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3732,
                  "nodeType": "EmitStatement",
                  "src": "3607:44:7"
                }
              ]
            },
            "documentation": {
              "id": 3709,
              "nodeType": "StructuredDocumentation",
              "src": "3393:45:7",
              "text": " @dev Updates market status"
            },
            "functionSelector": "2a519733",
            "id": 3734,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3716,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3715,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3516:9:7"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3490,
                  "src": "3516:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "3516:9:7"
              },
              {
                "arguments": [
                  {
                    "id": 3718,
                    "name": "marketId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3711,
                    "src": "3540:8:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 3719,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3717,
                  "name": "validMarketId",
                  "nameLocations": [
                    "3526:13:7"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3509,
                  "src": "3526:13:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "3526:23:7"
              }
            ],
            "name": "setMarketStatus",
            "nameLocation": "3458:15:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3711,
                  "mutability": "mutable",
                  "name": "marketId",
                  "nameLocation": "3482:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 3734,
                  "src": "3474:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3710,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3474:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3713,
                  "mutability": "mutable",
                  "name": "isActive",
                  "nameLocation": "3497:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 3734,
                  "src": "3492:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3712,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3492:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3473:33:7"
            },
            "returnParameters": {
              "id": 3720,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3550:0:7"
            },
            "scope": 3940,
            "src": "3449:209:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3750,
              "nodeType": "Block",
              "src": "3780:82:7",
              "statements": [
                {
                  "expression": {
                    "id": 3744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3742,
                      "name": "deploymentFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3448,
                      "src": "3790:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3743,
                      "name": "newFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3737,
                      "src": "3806:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3790:22:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3745,
                  "nodeType": "ExpressionStatement",
                  "src": "3790:22:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3747,
                        "name": "newFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3737,
                        "src": "3848:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3746,
                      "name": "DeploymentFeeUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3472,
                      "src": "3827:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3827:28:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3749,
                  "nodeType": "EmitStatement",
                  "src": "3822:33:7"
                }
              ]
            },
            "documentation": {
              "id": 3735,
              "nodeType": "StructuredDocumentation",
              "src": "3668:46:7",
              "text": " @dev Updates deployment fee"
            },
            "functionSelector": "d002462b",
            "id": 3751,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3740,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3739,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3770:9:7"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3490,
                  "src": "3770:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "3770:9:7"
              }
            ],
            "name": "setDeploymentFee",
            "nameLocation": "3728:16:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3738,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3737,
                  "mutability": "mutable",
                  "name": "newFee",
                  "nameLocation": "3753:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 3751,
                  "src": "3745:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3736,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3745:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3744:16:7"
            },
            "returnParameters": {
              "id": 3741,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3780:0:7"
            },
            "scope": 3940,
            "src": "3719:143:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3764,
              "nodeType": "Block",
              "src": "4002:41:7",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 3760,
                      "name": "markets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3436,
                      "src": "4019:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_MarketInfo_$3431_storage_$",
                        "typeString": "mapping(bytes32 => struct vAMMFactory.MarketInfo storage ref)"
                      }
                    },
                    "id": 3762,
                    "indexExpression": {
                      "id": 3761,
                      "name": "marketId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3754,
                      "src": "4027:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4019:17:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MarketInfo_$3431_storage",
                      "typeString": "struct vAMMFactory.MarketInfo storage ref"
                    }
                  },
                  "functionReturnParameters": 3759,
                  "id": 3763,
                  "nodeType": "Return",
                  "src": "4012:24:7"
                }
              ]
            },
            "documentation": {
              "id": 3752,
              "nodeType": "StructuredDocumentation",
              "src": "3872:46:7",
              "text": " @dev Gets market info by ID"
            },
            "functionSelector": "c3c95c7b",
            "id": 3765,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMarket",
            "nameLocation": "3932:9:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3754,
                  "mutability": "mutable",
                  "name": "marketId",
                  "nameLocation": "3950:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 3765,
                  "src": "3942:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3753,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3942:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3941:18:7"
            },
            "returnParameters": {
              "id": 3759,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3758,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3765,
                  "src": "3983:17:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MarketInfo_$3431_memory_ptr",
                    "typeString": "struct vAMMFactory.MarketInfo"
                  },
                  "typeName": {
                    "id": 3757,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3756,
                      "name": "MarketInfo",
                      "nameLocations": [
                        "3983:10:7"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3431,
                      "src": "3983:10:7"
                    },
                    "referencedDeclaration": 3431,
                    "src": "3983:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MarketInfo_$3431_storage_ptr",
                      "typeString": "struct vAMMFactory.MarketInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3982:19:7"
            },
            "scope": 3940,
            "src": "3923:120:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3774,
              "nodeType": "Block",
              "src": "4169:33:7",
              "statements": [
                {
                  "expression": {
                    "id": 3772,
                    "name": "marketIds",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3443,
                    "src": "4186:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                      "typeString": "bytes32[] storage ref"
                    }
                  },
                  "functionReturnParameters": 3771,
                  "id": 3773,
                  "nodeType": "Return",
                  "src": "4179:16:7"
                }
              ]
            },
            "documentation": {
              "id": 3766,
              "nodeType": "StructuredDocumentation",
              "src": "4053:43:7",
              "text": " @dev Gets all market IDs"
            },
            "functionSelector": "b85ed636",
            "id": 3775,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllMarketIds",
            "nameLocation": "4110:15:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3767,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4125:2:7"
            },
            "returnParameters": {
              "id": 3771,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3770,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3775,
                  "src": "4151:16:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3768,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "4151:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 3769,
                    "nodeType": "ArrayTypeName",
                    "src": "4151:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4150:18:7"
            },
            "scope": 3940,
            "src": "4101:101:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3856,
              "nodeType": "Block",
              "src": "4343:624:7",
              "statements": [
                {
                  "assignments": [
                    3783
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3783,
                      "mutability": "mutable",
                      "name": "activeCount",
                      "nameLocation": "4361:11:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 3856,
                      "src": "4353:19:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3782,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4353:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3785,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 3784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4375:1:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4353:23:7"
                },
                {
                  "body": {
                    "id": 3808,
                    "nodeType": "Block",
                    "src": "4474:106:7",
                    "statements": [
                      {
                        "condition": {
                          "expression": {
                            "baseExpression": {
                              "id": 3797,
                              "name": "markets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3436,
                              "src": "4492:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_MarketInfo_$3431_storage_$",
                                "typeString": "mapping(bytes32 => struct vAMMFactory.MarketInfo storage ref)"
                              }
                            },
                            "id": 3801,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 3798,
                                "name": "marketIds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3443,
                                "src": "4500:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                  "typeString": "bytes32[] storage ref"
                                }
                              },
                              "id": 3800,
                              "indexExpression": {
                                "id": 3799,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3787,
                                "src": "4510:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4500:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4492:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MarketInfo_$3431_storage",
                              "typeString": "struct vAMMFactory.MarketInfo storage ref"
                            }
                          },
                          "id": 3802,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4514:8:7",
                          "memberName": "isActive",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3428,
                          "src": "4492:30:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3807,
                        "nodeType": "IfStatement",
                        "src": "4488:82:7",
                        "trueBody": {
                          "id": 3806,
                          "nodeType": "Block",
                          "src": "4524:46:7",
                          "statements": [
                            {
                              "expression": {
                                "id": 3804,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "4542:13:7",
                                "subExpression": {
                                  "id": 3803,
                                  "name": "activeCount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3783,
                                  "src": "4542:11:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3805,
                              "nodeType": "ExpressionStatement",
                              "src": "4542:13:7"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3790,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3787,
                      "src": "4447:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 3791,
                        "name": "marketIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3443,
                        "src": "4451:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 3792,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4461:6:7",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4451:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4447:20:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3809,
                  "initializationExpression": {
                    "assignments": [
                      3787
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3787,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4440:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 3809,
                        "src": "4432:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3786,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4432:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3789,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 3788,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4444:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4432:13:7"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 3795,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4469:3:7",
                      "subExpression": {
                        "id": 3794,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3787,
                        "src": "4469:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3796,
                    "nodeType": "ExpressionStatement",
                    "src": "4469:3:7"
                  },
                  "nodeType": "ForStatement",
                  "src": "4427:153:7"
                },
                {
                  "expression": {
                    "id": 3816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3810,
                      "name": "activeMarkets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3780,
                      "src": "4643:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3814,
                          "name": "activeCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3783,
                          "src": "4673:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 3813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4659:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (bytes32[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 3811,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "4663:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 3812,
                          "nodeType": "ArrayTypeName",
                          "src": "4663:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        }
                      },
                      "id": 3815,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4659:26:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[] memory"
                      }
                    },
                    "src": "4643:42:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "id": 3817,
                  "nodeType": "ExpressionStatement",
                  "src": "4643:42:7"
                },
                {
                  "assignments": [
                    3819
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3819,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "4703:5:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 3856,
                      "src": "4695:13:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3818,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4695:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3821,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 3820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4711:1:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4695:17:7"
                },
                {
                  "body": {
                    "id": 3852,
                    "nodeType": "Block",
                    "src": "4769:153:7",
                    "statements": [
                      {
                        "condition": {
                          "expression": {
                            "baseExpression": {
                              "id": 3833,
                              "name": "markets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3436,
                              "src": "4787:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_MarketInfo_$3431_storage_$",
                                "typeString": "mapping(bytes32 => struct vAMMFactory.MarketInfo storage ref)"
                              }
                            },
                            "id": 3837,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 3834,
                                "name": "marketIds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3443,
                                "src": "4795:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                  "typeString": "bytes32[] storage ref"
                                }
                              },
                              "id": 3836,
                              "indexExpression": {
                                "id": 3835,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3823,
                                "src": "4805:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4795:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4787:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MarketInfo_$3431_storage",
                              "typeString": "struct vAMMFactory.MarketInfo storage ref"
                            }
                          },
                          "id": 3838,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4809:8:7",
                          "memberName": "isActive",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3428,
                          "src": "4787:30:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3851,
                        "nodeType": "IfStatement",
                        "src": "4783:129:7",
                        "trueBody": {
                          "id": 3850,
                          "nodeType": "Block",
                          "src": "4819:93:7",
                          "statements": [
                            {
                              "expression": {
                                "id": 3845,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 3839,
                                    "name": "activeMarkets",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3780,
                                    "src": "4837:13:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                      "typeString": "bytes32[] memory"
                                    }
                                  },
                                  "id": 3841,
                                  "indexExpression": {
                                    "id": 3840,
                                    "name": "index",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3819,
                                    "src": "4851:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "4837:20:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 3842,
                                    "name": "marketIds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3443,
                                    "src": "4860:9:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                      "typeString": "bytes32[] storage ref"
                                    }
                                  },
                                  "id": 3844,
                                  "indexExpression": {
                                    "id": 3843,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3823,
                                    "src": "4870:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4860:12:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "4837:35:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 3846,
                              "nodeType": "ExpressionStatement",
                              "src": "4837:35:7"
                            },
                            {
                              "expression": {
                                "id": 3848,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "4890:7:7",
                                "subExpression": {
                                  "id": 3847,
                                  "name": "index",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3819,
                                  "src": "4890:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3849,
                              "nodeType": "ExpressionStatement",
                              "src": "4890:7:7"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3826,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3823,
                      "src": "4742:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 3827,
                        "name": "marketIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3443,
                        "src": "4746:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 3828,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4756:6:7",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4746:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4742:20:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3853,
                  "initializationExpression": {
                    "assignments": [
                      3823
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3823,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4735:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 3853,
                        "src": "4727:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3822,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4727:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3825,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 3824,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4739:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4727:13:7"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 3831,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4764:3:7",
                      "subExpression": {
                        "id": 3830,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3823,
                        "src": "4764:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3832,
                    "nodeType": "ExpressionStatement",
                    "src": "4764:3:7"
                  },
                  "nodeType": "ForStatement",
                  "src": "4722:200:7"
                },
                {
                  "expression": {
                    "id": 3854,
                    "name": "activeMarkets",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3780,
                    "src": "4947:13:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "functionReturnParameters": 3781,
                  "id": 3855,
                  "nodeType": "Return",
                  "src": "4940:20:7"
                }
              ]
            },
            "documentation": {
              "id": 3776,
              "nodeType": "StructuredDocumentation",
              "src": "4212:43:7",
              "text": " @dev Gets active markets"
            },
            "functionSelector": "a5e973c3",
            "id": 3857,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getActiveMarkets",
            "nameLocation": "4269:16:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3777,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4285:2:7"
            },
            "returnParameters": {
              "id": 3781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3780,
                  "mutability": "mutable",
                  "name": "activeMarkets",
                  "nameLocation": "4328:13:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 3857,
                  "src": "4311:30:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3778,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "4311:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 3779,
                    "nodeType": "ArrayTypeName",
                    "src": "4311:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4310:32:7"
            },
            "scope": 3940,
            "src": "4260:707:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3888,
              "nodeType": "Block",
              "src": "5089:199:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3866,
                          "name": "newOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3860,
                          "src": "5107:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3869,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5127:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3868,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5119:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3867,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5119:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3870,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5119:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5107:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466163746f72793a20696e76616c6964206f776e6572",
                        "id": 3872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5131:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_36cbe9ec0f2f499ae47acc346e3360dc856add8615203414809921a413cb75c5",
                          "typeString": "literal_string \"Factory: invalid owner\""
                        },
                        "value": "Factory: invalid owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_36cbe9ec0f2f499ae47acc346e3360dc856add8615203414809921a413cb75c5",
                          "typeString": "literal_string \"Factory: invalid owner\""
                        }
                      ],
                      "id": 3865,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5099:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5099:57:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3874,
                  "nodeType": "ExpressionStatement",
                  "src": "5099:57:7"
                },
                {
                  "assignments": [
                    3876
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3876,
                      "mutability": "mutable",
                      "name": "previousOwner",
                      "nameLocation": "5174:13:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 3888,
                      "src": "5166:21:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3875,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5166:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3878,
                  "initialValue": {
                    "id": 3877,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3416,
                    "src": "5190:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5166:29:7"
                },
                {
                  "expression": {
                    "id": 3881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3879,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3416,
                      "src": "5205:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3880,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3860,
                      "src": "5213:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5205:16:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3882,
                  "nodeType": "ExpressionStatement",
                  "src": "5205:16:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3884,
                        "name": "previousOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3876,
                        "src": "5257:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3885,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3860,
                        "src": "5272:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3883,
                      "name": "OwnershipTransferred",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3478,
                      "src": "5236:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 3886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5236:45:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3887,
                  "nodeType": "EmitStatement",
                  "src": "5231:50:7"
                }
              ]
            },
            "documentation": {
              "id": 3858,
              "nodeType": "StructuredDocumentation",
              "src": "4977:43:7",
              "text": " @dev Transfers ownership"
            },
            "functionSelector": "f2fde38b",
            "id": 3889,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3863,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3862,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "5079:9:7"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3490,
                  "src": "5079:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "5079:9:7"
              }
            ],
            "name": "transferOwnership",
            "nameLocation": "5034:17:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3861,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3860,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "5060:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 3889,
                  "src": "5052:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3859,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5052:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5051:18:7"
            },
            "returnParameters": {
              "id": 3864,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5089:0:7"
            },
            "scope": 3940,
            "src": "5025:263:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3927,
              "nodeType": "Block",
              "src": "5395:251:7",
              "statements": [
                {
                  "assignments": [
                    3896
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3896,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "5413:7:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 3927,
                      "src": "5405:15:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3895,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5405:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3902,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 3899,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "5431:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_vAMMFactory_$3940",
                            "typeString": "contract vAMMFactory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_vAMMFactory_$3940",
                            "typeString": "contract vAMMFactory"
                          }
                        ],
                        "id": 3898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5423:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 3897,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5423:7:7",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3900,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5423:13:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "5437:7:7",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "5423:21:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5405:39:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3904,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3896,
                          "src": "5462:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3905,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5472:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5462:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466163746f72793a206e6f206665657320746f207769746864726177",
                        "id": 3907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5475:30:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fec8405da7cf194848d064f54925c2d79d4639227126c1cfc96ec935c8b7dd06",
                          "typeString": "literal_string \"Factory: no fees to withdraw\""
                        },
                        "value": "Factory: no fees to withdraw"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fec8405da7cf194848d064f54925c2d79d4639227126c1cfc96ec935c8b7dd06",
                          "typeString": "literal_string \"Factory: no fees to withdraw\""
                        }
                      ],
                      "id": 3903,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5454:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5454:52:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3909,
                  "nodeType": "ExpressionStatement",
                  "src": "5454:52:7"
                },
                {
                  "assignments": [
                    3911,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3911,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "5531:7:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 3927,
                      "src": "5526:12:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3910,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5526:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 3921,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 3919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5580:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 3914,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3416,
                              "src": "5552:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3913,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5544:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 3912,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5544:8:7",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3915,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5544:14:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 3916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5559:4:7",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "5544:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 3918,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 3917,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3896,
                          "src": "5571:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "5544:35:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 3920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5544:39:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5525:58:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3923,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3911,
                        "src": "5601:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466163746f72793a207769746864726177616c206661696c6564",
                        "id": 3924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5610:28:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ef10bb204810cffbc0461bf0b8010719dc9373b6674d22a36bc72b12c0a511f9",
                          "typeString": "literal_string \"Factory: withdrawal failed\""
                        },
                        "value": "Factory: withdrawal failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ef10bb204810cffbc0461bf0b8010719dc9373b6674d22a36bc72b12c0a511f9",
                          "typeString": "literal_string \"Factory: withdrawal failed\""
                        }
                      ],
                      "id": 3922,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5593:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5593:46:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3926,
                  "nodeType": "ExpressionStatement",
                  "src": "5593:46:7"
                }
              ]
            },
            "documentation": {
              "id": 3890,
              "nodeType": "StructuredDocumentation",
              "src": "5298:49:7",
              "text": " @dev Withdraws deployment fees"
            },
            "functionSelector": "476343ee",
            "id": 3928,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3893,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3892,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "5385:9:7"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3490,
                  "src": "5385:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "5385:9:7"
              }
            ],
            "name": "withdrawFees",
            "nameLocation": "5361:12:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3891,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5373:2:7"
            },
            "returnParameters": {
              "id": 3894,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5395:0:7"
            },
            "scope": 3940,
            "src": "5352:294:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3938,
              "nodeType": "Block",
              "src": "5799:181:7",
              "statements": []
            },
            "documentation": {
              "id": 3929,
              "nodeType": "StructuredDocumentation",
              "src": "5656:66:7",
              "text": " @dev Emergency function to recover stuck tokens"
            },
            "functionSelector": "b29a8140",
            "id": 3939,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3936,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3935,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "5789:9:7"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3490,
                  "src": "5789:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "5789:9:7"
              }
            ],
            "name": "recoverToken",
            "nameLocation": "5736:12:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3934,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3931,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "5757:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 3939,
                  "src": "5749:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3930,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5749:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3933,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5772:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 3939,
                  "src": "5764:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3932,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5764:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5748:31:7"
            },
            "returnParameters": {
              "id": 3937,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5799:0:7"
            },
            "scope": 3940,
            "src": "5727:253:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3941,
        "src": "186:5796:7",
        "usedErrors": [],
        "usedEvents": [
          3462,
          3468,
          3472,
          3478
        ]
      }
    ],
    "src": "32:5951:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.20+commit.a1b79de6.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-07-10T16:59:14.183Z",
  "devdoc": {
    "details": "Factory contract for deploying vAMM instances",
    "kind": "dev",
    "methods": {
      "createMarket(string,address,address,uint256)": {
        "details": "Creates a new vAMM market"
      },
      "getActiveMarkets()": {
        "details": "Gets active markets"
      },
      "getAllMarketIds()": {
        "details": "Gets all market IDs"
      },
      "getMarket(bytes32)": {
        "details": "Gets market info by ID"
      },
      "recoverToken(address,uint256)": {
        "details": "Emergency function to recover stuck tokens"
      },
      "setDeploymentFee(uint256)": {
        "details": "Updates deployment fee"
      },
      "setMarketStatus(bytes32,bool)": {
        "details": "Updates market status"
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership"
      },
      "withdrawFees()": {
        "details": "Withdraws deployment fees"
      }
    },
    "title": "vAMMFactory",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}